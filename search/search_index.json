{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Paparazzi","text":"<p>An Android library to render your application screens without a physical device or emulator.</p> <pre><code>class LaunchViewTest {\n@get:Rule\nval paparazzi = Paparazzi(\ndeviceConfig = PIXEL_5,\ntheme = \"android:Theme.Material.Light.NoActionBar\"\n// ...see docs for more options\n)\n\n@Test\nfun launchView() {\nval view = paparazzi.inflate&lt;LaunchView&gt;(R.layout.launch)\n// or...\n// val view = LaunchView(paparazzi.context)\n\nview.setModel(LaunchModel(title = \"paparazzi\"))\npaparazzi.snapshot(view)\n}\n\n@Test\nfun launchComposable() {\npaparazzi.snapshot {\nMyComposable()\n}\n}\n}\n</code></pre>"},{"location":"#tasks","title":"Tasks","text":"<pre><code>./gradlew sample:testDebug\n</code></pre> <p>Runs tests and generates an HTML report at <code>sample/build/reports/paparazzi/</code> showing all test runs and snapshots.</p> <pre><code>./gradlew sample:recordPaparazziDebug\n</code></pre> <p>Saves snapshots as golden values to a predefined source-controlled location (defaults to <code>src/test/snapshots</code>).</p> <pre><code>./gradlew sample:verifyPaparazziDebug\n</code></pre> <p>Runs tests and verifies against previously-recorded golden values. Failures generate diffs at <code>sample/out/failures</code>.</p> <p>For more examples, check out the sample project.</p>"},{"location":"#git-lfs","title":"Git LFS","text":"<p>It is recommended you use Git LFS to store your snapshots.  Here\u2019s a quick setup:</p> <pre><code>brew install git-lfs\ngit config core.hooksPath  # optional, confirm where your git hooks will be installed\ngit lfs install --local\ngit lfs track \"**/snapshots/**/*.png\"\ngit add .gitattributes\n</code></pre> <p>On CI, you might set up something like:</p> <p><code>$HOOKS_DIR/pre-receive</code> <pre><code># compares files that match .gitattributes filter to those actually tracked by git-lfs\ndiff &lt;(git ls-files ':(attr:filter=lfs)' | sort) &lt;(git lfs ls-files -n | sort) &gt;/dev/null\n\nret=$?\nif [[ $ret -ne 0 ]]; then\necho &gt;&amp;2 \"This remote has detected files committed without using Git LFS. Run 'brew install git-lfs &amp;&amp; git lfs install' to install it and re-commit your files.\";\nexit 1;\nfi\n</code></pre></p> <p><code>your_build_script.sh</code> <pre><code>if [[ is running snapshot tests ]]; then\n# fail fast if files not checked in using git lfs\n\"$HOOKS_DIR\"/pre-receive\n  git lfs install --local\n  git lfs pull\nfi\n</code></pre></p>"},{"location":"#jetifier","title":"Jetifier","text":"<p>If using Jetifier to migrate off Support libraries, add the following to your <code>gradle.properties</code> to exclude bundled Android dependencies.</p> <pre><code>android.jetifier.ignorelist=android-base-common,common\n</code></pre>"},{"location":"#releases","title":"Releases","text":"<p>Our change log has release history.</p> <p>Using plugin application: <pre><code>buildscript {\nrepositories {\nmavenCentral()\ngoogle()\n}\ndependencies {\nclasspath 'app.cash.paparazzi:paparazzi-gradle-plugin:1.3.0'\n}\n}\n\napply plugin: 'app.cash.paparazzi'\n</code></pre></p> <p>Using the plugins DSL: <pre><code>plugins {\nid 'app.cash.paparazzi' version '1.3.0'\n}\n</code></pre></p> <p>Snapshots of the development version are available in Sonatype\u2019s <code>snapshots</code> repository.</p> <pre><code>repositories {\n// ...\nmaven {\nurl 'https://oss.sonatype.org/content/repositories/snapshots/'\n}\n}\n</code></pre>"},{"location":"#license","title":"License","text":"<pre><code>Copyright 2019 Square, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n</code></pre>"},{"location":"changelog/","title":"Change Log","text":""},{"location":"changelog/#unreleased","title":"Unreleased","text":""},{"location":"changelog/#130-2023-05-31","title":"1.3.0 - 2023-05-31","text":"<p>As of this release, consumers must build on Java 17+ environments.</p>"},{"location":"changelog/#new","title":"New","text":"<ul> <li>Migrate Paparazzi to layoutlib Flamingo 2022.2.1</li> <li>Add accessibility support for Composables</li> <li>Add layout accessibility check support</li> <li>Compose 1.4.7</li> <li>Kotlin 1.8.21</li> <li>[Gradle Plugin] Gradle 8.1.1</li> <li>[Gradle Plugin] Android Gradle Plugin 8.0.2</li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Configure android.os.Build values via reflection</li> <li>Various bug fixes with AccessibilityRenderExtension</li> <li>Make sure changes to system properties actually affect test tasks</li> <li>Fix caching bug with preparePaparazziResources task</li> <li>Use Dispatchers.Main for delay functionality</li> <li>Recomposition does not happen unless lifecycle is RESUMED</li> <li>Fix NPE when unit test variant is disabled</li> <li>Fix incompatibility with androidx.savedstate:1.1.0</li> </ul> <p>Kudos to @gamepro65, @geoff-powell, @TWiStErRob, @adamalyyan and others for contributions this release!</p>"},{"location":"changelog/#120-2023-01-18","title":"1.2.0 - 2023-01-18","text":""},{"location":"changelog/#new_1","title":"New","text":"<ul> <li>Migrate Paparazzi to layoutlib Electric Eel 2022.1.1</li> <li>Add support for RenderingMode.SHRINK to allow view-only screenshots</li> <li>Expose flag to show/hide system ui</li> <li>Register a default OnBackPressedDispatcherOwner if its present in classpath</li> <li>Bump default compileSdk to API 33</li> <li>Compose 1.3.1</li> <li>Kotlin 1.7.20</li> <li>[Gradle Plugin] Gradle 7.6</li> <li>[Gradle Plugin] Android Gradle Plugin 7.4.0</li> </ul>"},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>Flush errors on unsafeUpdateConfig</li> <li>Only apply wear circle shape to full device screenshots</li> <li>Synchronize access to Handler_Delegate.queue</li> <li>Apply compose hooks to all snapshot calls</li> <li>Register LifecycleOwner and SavedStateRegistryOwner to all views</li> <li>Execute Handler callbacks after snapshots to clean up Compose references</li> <li>Fix RecyclerView issue due to layoutlib Dolphin update</li> <li>Keep AGP and tools dependencies aligned</li> </ul> <p>Kudos to @gamepro65, @saket, @rharter and others for contributions this release!</p>"},{"location":"changelog/#110-2022-10-12","title":"1.1.0 - 2022-10-12","text":""},{"location":"changelog/#new_2","title":"New","text":"<ul> <li>Migrate Paparazzi to layoutlib Chipmunk 2021.2.1</li> <li>Add support for multiplatform plugin</li> <li>Add support for JDKs 16+</li> <li>Add support for locales and layout direction (LTR/RTL)</li> <li>Add Pixel 6 &amp; Pixel 6 Pro device configs</li> <li>Enable night mode for legacy views and composables</li> <li>Enable ui mode to support form factors other than phones/tablets, e.g., auto, watches, etc.</li> <li>Google Wear DeviceConfig support</li> <li>Expose an API for offsetting frame capture time</li> <li>Add InstantAnimationsRule to delay snapshot capture until the last frame.</li> <li>Compose 1.3.0</li> <li>Kotlin 1.7.10</li> <li>[Gradle Plugin] Gradle 7.5.1</li> </ul>"},{"location":"changelog/#fixed_2","title":"Fixed","text":"<ul> <li>Generate resource ids to support aapt inline resources in composables</li> <li>Reset AndroidUiDispatcher between compose snapshots</li> <li>Fix OOM error when a large number of compose snapshots are verified</li> <li>Fix HTML report in development mode</li> <li>Honor customization of Gradle\u2019s build output directory</li> <li>[Gradle Plugin] Configure native platform transformed path directly in test task to reduce cache misses</li> <li>[Gradle Plugin] Fix accidental eager task creation reducing memory pressure</li> <li>[Gradle Plugin] Fail explicitly when applying Android application plugin</li> </ul> <p>Kudos to @chris-horner, @swankjesse, @yschimke, @dniHze, @TWiStErRob, @gamepro65, @liutikas and others for contributions this release!</p>"},{"location":"changelog/#100-2022-06-03","title":"1.0.0 - 2022-06-03","text":""},{"location":"changelog/#new_3","title":"New","text":"<ul> <li>Support for Composable snapshots</li> <li>Migrate Paparazzi to layoutlib Bumblebee 2021.1.1 for better rendering and API 31 support</li> <li>Update Paparazzi configuration via new <code>unsafeUpdateConfig</code> method instead of <code>snapshot</code>/<code>gif</code></li> <li>Cache Paparazzi bootstrap logic for better performance per test suite</li> <li>Surface internally thrown exceptions from layoutlib</li> <li>Throw a more helpful exception if Android platform is missing</li> <li>Bump default compileSdk to API 31</li> <li>Compose 1.1.1</li> <li>Kotlin 1.6.10</li> <li>[Gradle Plugin] Gradle 7.4.2</li> <li>[Gradle Plugin] Android Gradle Plugin 7.1.2</li> </ul>"},{"location":"changelog/#fixed_3","title":"Fixed","text":"<ul> <li>Prepend paths with file:// for clickable error output in IDE</li> <li>Update default SDK path on Linux</li> <li>Fix accessibility test logic to avoid unnecessary coloring changes on updated view ids</li> <li>Fixes crash when using InputMethodManager to show/hide keyboard</li> <li>Temporarily work around Compose runtime memory leaks</li> <li>[Gradle Plugin] Prefer namespace DSL declaration over manifest package declaration</li> <li>[Gradle Plugin] Publish plugin marker on snapshot builds</li> <li>[Gradle Plugin] Exclude androidTest sourceSets during paparazzi runs</li> </ul> <p>Kudos to @luis-cortes, @nak5ive, @alexvanyo, @gamepro65 and others for contributions this release!</p>"},{"location":"changelog/#093-2022-01-20","title":"0.9.3 - 2022-01-20","text":""},{"location":"changelog/#fixed_4","title":"Fixed","text":"<ul> <li>Load the correct mac arm artifact on M1 machines</li> <li>Generate fake View.id for consistent colors for accessibility entries when views are modified</li> </ul> <p>Kudos to @geoff-powell, @nicbell for their contributions this release!</p>"},{"location":"changelog/#092-2022-01-20","title":"0.9.2 - 2022-01-20","text":"<p>Please ignore this release</p>"},{"location":"changelog/#091-2022-01-14","title":"0.9.1 - 2022-01-14","text":""},{"location":"changelog/#fixed_5","title":"Fixed","text":"<ul> <li>Download mac arm artifact if on M1 machines</li> <li>Support for assets from transitive dependencies</li> <li>Add fix for ClassNotFoundException when using nonTransitiveRClass</li> <li>Update RELEASING notes to publish plugin marker artifact</li> <li>Avoid NPE in AccessibilityRenderExtension when layout params are not supplied</li> <li>Use View.id to generate consistent colors for accessibility entries when views are modified</li> </ul> <p>Kudos to @luis-cortes, @geoff-powell, @autonomousapps and @LuK1709 for their contributions this release!</p>"},{"location":"changelog/#090-2021-11-22","title":"0.9.0 - 2021-11-22","text":""},{"location":"changelog/#new_4","title":"New","text":"<ul> <li>Migrate Paparazzi to layoutlib Arctic Fox 2020.3.1, providing native support for M1 machines</li> <li>Migrate Paparazzi to layoutlib 4.2, unlocking future Compose support</li> <li>Add support for projects enabling non-transitive resources</li> <li>RenderExtension now visits view hierarchy pre-rendering instead of layering bitmaps post-rendering</li> <li>Fail-fast when Bridge.init fails, usually due to native crash</li> <li>Expose RenderingMode as a configurable option</li> <li>Bump default compileSdk to API 30</li> <li>Improve Java-interoperability experience</li> <li>Kotlin 1.5.31</li> </ul>"},{"location":"changelog/#fixed_6","title":"Fixed","text":"<ul> <li>Don\u2019t require Android plugin to be declared before Paparazzi plugin</li> <li>Clear AnimationHandler leak after each snapshot</li> <li>Don\u2019t generate empty mov files on snapshot failure</li> <li>Add Kotlin platform bom to prevent classpath conflicts during test builds</li> <li>Use correct default Android SDK path on Windows</li> <li>Use platform-agnostic file paths in Gradle artifacts to support remote caching across platforms</li> <li>Use platform-agnostic file paths in Javascript for web page support on Windows</li> <li>Fix font scaling issue in AccessibilityRenderExtension by using bundled font</li> </ul> <p>Kudos to @luis-cortes, @geoff-powell and @TWiStErRob for their contributions this release!</p>"},{"location":"changelog/#080-2021-10-07","title":"0.8.0 - 2021-10-07","text":""},{"location":"changelog/#new_5","title":"New","text":"<ul> <li>Migrate Paparazzi to use native layoutlib for better rendering and API 30 support</li> <li>Add new extension for rendering accessibility metadata</li> <li>Add support for fontScale in DeviceConfig</li> <li>Add device config for Pixel 5</li> <li>Add tasks to Gradle task verification group</li> <li>Migrate publishing to gradle-maven-publish-plugin</li> <li>Migrate builds to Github Actions</li> <li>Migrate sample test from Burst to TestParameterInjector</li> <li>Kotlin 1.5.21</li> <li>[Gradle Plugin] Support for configuration caching</li> <li>[Gradle Plugin] Gradle 7.2</li> </ul>"},{"location":"changelog/#fixed_7","title":"Fixed","text":"<ul> <li>Add method interceptor for matrix multiplication operations</li> <li>Don\u2019t swallow FileNotFoundExceptions when overridden platform dir doesn\u2019t exist</li> <li>[Gradle Plugin] Fix remote caching bug by referencing relative, not absolute, paths in intermediate resources file.</li> </ul>"},{"location":"changelog/#071-2021-05-17","title":"0.7.1 - 2021-05-17","text":""},{"location":"changelog/#new_6","title":"New","text":"<ul> <li>[Gradle Plugin] Support the \u2013tests option for record/verify tasks</li> </ul>"},{"location":"changelog/#fixed_8","title":"Fixed","text":"<ul> <li>[Gradle Plugin] Defer task configuration until created</li> </ul>"},{"location":"changelog/#070-2021-02-26","title":"0.7.0 - 2021-02-26","text":""},{"location":"changelog/#new_7","title":"New","text":"<ul> <li>Kotlin 1.4.30</li> <li>Add support for inline complex XML resources</li> <li>Enable Burst support</li> <li>Expose maximum percentage difference in image verification as a setting</li> <li>Render extension api to add extra information to snapshots</li> <li>Allow selection of night mode in DeviceConfig</li> <li>[Gradle Plugin] Gradle 6.8.3</li> <li>[Gradle Plugin] Creating an umbrella task to execute on all variants</li> </ul>"},{"location":"changelog/#fixed_9","title":"Fixed","text":"<ul> <li>Properly execute Choreographer.doFrame after view has been laid out</li> <li>Fix broken text appearances when style resource names contain periods</li> <li>Fix ability to access asset files</li> <li>Use target-sdk to simulate device when available</li> <li>Always write screenshots to disk in record mode</li> <li>Don\u2019t crash when running on Java 12+</li> <li>[Gradle Plugin] Force test re-runs when a resource or asset has changed</li> <li>[Gradle Plugin] Force test re-runs if generated report or snapshot dirs are deleted</li> </ul>"},{"location":"changelog/#060-2020-10-02","title":"0.6.0 - 2020-10-02","text":"<p>As of this release, consumers must build on Java 11 environments.</p>"},{"location":"changelog/#new_8","title":"New","text":"<ul> <li>Point to a more recent version of layoutlib that runs on Android Q and builds with Java 11.</li> <li>Refactor Paparazzi to better support non-Gradle builds</li> <li>Added device configs for Pixel 4 series</li> </ul>"},{"location":"changelog/#052-2020-09-17","title":"0.5.2 - 2020-09-17","text":""},{"location":"changelog/#fixed_10","title":"Fixed","text":"<ul> <li>[Gradle Plugin] Fixed record and verify tasks in multi-module projects.</li> </ul>"},{"location":"changelog/#051-2020-09-17","title":"0.5.1 - 2020-09-17","text":""},{"location":"changelog/#fixed_11","title":"Fixed","text":"<ul> <li>[Gradle Plugin] Fixed race condition in record and verify tasks.</li> </ul>"},{"location":"changelog/#050-2020-09-16","title":"0.5.0 - 2020-09-16","text":"<ul> <li>Initial release.</li> </ul>"},{"location":"code_of_conduct/","title":"Open Source Code of Conduct","text":"<p>At Square, we are committed to contributing to the open source community and simplifying the process of releasing and managing open source software. We\u2019ve seen incredible support and enthusiasm from thousands of people who have already contributed to our projects\u200a\u2014\u200aand we want to ensure our community continues to be truly open for everyone.</p> <p>This code of conduct outlines our expectations for participants, as well as steps to reporting unacceptable behavior. We are committed to providing a welcoming and inspiring community for all and expect our code of conduct to be honored.</p> <p>Square\u2019s open source community strives to:</p> <ul> <li> <p>Be open: We invite anyone to participate in any aspect of our projects. Our community is    open, and any responsibility can be carried by a contributor who demonstrates the required    capacity and competence.</p> </li> <li> <p>Be considerate: People use our work, and we depend on the work of others. Consider users and    colleagues before taking action. For example, changes to code, infrastructure, policy, and    documentation may negatively impact others.</p> </li> <li> <p>Be respectful: We expect people to work together to resolve conflict, assume good intentions,    and act with empathy. Do not turn disagreements into personal attacks.</p> </li> <li> <p>Be collaborative: Collaboration reduces redundancy and improves the quality of our work. We    strive for transparency within our open source community, and we work closely with upstream    developers and others in the free software community to coordinate our efforts.</p> </li> <li> <p>Be pragmatic: Questions are encouraged and should be asked early in the process to avoid    problems later. Be thoughtful and considerate when seeking out the appropriate forum for your    questions. Those who are asked should be responsive and helpful.</p> </li> <li> <p>Step down considerately: Members of every project come and go. When somebody leaves or    disengages from the project, they should make it known and take the proper steps to ensure that    others can pick up where they left off.</p> </li> </ul> <p>This code is not exhaustive or complete. It serves to distill our common understanding of a collaborative, shared environment, and goals. We expect it to be followed in spirit as much as in the letter.</p>"},{"location":"code_of_conduct/#diversity-statement","title":"Diversity Statement","text":"<p>We encourage everyone to participate and are committed to building a community for all. Although we may not be able to satisfy everyone, we all agree that everyone is equal.</p> <p>Whenever a participant has made a mistake, we expect them to take responsibility for it. If someone has been harmed or offended, it is our responsibility to listen carefully and respectfully, and do our best to right the wrong.</p> <p>Although this list cannot be exhaustive, we explicitly honor diversity in age, culture, ethnicity, gender identity or expression, language, national origin, political beliefs, profession, race, religion, sexual orientation, socioeconomic status, and technical ability. We will not tolerate discrimination based on any of the protected characteristics above, including participants with disabilities.</p>"},{"location":"code_of_conduct/#reporting-issues","title":"Reporting Issues","text":"<p>If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com. For more details, please see our Reporting Guidelines below.</p>"},{"location":"code_of_conduct/#thanks","title":"Thanks","text":"<p>Some of the ideas and wording for the statements and guidelines above were based on work by the Twitter, Ubuntu, GDC, and Django communities. We are thankful for their work.</p>"},{"location":"code_of_conduct/#reporting-guide","title":"Reporting Guide","text":"<p>If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com. All reports will be handled with discretion.</p> <p>In your report please include:</p> <ul> <li>Your contact information.</li> <li>Names (real, nicknames, or pseudonyms) of any individuals involved. If there are additional    witnesses, please include them as well.</li> <li>Your account of what occurred, and if you believe the incident is ongoing. If there is a publicly    available record (e.g. a mailing list archive or a public IRC logger), please include a link.</li> <li>Any additional information that may be helpful.</li> </ul> <p>After filing a report, a representative from the Square Code of Conduct committee will contact you personally. The committee will then review the incident, follow up with any additional questions, and make a decision as to how to respond.</p> <p>Anyone asked to stop unacceptable behavior is expected to comply immediately. If an individual engages in unacceptable behavior, the Square Code of Conduct committee may take any action they deem appropriate, up to and including a permanent ban from all of Square spaces without warning.</p>"}]}