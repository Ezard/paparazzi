{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Paparazzi \u00b6 An Android library to render your application screens without a physical device or emulator. class LaunchViewTest { @get : Rule val paparazzi = Paparazzi ( deviceConfig = PIXEL_5 , theme = \"android:Theme.Material.Light.NoActionBar\" // ...see docs for more options ) @Test fun launchView () { val view = paparazzi . inflate < LaunchView >( R . layout . launch ) // or... // val view = LaunchView(paparazzi.context) view . setModel ( LaunchModel ( title = \"paparazzi\" )) paparazzi . snapshot ( view ) } @Test fun launchComposable () { paparazzi . snapshot { MyComposable () } } } Tasks \u00b6 $ ./gradlew sample:testDebug Runs tests and generates an HTML report at sample/build/reports/paparazzi/ showing all test runs and snapshots. $ ./gradlew sample:recordPaparazziDebug Saves snapshots as golden values to a predefined source-controlled location (defaults to src/test/snapshots ). $ ./gradlew sample:verifyPaparazziDebug Runs tests and verifies against previously-recorded golden values. Failures generate diffs at sample/out/failures . For more examples, check out the sample project. Git LFS \u00b6 It is recommended you use Git LFS to store your snapshots. Here\u2019s a quick setup: $ brew install git-lfs $ git config core.hooksPath # optional, confirm where your git hooks will be installed $ git lfs install --local $ git lfs track \"**/snapshots/**/*.png\" $ git add .gitattributes On CI, you might set up something like: $HOOKS_DIR/pre-receive # compares files that match .gitattributes filter to those actually tracked by git-lfs diff < ( git ls-files ':(attr:filter=lfs)' | sort ) < ( git lfs ls-files -n | sort ) >/dev/null ret = $? if [[ $ret -ne 0 ]] ; then echo > & 2 \"This remote has detected files committed without using Git LFS. Run 'brew install git-lfs && git lfs install' to install it and re-commit your files.\" ; exit 1 ; fi your_build_script.sh if [[ is running snapshot tests ]] ; then # fail fast if files not checked in using git lfs \" $HOOKS_DIR \" /pre-receive git lfs install --local git lfs pull fi Jetifier \u00b6 If using Jetifier to migrate off Support libraries, add the following to your gradle.properties to exclude bundled Android dependencies. android.jetifier.ignorelist=android-base-common,common Releases \u00b6 Our change log has release history. Using plugin application: buildscript { repositories { mavenCentral () google () } dependencies { classpath 'app.cash.paparazzi:paparazzi-gradle-plugin:1.2.0' } } apply plugin: 'app.cash.paparazzi' Using the plugins DSL: plugins { id 'app.cash.paparazzi' version '1.2.0' } Snapshots of the development version are available in Sonatype\u2019s snapshots repository . repositories { // ... maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' } } License \u00b6 Copyright 2019 Square, Inc. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"Overview"},{"location":"#paparazzi","text":"An Android library to render your application screens without a physical device or emulator. class LaunchViewTest { @get : Rule val paparazzi = Paparazzi ( deviceConfig = PIXEL_5 , theme = \"android:Theme.Material.Light.NoActionBar\" // ...see docs for more options ) @Test fun launchView () { val view = paparazzi . inflate < LaunchView >( R . layout . launch ) // or... // val view = LaunchView(paparazzi.context) view . setModel ( LaunchModel ( title = \"paparazzi\" )) paparazzi . snapshot ( view ) } @Test fun launchComposable () { paparazzi . snapshot { MyComposable () } } }","title":"Paparazzi"},{"location":"#tasks","text":"$ ./gradlew sample:testDebug Runs tests and generates an HTML report at sample/build/reports/paparazzi/ showing all test runs and snapshots. $ ./gradlew sample:recordPaparazziDebug Saves snapshots as golden values to a predefined source-controlled location (defaults to src/test/snapshots ). $ ./gradlew sample:verifyPaparazziDebug Runs tests and verifies against previously-recorded golden values. Failures generate diffs at sample/out/failures . For more examples, check out the sample project.","title":"Tasks"},{"location":"#git-lfs","text":"It is recommended you use Git LFS to store your snapshots. Here\u2019s a quick setup: $ brew install git-lfs $ git config core.hooksPath # optional, confirm where your git hooks will be installed $ git lfs install --local $ git lfs track \"**/snapshots/**/*.png\" $ git add .gitattributes On CI, you might set up something like: $HOOKS_DIR/pre-receive # compares files that match .gitattributes filter to those actually tracked by git-lfs diff < ( git ls-files ':(attr:filter=lfs)' | sort ) < ( git lfs ls-files -n | sort ) >/dev/null ret = $? if [[ $ret -ne 0 ]] ; then echo > & 2 \"This remote has detected files committed without using Git LFS. Run 'brew install git-lfs && git lfs install' to install it and re-commit your files.\" ; exit 1 ; fi your_build_script.sh if [[ is running snapshot tests ]] ; then # fail fast if files not checked in using git lfs \" $HOOKS_DIR \" /pre-receive git lfs install --local git lfs pull fi","title":"Git LFS"},{"location":"#jetifier","text":"If using Jetifier to migrate off Support libraries, add the following to your gradle.properties to exclude bundled Android dependencies. android.jetifier.ignorelist=android-base-common,common","title":"Jetifier"},{"location":"#releases","text":"Our change log has release history. Using plugin application: buildscript { repositories { mavenCentral () google () } dependencies { classpath 'app.cash.paparazzi:paparazzi-gradle-plugin:1.2.0' } } apply plugin: 'app.cash.paparazzi' Using the plugins DSL: plugins { id 'app.cash.paparazzi' version '1.2.0' } Snapshots of the development version are available in Sonatype\u2019s snapshots repository . repositories { // ... maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' } }","title":"Releases"},{"location":"#license","text":"Copyright 2019 Square, Inc. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"changelog/","text":"Change Log \u00b6 Version 1.2.0 \u00b6 2023-01-18 New \u00b6 Migrate Paparazzi to layoutlib Electric Eel 2022.1.1 Add support for RenderingMode.SHRINK to allow view-only screenshots Expose flag to show/hide system ui Register a default OnBackPressedDispatcherOwner if its present in classpath Bump default compileSdk to API 33 Compose 1.3.1 Kotlin 1.7.20 [Gradle Plugin] Gradle 7.6 [Gradle Plugin] Android Gradle Plugin 7.4.0 Fixed \u00b6 Flush errors on unsafeUpdateConfig Only apply wear circle shape to full device screenshots Synchronize access to Handler_Delegate.queue Apply compose hooks to all snapshot calls Register LifecycleOwner and SavedStateRegistryOwner to all views Execute Handler callbacks after snapshots to clean up Compose references Fix RecyclerView issue due to layoutlib Dolphin update Keep AGP and tools dependencies aligned Kudos to @gamepro65, @saket, @rharter and others for contributions this release! Version 1.1.0 \u00b6 2022-10-12 New \u00b6 Migrate Paparazzi to layoutlib Chipmunk 2021.2.1 Add support for multiplatform plugin Add support for JDKs 16+ Add support for locales and layout direction (LTR/RTL) Add Pixel 6 & Pixel 6 Pro device configs Enable night mode for legacy views and composables Enable ui mode to support form factors other than phones/tablets, e.g., auto, watches, etc. Google Wear DeviceConfig support Expose an API for offsetting frame capture time Add InstantAnimationsRule to delay snapshot capture until the last frame. Compose 1.3.0 Kotlin 1.7.10 [Gradle Plugin] Gradle 7.5.1 Fixed \u00b6 Generate resource ids to support aapt inline resources in composables Reset AndroidUiDispatcher between compose snapshots Fix OOM error when a large number of compose snapshots are verified Fix HTML report in development mode Honor customization of Gradle\u2019s build output directory [Gradle Plugin] Configure native platform transformed path directly in test task to reduce cache misses [Gradle Plugin] Fix accidental eager task creation reducing memory pressure [Gradle Plugin] Fail explicitly when applying Android application plugin Kudos to @chris-horner, @swankjesse, @yschimke, @dniHze, @TWiStErRob, @gamepro65, @liutikas and others for contributions this release! Version 1.0.0 \u00b6 2022-06-03 New \u00b6 Support for Composable snapshots Migrate Paparazzi to layoutlib Bumblebee 2021.1.1 for better rendering and API 31 support Update Paparazzi configuration via new unsafeUpdateConfig method instead of snapshot / gif Cache Paparazzi bootstrap logic for better performance per test suite Surface internally thrown exceptions from layoutlib Throw a more helpful exception if Android platform is missing Bump default compileSdk to API 31 Compose 1.1.1 Kotlin 1.6.10 [Gradle Plugin] Gradle 7.4.2 [Gradle Plugin] Android Gradle Plugin 7.1.2 Fixed \u00b6 Prepend paths with file:// for clickable error output in IDE Update default SDK path on Linux Fix accessibility test logic to avoid unnecessary coloring changes on updated view ids Fixes crash when using InputMethodManager to show/hide keyboard Temporarily work around Compose runtime memory leaks [Gradle Plugin] Prefer namespace DSL declaration over manifest package declaration [Gradle Plugin] Publish plugin marker on snapshot builds [Gradle Plugin] Exclude androidTest sourceSets during paparazzi runs Kudos to @luis-cortes, @nak5ive, @alexvanyo, @gamepro65 and others for contributions this release! Version 0.9.3 \u00b6 2022-01-20 Fixed \u00b6 Load the correct mac arm artifact on M1 machines Generate fake View.id for consistent colors for accessibility entries when views are modified Kudos to @geoff-powell, @nicbell for their contributions this release! Version 0.9.2 (Please ignore this release) \u00b6 2022-01-20 Version 0.9.1 \u00b6 2022-01-14 Fixed \u00b6 Download mac arm artifact if on M1 machines Support for assets from transitive dependencies Add fix for ClassNotFoundException when using nonTransitiveRClass Update RELEASING notes to publish plugin marker artifact Avoid NPE in AccessibilityRenderExtension when layout params are not supplied Use View.id to generate consistent colors for accessibility entries when views are modified Kudos to @luis-cortes, @geoff-powell, @autonomousapps and @LuK1709 for their contributions this release! Version 0.9.0 \u00b6 2021-11-22 New \u00b6 Migrate Paparazzi to layoutlib Arctic Fox 2020.3.1, providing native support for M1 machines Migrate Paparazzi to layoutlib 4.2, unlocking future Compose support Add support for projects enabling non-transitive resources RenderExtension now visits view hierarchy pre-rendering instead of layering bitmaps post-rendering Fail-fast when Bridge.init fails, usually due to native crash Expose RenderingMode as a configurable option Bump default compileSdk to API 30 Improve Java-interoperability experience Kotlin 1.5.31 Fixed \u00b6 Don\u2019t require Android plugin to be declared before Paparazzi plugin Clear AnimationHandler leak after each snapshot Don\u2019t generate empty mov files on snapshot failure Add Kotlin platform bom to prevent classpath conflicts during test builds Use correct default Android SDK path on Windows Use platform-agnostic file paths in Gradle artifacts to support remote caching across platforms Use platform-agnostic file paths in Javascript for web page support on Windows Fix font scaling issue in AccessibilityRenderExtension by using bundled font Kudos to @luis-cortes, @geoff-powell and @TWiStErRob for their contributions this release! Version 0.8.0 \u00b6 2021-10-07 New \u00b6 Migrate Paparazzi to use native layoutlib for better rendering and API 30 support Add new extension for rendering accessibility metadata Add support for fontScale in DeviceConfig Add device config for Pixel 5 Add tasks to Gradle task verification group Migrate publishing to gradle-maven-publish-plugin Migrate builds to Github Actions Migrate sample test from Burst to TestParameterInjector Kotlin 1.5.21 [Gradle Plugin] Support for configuration caching [Gradle Plugin] Gradle 7.2 Fixed \u00b6 Add method interceptor for matrix multiplication operations Don\u2019t swallow FileNotFoundExceptions when overridden platform dir doesn\u2019t exist [Gradle Plugin] Fix remote caching bug by referencing relative, not absolute, paths in intermediate resources file. Version 0.7.1 \u00b6 2021-05-17 New \u00b6 [Gradle Plugin] Support the \u2013tests option for record/verify tasks Fixed \u00b6 [Gradle Plugin] Defer task configuration until created Version 0.7.0 \u00b6 2021-02-26 New \u00b6 Kotlin 1.4.30 Add support for inline complex XML resources Enable Burst support Expose maximum percentage difference in image verification as a setting Render extension api to add extra information to snapshots Allow selection of night mode in DeviceConfig [Gradle Plugin] Gradle 6.8.3 [Gradle Plugin] Creating an umbrella task to execute on all variants Fixed \u00b6 Properly execute Choreographer.doFrame after view has been laid out Fix broken text appearances when style resource names contain periods Fix ability to access asset files Use target-sdk to simulate device when available Always write screenshots to disk in record mode Don\u2019t crash when running on Java 12+ [Gradle Plugin] Force test re-runs when a resource or asset has changed [Gradle Plugin] Force test re-runs if generated report or snapshot dirs are deleted Version 0.6.0 \u00b6 2020-10-02 As of this release, consumers must build on Java 11 environments. New \u00b6 Point to a more recent version of layoutlib that runs on Android Q and builds with Java 11. Refactor Paparazzi to better support non-Gradle builds Added device configs for Pixel 4 series Version 0.5.2 \u00b6 2020-09-17 Fixed \u00b6 [Gradle Plugin] Fixed record and verify tasks in multi-module projects. Version 0.5.1 \u00b6 2020-09-17 Fixed \u00b6 [Gradle Plugin] Fixed race condition in record and verify tasks. Version 0.5.0 \u00b6 2020-09-16 Initial release.","title":"Change Log"},{"location":"changelog/#change-log","text":"","title":"Change Log"},{"location":"changelog/#version-120","text":"2023-01-18","title":"Version 1.2.0"},{"location":"changelog/#new","text":"Migrate Paparazzi to layoutlib Electric Eel 2022.1.1 Add support for RenderingMode.SHRINK to allow view-only screenshots Expose flag to show/hide system ui Register a default OnBackPressedDispatcherOwner if its present in classpath Bump default compileSdk to API 33 Compose 1.3.1 Kotlin 1.7.20 [Gradle Plugin] Gradle 7.6 [Gradle Plugin] Android Gradle Plugin 7.4.0","title":"New"},{"location":"changelog/#fixed","text":"Flush errors on unsafeUpdateConfig Only apply wear circle shape to full device screenshots Synchronize access to Handler_Delegate.queue Apply compose hooks to all snapshot calls Register LifecycleOwner and SavedStateRegistryOwner to all views Execute Handler callbacks after snapshots to clean up Compose references Fix RecyclerView issue due to layoutlib Dolphin update Keep AGP and tools dependencies aligned Kudos to @gamepro65, @saket, @rharter and others for contributions this release!","title":"Fixed"},{"location":"changelog/#version-110","text":"2022-10-12","title":"Version 1.1.0"},{"location":"changelog/#new_1","text":"Migrate Paparazzi to layoutlib Chipmunk 2021.2.1 Add support for multiplatform plugin Add support for JDKs 16+ Add support for locales and layout direction (LTR/RTL) Add Pixel 6 & Pixel 6 Pro device configs Enable night mode for legacy views and composables Enable ui mode to support form factors other than phones/tablets, e.g., auto, watches, etc. Google Wear DeviceConfig support Expose an API for offsetting frame capture time Add InstantAnimationsRule to delay snapshot capture until the last frame. Compose 1.3.0 Kotlin 1.7.10 [Gradle Plugin] Gradle 7.5.1","title":"New"},{"location":"changelog/#fixed_1","text":"Generate resource ids to support aapt inline resources in composables Reset AndroidUiDispatcher between compose snapshots Fix OOM error when a large number of compose snapshots are verified Fix HTML report in development mode Honor customization of Gradle\u2019s build output directory [Gradle Plugin] Configure native platform transformed path directly in test task to reduce cache misses [Gradle Plugin] Fix accidental eager task creation reducing memory pressure [Gradle Plugin] Fail explicitly when applying Android application plugin Kudos to @chris-horner, @swankjesse, @yschimke, @dniHze, @TWiStErRob, @gamepro65, @liutikas and others for contributions this release!","title":"Fixed"},{"location":"changelog/#version-100","text":"2022-06-03","title":"Version 1.0.0"},{"location":"changelog/#new_2","text":"Support for Composable snapshots Migrate Paparazzi to layoutlib Bumblebee 2021.1.1 for better rendering and API 31 support Update Paparazzi configuration via new unsafeUpdateConfig method instead of snapshot / gif Cache Paparazzi bootstrap logic for better performance per test suite Surface internally thrown exceptions from layoutlib Throw a more helpful exception if Android platform is missing Bump default compileSdk to API 31 Compose 1.1.1 Kotlin 1.6.10 [Gradle Plugin] Gradle 7.4.2 [Gradle Plugin] Android Gradle Plugin 7.1.2","title":"New"},{"location":"changelog/#fixed_2","text":"Prepend paths with file:// for clickable error output in IDE Update default SDK path on Linux Fix accessibility test logic to avoid unnecessary coloring changes on updated view ids Fixes crash when using InputMethodManager to show/hide keyboard Temporarily work around Compose runtime memory leaks [Gradle Plugin] Prefer namespace DSL declaration over manifest package declaration [Gradle Plugin] Publish plugin marker on snapshot builds [Gradle Plugin] Exclude androidTest sourceSets during paparazzi runs Kudos to @luis-cortes, @nak5ive, @alexvanyo, @gamepro65 and others for contributions this release!","title":"Fixed"},{"location":"changelog/#version-093","text":"2022-01-20","title":"Version 0.9.3"},{"location":"changelog/#fixed_3","text":"Load the correct mac arm artifact on M1 machines Generate fake View.id for consistent colors for accessibility entries when views are modified Kudos to @geoff-powell, @nicbell for their contributions this release!","title":"Fixed"},{"location":"changelog/#version-092-please-ignore-this-release","text":"2022-01-20","title":"Version 0.9.2 (Please ignore this release)"},{"location":"changelog/#version-091","text":"2022-01-14","title":"Version 0.9.1"},{"location":"changelog/#fixed_4","text":"Download mac arm artifact if on M1 machines Support for assets from transitive dependencies Add fix for ClassNotFoundException when using nonTransitiveRClass Update RELEASING notes to publish plugin marker artifact Avoid NPE in AccessibilityRenderExtension when layout params are not supplied Use View.id to generate consistent colors for accessibility entries when views are modified Kudos to @luis-cortes, @geoff-powell, @autonomousapps and @LuK1709 for their contributions this release!","title":"Fixed"},{"location":"changelog/#version-090","text":"2021-11-22","title":"Version 0.9.0"},{"location":"changelog/#new_3","text":"Migrate Paparazzi to layoutlib Arctic Fox 2020.3.1, providing native support for M1 machines Migrate Paparazzi to layoutlib 4.2, unlocking future Compose support Add support for projects enabling non-transitive resources RenderExtension now visits view hierarchy pre-rendering instead of layering bitmaps post-rendering Fail-fast when Bridge.init fails, usually due to native crash Expose RenderingMode as a configurable option Bump default compileSdk to API 30 Improve Java-interoperability experience Kotlin 1.5.31","title":"New"},{"location":"changelog/#fixed_5","text":"Don\u2019t require Android plugin to be declared before Paparazzi plugin Clear AnimationHandler leak after each snapshot Don\u2019t generate empty mov files on snapshot failure Add Kotlin platform bom to prevent classpath conflicts during test builds Use correct default Android SDK path on Windows Use platform-agnostic file paths in Gradle artifacts to support remote caching across platforms Use platform-agnostic file paths in Javascript for web page support on Windows Fix font scaling issue in AccessibilityRenderExtension by using bundled font Kudos to @luis-cortes, @geoff-powell and @TWiStErRob for their contributions this release!","title":"Fixed"},{"location":"changelog/#version-080","text":"2021-10-07","title":"Version 0.8.0"},{"location":"changelog/#new_4","text":"Migrate Paparazzi to use native layoutlib for better rendering and API 30 support Add new extension for rendering accessibility metadata Add support for fontScale in DeviceConfig Add device config for Pixel 5 Add tasks to Gradle task verification group Migrate publishing to gradle-maven-publish-plugin Migrate builds to Github Actions Migrate sample test from Burst to TestParameterInjector Kotlin 1.5.21 [Gradle Plugin] Support for configuration caching [Gradle Plugin] Gradle 7.2","title":"New"},{"location":"changelog/#fixed_6","text":"Add method interceptor for matrix multiplication operations Don\u2019t swallow FileNotFoundExceptions when overridden platform dir doesn\u2019t exist [Gradle Plugin] Fix remote caching bug by referencing relative, not absolute, paths in intermediate resources file.","title":"Fixed"},{"location":"changelog/#version-071","text":"2021-05-17","title":"Version 0.7.1"},{"location":"changelog/#new_5","text":"[Gradle Plugin] Support the \u2013tests option for record/verify tasks","title":"New"},{"location":"changelog/#fixed_7","text":"[Gradle Plugin] Defer task configuration until created","title":"Fixed"},{"location":"changelog/#version-070","text":"2021-02-26","title":"Version 0.7.0"},{"location":"changelog/#new_6","text":"Kotlin 1.4.30 Add support for inline complex XML resources Enable Burst support Expose maximum percentage difference in image verification as a setting Render extension api to add extra information to snapshots Allow selection of night mode in DeviceConfig [Gradle Plugin] Gradle 6.8.3 [Gradle Plugin] Creating an umbrella task to execute on all variants","title":"New"},{"location":"changelog/#fixed_8","text":"Properly execute Choreographer.doFrame after view has been laid out Fix broken text appearances when style resource names contain periods Fix ability to access asset files Use target-sdk to simulate device when available Always write screenshots to disk in record mode Don\u2019t crash when running on Java 12+ [Gradle Plugin] Force test re-runs when a resource or asset has changed [Gradle Plugin] Force test re-runs if generated report or snapshot dirs are deleted","title":"Fixed"},{"location":"changelog/#version-060","text":"2020-10-02 As of this release, consumers must build on Java 11 environments.","title":"Version 0.6.0"},{"location":"changelog/#new_7","text":"Point to a more recent version of layoutlib that runs on Android Q and builds with Java 11. Refactor Paparazzi to better support non-Gradle builds Added device configs for Pixel 4 series","title":"New"},{"location":"changelog/#version-052","text":"2020-09-17","title":"Version 0.5.2"},{"location":"changelog/#fixed_9","text":"[Gradle Plugin] Fixed record and verify tasks in multi-module projects.","title":"Fixed"},{"location":"changelog/#version-051","text":"2020-09-17","title":"Version 0.5.1"},{"location":"changelog/#fixed_10","text":"[Gradle Plugin] Fixed race condition in record and verify tasks.","title":"Fixed"},{"location":"changelog/#version-050","text":"2020-09-16 Initial release.","title":"Version 0.5.0"},{"location":"code_of_conduct/","text":"Open Source Code of Conduct \u00b6 At Square, we are committed to contributing to the open source community and simplifying the process of releasing and managing open source software. We\u2019ve seen incredible support and enthusiasm from thousands of people who have already contributed to our projects\u200a\u2014\u200aand we want to ensure our community continues to be truly open for everyone. This code of conduct outlines our expectations for participants, as well as steps to reporting unacceptable behavior. We are committed to providing a welcoming and inspiring community for all and expect our code of conduct to be honored. Square\u2019s open source community strives to: Be open : We invite anyone to participate in any aspect of our projects. Our community is open, and any responsibility can be carried by a contributor who demonstrates the required capacity and competence. Be considerate : People use our work, and we depend on the work of others. Consider users and colleagues before taking action. For example, changes to code, infrastructure, policy, and documentation may negatively impact others. Be respectful : We expect people to work together to resolve conflict, assume good intentions, and act with empathy. Do not turn disagreements into personal attacks. Be collaborative : Collaboration reduces redundancy and improves the quality of our work. We strive for transparency within our open source community, and we work closely with upstream developers and others in the free software community to coordinate our efforts. Be pragmatic : Questions are encouraged and should be asked early in the process to avoid problems later. Be thoughtful and considerate when seeking out the appropriate forum for your questions. Those who are asked should be responsive and helpful. Step down considerately : Members of every project come and go. When somebody leaves or disengages from the project, they should make it known and take the proper steps to ensure that others can pick up where they left off. This code is not exhaustive or complete. It serves to distill our common understanding of a collaborative, shared environment, and goals. We expect it to be followed in spirit as much as in the letter. Diversity Statement \u00b6 We encourage everyone to participate and are committed to building a community for all. Although we may not be able to satisfy everyone, we all agree that everyone is equal. Whenever a participant has made a mistake, we expect them to take responsibility for it. If someone has been harmed or offended, it is our responsibility to listen carefully and respectfully, and do our best to right the wrong. Although this list cannot be exhaustive, we explicitly honor diversity in age, culture, ethnicity, gender identity or expression, language, national origin, political beliefs, profession, race, religion, sexual orientation, socioeconomic status, and technical ability. We will not tolerate discrimination based on any of the protected characteristics above, including participants with disabilities. Reporting Issues \u00b6 If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com . For more details, please see our Reporting Guidelines below. Thanks \u00b6 Some of the ideas and wording for the statements and guidelines above were based on work by the Twitter , Ubuntu , GDC , and Django communities. We are thankful for their work. Reporting Guide \u00b6 If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com . All reports will be handled with discretion. In your report please include: Your contact information. Names (real, nicknames, or pseudonyms) of any individuals involved. If there are additional witnesses, please include them as well. Your account of what occurred, and if you believe the incident is ongoing. If there is a publicly available record (e.g. a mailing list archive or a public IRC logger), please include a link. Any additional information that may be helpful. After filing a report, a representative from the Square Code of Conduct committee will contact you personally. The committee will then review the incident, follow up with any additional questions, and make a decision as to how to respond. Anyone asked to stop unacceptable behavior is expected to comply immediately. If an individual engages in unacceptable behavior, the Square Code of Conduct committee may take any action they deem appropriate, up to and including a permanent ban from all of Square spaces without warning.","title":"Code of Conduct"},{"location":"code_of_conduct/#open-source-code-of-conduct","text":"At Square, we are committed to contributing to the open source community and simplifying the process of releasing and managing open source software. We\u2019ve seen incredible support and enthusiasm from thousands of people who have already contributed to our projects\u200a\u2014\u200aand we want to ensure our community continues to be truly open for everyone. This code of conduct outlines our expectations for participants, as well as steps to reporting unacceptable behavior. We are committed to providing a welcoming and inspiring community for all and expect our code of conduct to be honored. Square\u2019s open source community strives to: Be open : We invite anyone to participate in any aspect of our projects. Our community is open, and any responsibility can be carried by a contributor who demonstrates the required capacity and competence. Be considerate : People use our work, and we depend on the work of others. Consider users and colleagues before taking action. For example, changes to code, infrastructure, policy, and documentation may negatively impact others. Be respectful : We expect people to work together to resolve conflict, assume good intentions, and act with empathy. Do not turn disagreements into personal attacks. Be collaborative : Collaboration reduces redundancy and improves the quality of our work. We strive for transparency within our open source community, and we work closely with upstream developers and others in the free software community to coordinate our efforts. Be pragmatic : Questions are encouraged and should be asked early in the process to avoid problems later. Be thoughtful and considerate when seeking out the appropriate forum for your questions. Those who are asked should be responsive and helpful. Step down considerately : Members of every project come and go. When somebody leaves or disengages from the project, they should make it known and take the proper steps to ensure that others can pick up where they left off. This code is not exhaustive or complete. It serves to distill our common understanding of a collaborative, shared environment, and goals. We expect it to be followed in spirit as much as in the letter.","title":"Open Source Code of Conduct"},{"location":"code_of_conduct/#diversity-statement","text":"We encourage everyone to participate and are committed to building a community for all. Although we may not be able to satisfy everyone, we all agree that everyone is equal. Whenever a participant has made a mistake, we expect them to take responsibility for it. If someone has been harmed or offended, it is our responsibility to listen carefully and respectfully, and do our best to right the wrong. Although this list cannot be exhaustive, we explicitly honor diversity in age, culture, ethnicity, gender identity or expression, language, national origin, political beliefs, profession, race, religion, sexual orientation, socioeconomic status, and technical ability. We will not tolerate discrimination based on any of the protected characteristics above, including participants with disabilities.","title":"Diversity Statement"},{"location":"code_of_conduct/#reporting-issues","text":"If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com . For more details, please see our Reporting Guidelines below.","title":"Reporting Issues"},{"location":"code_of_conduct/#thanks","text":"Some of the ideas and wording for the statements and guidelines above were based on work by the Twitter , Ubuntu , GDC , and Django communities. We are thankful for their work.","title":"Thanks"},{"location":"code_of_conduct/#reporting-guide","text":"If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com . All reports will be handled with discretion. In your report please include: Your contact information. Names (real, nicknames, or pseudonyms) of any individuals involved. If there are additional witnesses, please include them as well. Your account of what occurred, and if you believe the incident is ongoing. If there is a publicly available record (e.g. a mailing list archive or a public IRC logger), please include a link. Any additional information that may be helpful. After filing a report, a representative from the Square Code of Conduct committee will contact you personally. The committee will then review the incident, follow up with any additional questions, and make a decision as to how to respond. Anyone asked to stop unacceptable behavior is expected to comply immediately. If an individual engages in unacceptable behavior, the Square Code of Conduct committee may take any action they deem appropriate, up to and including a permanent ban from all of Square spaces without warning.","title":"Reporting Guide"},{"location":"1.x/","text":"// paparazzi paparazzi \u00b6 Packages \u00b6 Name app.cash.paparazzi app.cash.paparazzi.accessibility app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated app.cash.paparazzi.deprecated.com.android.io app.cash.paparazzi.internal app.cash.paparazzi.internal.parsers app.cash.paparazzi.internal.resources","title":"paparazzi - Paparazzi"},{"location":"1.x/#paparazzi","text":"","title":"paparazzi"},{"location":"1.x/#packages","text":"Name app.cash.paparazzi app.cash.paparazzi.accessibility app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated app.cash.paparazzi.deprecated.com.android.io app.cash.paparazzi.internal app.cash.paparazzi.internal.parsers app.cash.paparazzi.internal.resources","title":"Packages"},{"location":"1.x/paparazzi/app.cash.paparazzi/","text":"// paparazzi / app.cash.paparazzi Package-level declarations \u00b6 Types \u00b6 Name Summary DeviceConfig [jvm] data class DeviceConfig (val screenHeight: Int = 1280, val screenWidth: Int = 768, val xdpi: Int = 320, val ydpi: Int = 320, val orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, val uiMode: UiMode = UiMode.NORMAL, val nightMode: NightMode = NightMode.NOTNIGHT, val density: Density = Density.XHIGH, val fontScale: Float = 1.0f, val layoutDirection: LayoutDirection = LayoutDirection.LTR, val locale: String ? = null, val ratio: ScreenRatio = ScreenRatio.NOTLONG, val size: ScreenSize = ScreenSize.NORMAL, val keyboard: Keyboard = Keyboard.NOKEY, val touchScreen: TouchScreen = TouchScreen.FINGER, val keyboardState: KeyboardState = KeyboardState.SOFT, val softButtons: Boolean = true, val navigation: Navigation = Navigation.NONAV, val screenRound: ScreenRound? = null, val released: String = \"November 13, 2012\") Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps. Environment [jvm] data class Environment (val platformDir: String , val appTestDir: String , val resDir: String , val assetsDir: String , val packageName: String , val compileSdkVersion: Int , val resourcePackageNames: List < String >) Flags [jvm] object Flags HtmlReportWriter [jvm] class HtmlReportWriter @ JvmOverloads constructor(runName: String = defaultRunName(), rootDirectory: File = File(\"${System.getProperty(\"paparazzi.build.dir\", \"build\")}/reports/paparazzi\"), snapshotRootDirectory: File = File(\"src/test/snapshots\")) : SnapshotHandler Creates an HTML report that avoids writing files that have already been written. InstantAnimationsRule [jvm] class InstantAnimationsRule : TestRule Sets animation duration scale to 0 so all animations run instantly. Use this with Paparazzi to skip animations and snapshot their terminal state. Paparazzi [jvm] class Paparazzi @ JvmOverloads constructor(environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference), renderExtensions: Set < RenderExtension > = setOf(), supportsRtl: Boolean = false, showSystemUi: Boolean = true, validateAccessibility: Boolean = false) : TestRule RenderExtension [jvm] interface RenderExtension An extension for overlaying additional information on top of each rendered frame. Snapshot [jvm] @JsonClass(generateAdapter = true) data class Snapshot (val name: String ?, val testName: TestName , val timestamp: Date , val tags: List < String > = listOf(), val file: String ? = null) SnapshotHandler [jvm] interface SnapshotHandler : Closeable SnapshotVerifier [jvm] class SnapshotVerifier @ JvmOverloads constructor(maxPercentDifference: Double , rootDirectory: File = File(\"src/test/snapshots\")) : SnapshotHandler TestName [jvm] data class TestName (val packageName: String , val className: String , val methodName: String ) Functions \u00b6 Name Summary androidHome [jvm] fun androidHome (): String detectEnvironment [jvm] fun detectEnvironment (): Environment","title":"1.x API"},{"location":"1.x/paparazzi/app.cash.paparazzi/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"1.x/paparazzi/app.cash.paparazzi/#types","text":"Name Summary DeviceConfig [jvm] data class DeviceConfig (val screenHeight: Int = 1280, val screenWidth: Int = 768, val xdpi: Int = 320, val ydpi: Int = 320, val orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, val uiMode: UiMode = UiMode.NORMAL, val nightMode: NightMode = NightMode.NOTNIGHT, val density: Density = Density.XHIGH, val fontScale: Float = 1.0f, val layoutDirection: LayoutDirection = LayoutDirection.LTR, val locale: String ? = null, val ratio: ScreenRatio = ScreenRatio.NOTLONG, val size: ScreenSize = ScreenSize.NORMAL, val keyboard: Keyboard = Keyboard.NOKEY, val touchScreen: TouchScreen = TouchScreen.FINGER, val keyboardState: KeyboardState = KeyboardState.SOFT, val softButtons: Boolean = true, val navigation: Navigation = Navigation.NONAV, val screenRound: ScreenRound? = null, val released: String = \"November 13, 2012\") Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps. Environment [jvm] data class Environment (val platformDir: String , val appTestDir: String , val resDir: String , val assetsDir: String , val packageName: String , val compileSdkVersion: Int , val resourcePackageNames: List < String >) Flags [jvm] object Flags HtmlReportWriter [jvm] class HtmlReportWriter @ JvmOverloads constructor(runName: String = defaultRunName(), rootDirectory: File = File(\"${System.getProperty(\"paparazzi.build.dir\", \"build\")}/reports/paparazzi\"), snapshotRootDirectory: File = File(\"src/test/snapshots\")) : SnapshotHandler Creates an HTML report that avoids writing files that have already been written. InstantAnimationsRule [jvm] class InstantAnimationsRule : TestRule Sets animation duration scale to 0 so all animations run instantly. Use this with Paparazzi to skip animations and snapshot their terminal state. Paparazzi [jvm] class Paparazzi @ JvmOverloads constructor(environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference), renderExtensions: Set < RenderExtension > = setOf(), supportsRtl: Boolean = false, showSystemUi: Boolean = true, validateAccessibility: Boolean = false) : TestRule RenderExtension [jvm] interface RenderExtension An extension for overlaying additional information on top of each rendered frame. Snapshot [jvm] @JsonClass(generateAdapter = true) data class Snapshot (val name: String ?, val testName: TestName , val timestamp: Date , val tags: List < String > = listOf(), val file: String ? = null) SnapshotHandler [jvm] interface SnapshotHandler : Closeable SnapshotVerifier [jvm] class SnapshotVerifier @ JvmOverloads constructor(maxPercentDifference: Double , rootDirectory: File = File(\"src/test/snapshots\")) : SnapshotHandler TestName [jvm] data class TestName (val packageName: String , val className: String , val methodName: String )","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi/#functions","text":"Name Summary androidHome [jvm] fun androidHome (): String detectEnvironment [jvm] fun detectEnvironment (): Environment","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi/android-home/","text":"// paparazzi / app.cash.paparazzi / androidHome androidHome \u00b6 [jvm]\\ fun androidHome (): String","title":"androidHome - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/android-home/#androidhome","text":"[jvm]\\ fun androidHome (): String","title":"androidHome"},{"location":"1.x/paparazzi/app.cash.paparazzi/detect-environment/","text":"// paparazzi / app.cash.paparazzi / detectEnvironment detectEnvironment \u00b6 [jvm]\\ fun detectEnvironment (): Environment","title":"detectEnvironment - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/detect-environment/#detectenvironment","text":"[jvm]\\ fun detectEnvironment (): Environment","title":"detectEnvironment"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig DeviceConfig \u00b6 [jvm]\\ data class DeviceConfig (val screenHeight: Int = 1280, val screenWidth: Int = 768, val xdpi: Int = 320, val ydpi: Int = 320, val orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, val uiMode: UiMode = UiMode.NORMAL, val nightMode: NightMode = NightMode.NOTNIGHT, val density: Density = Density.XHIGH, val fontScale: Float = 1.0f, val layoutDirection: LayoutDirection = LayoutDirection.LTR, val locale: String ? = null, val ratio: ScreenRatio = ScreenRatio.NOTLONG, val size: ScreenSize = ScreenSize.NORMAL, val keyboard: Keyboard = Keyboard.NOKEY, val touchScreen: TouchScreen = TouchScreen.FINGER, val keyboardState: KeyboardState = KeyboardState.SOFT, val softButtons: Boolean = true, val navigation: Navigation = Navigation.NONAV, val screenRound: ScreenRound? = null, val released: String = \"November 13, 2012\") Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps. Defaults are for a Nexus 4 device. Constructors \u00b6 DeviceConfig [jvm] fun DeviceConfig (screenHeight: Int = 1280, screenWidth: Int = 768, xdpi: Int = 320, ydpi: Int = 320, orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, uiMode: UiMode = UiMode.NORMAL, nightMode: NightMode = NightMode.NOTNIGHT, density: Density = Density.XHIGH, fontScale: Float = 1.0f, layoutDirection: LayoutDirection = LayoutDirection.LTR, locale: String ? = null, ratio: ScreenRatio = ScreenRatio.NOTLONG, size: ScreenSize = ScreenSize.NORMAL, keyboard: Keyboard = Keyboard.NOKEY, touchScreen: TouchScreen = TouchScreen.FINGER, keyboardState: KeyboardState = KeyboardState.SOFT, softButtons: Boolean = true, navigation: Navigation = Navigation.NONAV, screenRound: ScreenRound? = null, released: String = \"November 13, 2012\") Types \u00b6 Name Summary Companion [jvm] object Companion Device specs per: https://android.googlesource.com/platform/tools/base/+/mirror-goog-studio-master-dev/sdklib/src/main/java/com/android/sdklib/devices/nexus.xml Properties \u00b6 Name Summary density [jvm] val density : Density folderConfiguration [jvm] val folderConfiguration : FolderConfiguration fontScale [jvm] val fontScale : Float = 1.0f hardwareConfig [jvm] val hardwareConfig : HardwareConfig keyboard [jvm] val keyboard : Keyboard keyboardState [jvm] val keyboardState : KeyboardState layoutDirection [jvm] val layoutDirection : LayoutDirection locale [jvm] val locale : String ? = null navigation [jvm] val navigation : Navigation nightMode [jvm] val nightMode : NightMode orientation [jvm] val orientation : ScreenOrientation ratio [jvm] val ratio : ScreenRatio released [jvm] val released : String screenHeight [jvm] val screenHeight : Int = 1280 screenRound [jvm] val screenRound : ScreenRound? = null screenWidth [jvm] val screenWidth : Int = 768 size [jvm] val size : ScreenSize softButtons [jvm] val softButtons : Boolean = true touchScreen [jvm] val touchScreen : TouchScreen uiMode [jvm] val uiMode : UiMode uiModeMask [jvm] val uiModeMask : Int xdpi [jvm] val xdpi : Int = 320 ydpi [jvm] val ydpi : Int = 320","title":"DeviceConfig - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/#deviceconfig","text":"[jvm]\\ data class DeviceConfig (val screenHeight: Int = 1280, val screenWidth: Int = 768, val xdpi: Int = 320, val ydpi: Int = 320, val orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, val uiMode: UiMode = UiMode.NORMAL, val nightMode: NightMode = NightMode.NOTNIGHT, val density: Density = Density.XHIGH, val fontScale: Float = 1.0f, val layoutDirection: LayoutDirection = LayoutDirection.LTR, val locale: String ? = null, val ratio: ScreenRatio = ScreenRatio.NOTLONG, val size: ScreenSize = ScreenSize.NORMAL, val keyboard: Keyboard = Keyboard.NOKEY, val touchScreen: TouchScreen = TouchScreen.FINGER, val keyboardState: KeyboardState = KeyboardState.SOFT, val softButtons: Boolean = true, val navigation: Navigation = Navigation.NONAV, val screenRound: ScreenRound? = null, val released: String = \"November 13, 2012\") Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps. Defaults are for a Nexus 4 device.","title":"DeviceConfig"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/#constructors","text":"DeviceConfig [jvm] fun DeviceConfig (screenHeight: Int = 1280, screenWidth: Int = 768, xdpi: Int = 320, ydpi: Int = 320, orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, uiMode: UiMode = UiMode.NORMAL, nightMode: NightMode = NightMode.NOTNIGHT, density: Density = Density.XHIGH, fontScale: Float = 1.0f, layoutDirection: LayoutDirection = LayoutDirection.LTR, locale: String ? = null, ratio: ScreenRatio = ScreenRatio.NOTLONG, size: ScreenSize = ScreenSize.NORMAL, keyboard: Keyboard = Keyboard.NOKEY, touchScreen: TouchScreen = TouchScreen.FINGER, keyboardState: KeyboardState = KeyboardState.SOFT, softButtons: Boolean = true, navigation: Navigation = Navigation.NONAV, screenRound: ScreenRound? = null, released: String = \"November 13, 2012\")","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/#types","text":"Name Summary Companion [jvm] object Companion Device specs per: https://android.googlesource.com/platform/tools/base/+/mirror-goog-studio-master-dev/sdklib/src/main/java/com/android/sdklib/devices/nexus.xml","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/#properties","text":"Name Summary density [jvm] val density : Density folderConfiguration [jvm] val folderConfiguration : FolderConfiguration fontScale [jvm] val fontScale : Float = 1.0f hardwareConfig [jvm] val hardwareConfig : HardwareConfig keyboard [jvm] val keyboard : Keyboard keyboardState [jvm] val keyboardState : KeyboardState layoutDirection [jvm] val layoutDirection : LayoutDirection locale [jvm] val locale : String ? = null navigation [jvm] val navigation : Navigation nightMode [jvm] val nightMode : NightMode orientation [jvm] val orientation : ScreenOrientation ratio [jvm] val ratio : ScreenRatio released [jvm] val released : String screenHeight [jvm] val screenHeight : Int = 1280 screenRound [jvm] val screenRound : ScreenRound? = null screenWidth [jvm] val screenWidth : Int = 768 size [jvm] val size : ScreenSize softButtons [jvm] val softButtons : Boolean = true touchScreen [jvm] val touchScreen : TouchScreen uiMode [jvm] val uiMode : UiMode uiModeMask [jvm] val uiModeMask : Int xdpi [jvm] val xdpi : Int = 320 ydpi [jvm] val ydpi : Int = 320","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-device-config/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / DeviceConfig DeviceConfig \u00b6 [jvm]\\ fun DeviceConfig (screenHeight: Int = 1280, screenWidth: Int = 768, xdpi: Int = 320, ydpi: Int = 320, orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, uiMode: UiMode = UiMode.NORMAL, nightMode: NightMode = NightMode.NOTNIGHT, density: Density = Density.XHIGH, fontScale: Float = 1.0f, layoutDirection: LayoutDirection = LayoutDirection.LTR, locale: String ? = null, ratio: ScreenRatio = ScreenRatio.NOTLONG, size: ScreenSize = ScreenSize.NORMAL, keyboard: Keyboard = Keyboard.NOKEY, touchScreen: TouchScreen = TouchScreen.FINGER, keyboardState: KeyboardState = KeyboardState.SOFT, softButtons: Boolean = true, navigation: Navigation = Navigation.NONAV, screenRound: ScreenRound? = null, released: String = \"November 13, 2012\")","title":"DeviceConfig - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-device-config/#deviceconfig","text":"[jvm]\\ fun DeviceConfig (screenHeight: Int = 1280, screenWidth: Int = 768, xdpi: Int = 320, ydpi: Int = 320, orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, uiMode: UiMode = UiMode.NORMAL, nightMode: NightMode = NightMode.NOTNIGHT, density: Density = Density.XHIGH, fontScale: Float = 1.0f, layoutDirection: LayoutDirection = LayoutDirection.LTR, locale: String ? = null, ratio: ScreenRatio = ScreenRatio.NOTLONG, size: ScreenSize = ScreenSize.NORMAL, keyboard: Keyboard = Keyboard.NOKEY, touchScreen: TouchScreen = TouchScreen.FINGER, keyboardState: KeyboardState = KeyboardState.SOFT, softButtons: Boolean = true, navigation: Navigation = Navigation.NONAV, screenRound: ScreenRound? = null, released: String = \"November 13, 2012\")","title":"DeviceConfig"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/density/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / density density \u00b6 [jvm]\\ val density : Density","title":"density - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/density/#density","text":"[jvm]\\ val density : Density","title":"density"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/folder-configuration/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / folderConfiguration folderConfiguration \u00b6 [jvm]\\ val folderConfiguration : FolderConfiguration","title":"folderConfiguration - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/folder-configuration/#folderconfiguration","text":"[jvm]\\ val folderConfiguration : FolderConfiguration","title":"folderConfiguration"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/font-scale/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / fontScale fontScale \u00b6 [jvm]\\ val fontScale : Float = 1.0f","title":"fontScale - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/font-scale/#fontscale","text":"[jvm]\\ val fontScale : Float = 1.0f","title":"fontScale"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/hardware-config/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / hardwareConfig hardwareConfig \u00b6 [jvm]\\ val hardwareConfig : HardwareConfig","title":"hardwareConfig - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/hardware-config/#hardwareconfig","text":"[jvm]\\ val hardwareConfig : HardwareConfig","title":"hardwareConfig"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/keyboard-state/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / keyboardState keyboardState \u00b6 [jvm]\\ val keyboardState : KeyboardState","title":"keyboardState - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/keyboard-state/#keyboardstate","text":"[jvm]\\ val keyboardState : KeyboardState","title":"keyboardState"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/keyboard/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / keyboard keyboard \u00b6 [jvm]\\ val keyboard : Keyboard","title":"keyboard - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/keyboard/#keyboard","text":"[jvm]\\ val keyboard : Keyboard","title":"keyboard"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/layout-direction/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / layoutDirection layoutDirection \u00b6 [jvm]\\ val layoutDirection : LayoutDirection","title":"layoutDirection - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/layout-direction/#layoutdirection","text":"[jvm]\\ val layoutDirection : LayoutDirection","title":"layoutDirection"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/locale/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / locale locale \u00b6 [jvm]\\ val locale : String ? = null","title":"locale - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/locale/#locale","text":"[jvm]\\ val locale : String ? = null","title":"locale"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/navigation/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / navigation navigation \u00b6 [jvm]\\ val navigation : Navigation","title":"navigation - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/navigation/#navigation","text":"[jvm]\\ val navigation : Navigation","title":"navigation"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/night-mode/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / nightMode nightMode \u00b6 [jvm]\\ val nightMode : NightMode","title":"nightMode - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/night-mode/#nightmode","text":"[jvm]\\ val nightMode : NightMode","title":"nightMode"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/orientation/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / orientation orientation \u00b6 [jvm]\\ val orientation : ScreenOrientation","title":"orientation - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/orientation/#orientation","text":"[jvm]\\ val orientation : ScreenOrientation","title":"orientation"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ratio/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / ratio ratio \u00b6 [jvm]\\ val ratio : ScreenRatio","title":"ratio - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ratio/#ratio","text":"[jvm]\\ val ratio : ScreenRatio","title":"ratio"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/released/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / released released \u00b6 [jvm]\\ val released : String","title":"released - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/released/#released","text":"[jvm]\\ val released : String","title":"released"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/screen-height/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / screenHeight screenHeight \u00b6 [jvm]\\ val screenHeight : Int = 1280","title":"screenHeight - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/screen-height/#screenheight","text":"[jvm]\\ val screenHeight : Int = 1280","title":"screenHeight"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/screen-round/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / screenRound screenRound \u00b6 [jvm]\\ val screenRound : ScreenRound? = null","title":"screenRound - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/screen-round/#screenround","text":"[jvm]\\ val screenRound : ScreenRound? = null","title":"screenRound"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/screen-width/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / screenWidth screenWidth \u00b6 [jvm]\\ val screenWidth : Int = 768","title":"screenWidth - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/screen-width/#screenwidth","text":"[jvm]\\ val screenWidth : Int = 768","title":"screenWidth"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/size/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / size size \u00b6 [jvm]\\ val size : ScreenSize","title":"size - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/size/#size","text":"[jvm]\\ val size : ScreenSize","title":"size"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/soft-buttons/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / softButtons softButtons \u00b6 [jvm]\\ val softButtons : Boolean = true","title":"softButtons - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/soft-buttons/#softbuttons","text":"[jvm]\\ val softButtons : Boolean = true","title":"softButtons"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/touch-screen/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / touchScreen touchScreen \u00b6 [jvm]\\ val touchScreen : TouchScreen","title":"touchScreen - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/touch-screen/#touchscreen","text":"[jvm]\\ val touchScreen : TouchScreen","title":"touchScreen"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ui-mode-mask/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / uiModeMask uiModeMask \u00b6 [jvm]\\ val uiModeMask : Int","title":"uiModeMask - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ui-mode-mask/#uimodemask","text":"[jvm]\\ val uiModeMask : Int","title":"uiModeMask"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ui-mode/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / uiMode uiMode \u00b6 [jvm]\\ val uiMode : UiMode","title":"uiMode - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ui-mode/#uimode","text":"[jvm]\\ val uiMode : UiMode","title":"uiMode"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/xdpi/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / xdpi xdpi \u00b6 [jvm]\\ val xdpi : Int = 320","title":"xdpi - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/xdpi/#xdpi","text":"[jvm]\\ val xdpi : Int = 320","title":"xdpi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ydpi/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / ydpi ydpi \u00b6 [jvm]\\ val ydpi : Int = 320","title":"ydpi - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/ydpi/#ydpi","text":"[jvm]\\ val ydpi : Int = 320","title":"ydpi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion Companion \u00b6 [jvm]\\ object Companion Device specs per: https://android.googlesource.com/platform/tools/base/+/mirror-goog-studio-master-dev/sdklib/src/main/java/com/android/sdklib/devices/nexus.xml Release dates obtained from Wikipedia. Functions \u00b6 Name Summary getEnumMap [jvm] fun getEnumMap (path: File ): Map < String , Map < String , Int >> loadProperties [jvm] fun loadProperties (path: File ): Map < String , String > Properties \u00b6 Name Summary GALAXY_WATCH4_CLASSIC_LARGE [jvm] val GALAXY_WATCH4_CLASSIC_LARGE : DeviceConfig NEXUS_10 [jvm] @ JvmField val NEXUS_10 : DeviceConfig NEXUS_4 [jvm] @ JvmField val NEXUS_4 : DeviceConfig NEXUS_5 [jvm] @ JvmField val NEXUS_5 : DeviceConfig NEXUS_5_LAND [jvm] @ JvmField val NEXUS_5_LAND : DeviceConfig NEXUS_7 [jvm] @ JvmField val NEXUS_7 : DeviceConfig NEXUS_7_2012 [jvm] @ JvmField val NEXUS_7_2012 : DeviceConfig PIXEL [jvm] @ JvmField val PIXEL : DeviceConfig PIXEL_2 [jvm] @ JvmField val PIXEL_2 : DeviceConfig PIXEL_2_XL [jvm] @ JvmField val PIXEL_2_XL : DeviceConfig PIXEL_3 [jvm] @ JvmField val PIXEL_3 : DeviceConfig PIXEL_3_XL [jvm] @ JvmField val PIXEL_3_XL : DeviceConfig PIXEL_3A [jvm] @ JvmField val PIXEL_3A : DeviceConfig PIXEL_3A_XL [jvm] @ JvmField val PIXEL_3A_XL : DeviceConfig PIXEL_4 [jvm] @ JvmField val PIXEL_4 : DeviceConfig PIXEL_4_XL [jvm] @ JvmField val PIXEL_4_XL : DeviceConfig PIXEL_4A [jvm] @ JvmField val PIXEL_4A : DeviceConfig PIXEL_5 [jvm] @ JvmField val PIXEL_5 : DeviceConfig PIXEL_6 [jvm] @ JvmField val PIXEL_6 : DeviceConfig PIXEL_6_PRO [jvm] @ JvmField val PIXEL_6_PRO : DeviceConfig PIXEL_C [jvm] @ JvmField val PIXEL_C : DeviceConfig PIXEL_XL [jvm] @ JvmField val PIXEL_XL : DeviceConfig WEAR_OS_SMALL_ROUND [jvm] @ JvmField val WEAR_OS_SMALL_ROUND : DeviceConfig WEAR_OS_SQUARE [jvm] @ JvmField val WEAR_OS_SQUARE : DeviceConfig","title":"Companion - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/#companion","text":"[jvm]\\ object Companion Device specs per: https://android.googlesource.com/platform/tools/base/+/mirror-goog-studio-master-dev/sdklib/src/main/java/com/android/sdklib/devices/nexus.xml Release dates obtained from Wikipedia.","title":"Companion"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/#functions","text":"Name Summary getEnumMap [jvm] fun getEnumMap (path: File ): Map < String , Map < String , Int >> loadProperties [jvm] fun loadProperties (path: File ): Map < String , String >","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/#properties","text":"Name Summary GALAXY_WATCH4_CLASSIC_LARGE [jvm] val GALAXY_WATCH4_CLASSIC_LARGE : DeviceConfig NEXUS_10 [jvm] @ JvmField val NEXUS_10 : DeviceConfig NEXUS_4 [jvm] @ JvmField val NEXUS_4 : DeviceConfig NEXUS_5 [jvm] @ JvmField val NEXUS_5 : DeviceConfig NEXUS_5_LAND [jvm] @ JvmField val NEXUS_5_LAND : DeviceConfig NEXUS_7 [jvm] @ JvmField val NEXUS_7 : DeviceConfig NEXUS_7_2012 [jvm] @ JvmField val NEXUS_7_2012 : DeviceConfig PIXEL [jvm] @ JvmField val PIXEL : DeviceConfig PIXEL_2 [jvm] @ JvmField val PIXEL_2 : DeviceConfig PIXEL_2_XL [jvm] @ JvmField val PIXEL_2_XL : DeviceConfig PIXEL_3 [jvm] @ JvmField val PIXEL_3 : DeviceConfig PIXEL_3_XL [jvm] @ JvmField val PIXEL_3_XL : DeviceConfig PIXEL_3A [jvm] @ JvmField val PIXEL_3A : DeviceConfig PIXEL_3A_XL [jvm] @ JvmField val PIXEL_3A_XL : DeviceConfig PIXEL_4 [jvm] @ JvmField val PIXEL_4 : DeviceConfig PIXEL_4_XL [jvm] @ JvmField val PIXEL_4_XL : DeviceConfig PIXEL_4A [jvm] @ JvmField val PIXEL_4A : DeviceConfig PIXEL_5 [jvm] @ JvmField val PIXEL_5 : DeviceConfig PIXEL_6 [jvm] @ JvmField val PIXEL_6 : DeviceConfig PIXEL_6_PRO [jvm] @ JvmField val PIXEL_6_PRO : DeviceConfig PIXEL_C [jvm] @ JvmField val PIXEL_C : DeviceConfig PIXEL_XL [jvm] @ JvmField val PIXEL_XL : DeviceConfig WEAR_OS_SMALL_ROUND [jvm] @ JvmField val WEAR_OS_SMALL_ROUND : DeviceConfig WEAR_OS_SQUARE [jvm] @ JvmField val WEAR_OS_SQUARE : DeviceConfig","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-g-a-l-a-x-y_-w-a-t-c-h4_-c-l-a-s-s-i-c_-l-a-r-g-e/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / GALAXY_WATCH4_CLASSIC_LARGE GALAXY_WATCH4_CLASSIC_LARGE \u00b6 [jvm]\\ val GALAXY_WATCH4_CLASSIC_LARGE : DeviceConfig","title":"GALAXY_WATCH4_CLASSIC_LARGE - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-g-a-l-a-x-y_-w-a-t-c-h4_-c-l-a-s-s-i-c_-l-a-r-g-e/#galaxy_watch4_classic_large","text":"[jvm]\\ val GALAXY_WATCH4_CLASSIC_LARGE : DeviceConfig","title":"GALAXY_WATCH4_CLASSIC_LARGE"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_10/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / NEXUS_10 NEXUS_10 \u00b6 [jvm]\\ @ JvmField val NEXUS_10 : DeviceConfig","title":"NEXUS_10 - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_10/#nexus_10","text":"[jvm]\\ @ JvmField val NEXUS_10 : DeviceConfig","title":"NEXUS_10"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_4/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / NEXUS_4 NEXUS_4 \u00b6 [jvm]\\ @ JvmField val NEXUS_4 : DeviceConfig","title":"NEXUS_4 - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_4/#nexus_4","text":"[jvm]\\ @ JvmField val NEXUS_4 : DeviceConfig","title":"NEXUS_4"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_5/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / NEXUS_5 NEXUS_5 \u00b6 [jvm]\\ @ JvmField val NEXUS_5 : DeviceConfig","title":"NEXUS_5 - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_5/#nexus_5","text":"[jvm]\\ @ JvmField val NEXUS_5 : DeviceConfig","title":"NEXUS_5"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_5_-l-a-n-d/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / NEXUS_5_LAND NEXUS_5_LAND \u00b6 [jvm]\\ @ JvmField val NEXUS_5_LAND : DeviceConfig","title":"NEXUS_5_LAND - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_5_-l-a-n-d/#nexus_5_land","text":"[jvm]\\ @ JvmField val NEXUS_5_LAND : DeviceConfig","title":"NEXUS_5_LAND"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_7/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / NEXUS_7 NEXUS_7 \u00b6 [jvm]\\ @ JvmField val NEXUS_7 : DeviceConfig","title":"NEXUS_7 - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_7/#nexus_7","text":"[jvm]\\ @ JvmField val NEXUS_7 : DeviceConfig","title":"NEXUS_7"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_7_2012/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / NEXUS_7_2012 NEXUS_7_2012 \u00b6 [jvm]\\ @ JvmField val NEXUS_7_2012 : DeviceConfig","title":"NEXUS_7_2012 - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-n-e-x-u-s_7_2012/#nexus_7_2012","text":"[jvm]\\ @ JvmField val NEXUS_7_2012 : DeviceConfig","title":"NEXUS_7_2012"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL PIXEL \u00b6 [jvm]\\ @ JvmField val PIXEL : DeviceConfig","title":"PIXEL - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l/#pixel","text":"[jvm]\\ @ JvmField val PIXEL : DeviceConfig","title":"PIXEL"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_-c/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_C PIXEL_C \u00b6 [jvm]\\ @ JvmField val PIXEL_C : DeviceConfig","title":"PIXEL_C - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_-c/#pixel_c","text":"[jvm]\\ @ JvmField val PIXEL_C : DeviceConfig","title":"PIXEL_C"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_-x-l/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_XL PIXEL_XL \u00b6 [jvm]\\ @ JvmField val PIXEL_XL : DeviceConfig","title":"PIXEL_XL - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_-x-l/#pixel_xl","text":"[jvm]\\ @ JvmField val PIXEL_XL : DeviceConfig","title":"PIXEL_XL"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_2/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_2 PIXEL_2 \u00b6 [jvm]\\ @ JvmField val PIXEL_2 : DeviceConfig","title":"PIXEL_2 - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_2/#pixel_2","text":"[jvm]\\ @ JvmField val PIXEL_2 : DeviceConfig","title":"PIXEL_2"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_2_-x-l/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_2_XL PIXEL_2_XL \u00b6 [jvm]\\ @ JvmField val PIXEL_2_XL : DeviceConfig","title":"PIXEL_2_XL - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_2_-x-l/#pixel_2_xl","text":"[jvm]\\ @ JvmField val PIXEL_2_XL : DeviceConfig","title":"PIXEL_2_XL"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3-a/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_3A PIXEL_3A \u00b6 [jvm]\\ @ JvmField val PIXEL_3A : DeviceConfig","title":"PIXEL_3A - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3-a/#pixel_3a","text":"[jvm]\\ @ JvmField val PIXEL_3A : DeviceConfig","title":"PIXEL_3A"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3-a_-x-l/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_3A_XL PIXEL_3A_XL \u00b6 [jvm]\\ @ JvmField val PIXEL_3A_XL : DeviceConfig","title":"PIXEL_3A_XL - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3-a_-x-l/#pixel_3a_xl","text":"[jvm]\\ @ JvmField val PIXEL_3A_XL : DeviceConfig","title":"PIXEL_3A_XL"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_3 PIXEL_3 \u00b6 [jvm]\\ @ JvmField val PIXEL_3 : DeviceConfig","title":"PIXEL_3 - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3/#pixel_3","text":"[jvm]\\ @ JvmField val PIXEL_3 : DeviceConfig","title":"PIXEL_3"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3_-x-l/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_3_XL PIXEL_3_XL \u00b6 [jvm]\\ @ JvmField val PIXEL_3_XL : DeviceConfig","title":"PIXEL_3_XL - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_3_-x-l/#pixel_3_xl","text":"[jvm]\\ @ JvmField val PIXEL_3_XL : DeviceConfig","title":"PIXEL_3_XL"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_4-a/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_4A PIXEL_4A \u00b6 [jvm]\\ @ JvmField val PIXEL_4A : DeviceConfig","title":"PIXEL_4A - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_4-a/#pixel_4a","text":"[jvm]\\ @ JvmField val PIXEL_4A : DeviceConfig","title":"PIXEL_4A"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_4/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_4 PIXEL_4 \u00b6 [jvm]\\ @ JvmField val PIXEL_4 : DeviceConfig","title":"PIXEL_4 - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_4/#pixel_4","text":"[jvm]\\ @ JvmField val PIXEL_4 : DeviceConfig","title":"PIXEL_4"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_4_-x-l/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_4_XL PIXEL_4_XL \u00b6 [jvm]\\ @ JvmField val PIXEL_4_XL : DeviceConfig","title":"PIXEL_4_XL - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_4_-x-l/#pixel_4_xl","text":"[jvm]\\ @ JvmField val PIXEL_4_XL : DeviceConfig","title":"PIXEL_4_XL"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_5/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_5 PIXEL_5 \u00b6 [jvm]\\ @ JvmField val PIXEL_5 : DeviceConfig","title":"PIXEL_5 - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_5/#pixel_5","text":"[jvm]\\ @ JvmField val PIXEL_5 : DeviceConfig","title":"PIXEL_5"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_6/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_6 PIXEL_6 \u00b6 [jvm]\\ @ JvmField val PIXEL_6 : DeviceConfig","title":"PIXEL_6 - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_6/#pixel_6","text":"[jvm]\\ @ JvmField val PIXEL_6 : DeviceConfig","title":"PIXEL_6"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_6_-p-r-o/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / PIXEL_6_PRO PIXEL_6_PRO \u00b6 [jvm]\\ @ JvmField val PIXEL_6_PRO : DeviceConfig","title":"PIXEL_6_PRO - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-p-i-x-e-l_6_-p-r-o/#pixel_6_pro","text":"[jvm]\\ @ JvmField val PIXEL_6_PRO : DeviceConfig","title":"PIXEL_6_PRO"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-w-e-a-r_-o-s_-s-m-a-l-l_-r-o-u-n-d/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / WEAR_OS_SMALL_ROUND WEAR_OS_SMALL_ROUND \u00b6 [jvm]\\ @ JvmField val WEAR_OS_SMALL_ROUND : DeviceConfig","title":"WEAR_OS_SMALL_ROUND - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-w-e-a-r_-o-s_-s-m-a-l-l_-r-o-u-n-d/#wear_os_small_round","text":"[jvm]\\ @ JvmField val WEAR_OS_SMALL_ROUND : DeviceConfig","title":"WEAR_OS_SMALL_ROUND"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-w-e-a-r_-o-s_-s-q-u-a-r-e/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / WEAR_OS_SQUARE WEAR_OS_SQUARE \u00b6 [jvm]\\ @ JvmField val WEAR_OS_SQUARE : DeviceConfig","title":"WEAR_OS_SQUARE - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/-w-e-a-r_-o-s_-s-q-u-a-r-e/#wear_os_square","text":"[jvm]\\ @ JvmField val WEAR_OS_SQUARE : DeviceConfig","title":"WEAR_OS_SQUARE"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/get-enum-map/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / getEnumMap getEnumMap \u00b6 [jvm]\\ fun getEnumMap (path: File ): Map < String , Map < String , Int >>","title":"getEnumMap - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/get-enum-map/#getenummap","text":"[jvm]\\ fun getEnumMap (path: File ): Map < String , Map < String , Int >>","title":"getEnumMap"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/load-properties/","text":"// paparazzi / app.cash.paparazzi / DeviceConfig / Companion / loadProperties loadProperties \u00b6 [jvm]\\ fun loadProperties (path: File ): Map < String , String >","title":"loadProperties - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-device-config/-companion/load-properties/#loadproperties","text":"[jvm]\\ fun loadProperties (path: File ): Map < String , String >","title":"loadProperties"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/","text":"// paparazzi / app.cash.paparazzi / Environment Environment \u00b6 [jvm]\\ data class Environment (val platformDir: String , val appTestDir: String , val resDir: String , val assetsDir: String , val packageName: String , val compileSdkVersion: Int , val resourcePackageNames: List < String >) Constructors \u00b6 Environment [jvm] fun Environment (platformDir: String , appTestDir: String , resDir: String , assetsDir: String , packageName: String , compileSdkVersion: Int , resourcePackageNames: List < String >) Properties \u00b6 Name Summary appTestDir [jvm] val appTestDir : String assetsDir [jvm] val assetsDir : String compileSdkVersion [jvm] val compileSdkVersion : Int packageName [jvm] val packageName : String platformDir [jvm] val platformDir : String resDir [jvm] val resDir : String resourcePackageNames [jvm] val resourcePackageNames : List < String >","title":"Environment - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/#environment","text":"[jvm]\\ data class Environment (val platformDir: String , val appTestDir: String , val resDir: String , val assetsDir: String , val packageName: String , val compileSdkVersion: Int , val resourcePackageNames: List < String >)","title":"Environment"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/#constructors","text":"Environment [jvm] fun Environment (platformDir: String , appTestDir: String , resDir: String , assetsDir: String , packageName: String , compileSdkVersion: Int , resourcePackageNames: List < String >)","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/#properties","text":"Name Summary appTestDir [jvm] val appTestDir : String assetsDir [jvm] val assetsDir : String compileSdkVersion [jvm] val compileSdkVersion : Int packageName [jvm] val packageName : String platformDir [jvm] val platformDir : String resDir [jvm] val resDir : String resourcePackageNames [jvm] val resourcePackageNames : List < String >","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/-environment/","text":"// paparazzi / app.cash.paparazzi / Environment / Environment Environment \u00b6 [jvm]\\ fun Environment (platformDir: String , appTestDir: String , resDir: String , assetsDir: String , packageName: String , compileSdkVersion: Int , resourcePackageNames: List < String >)","title":"Environment - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/-environment/#environment","text":"[jvm]\\ fun Environment (platformDir: String , appTestDir: String , resDir: String , assetsDir: String , packageName: String , compileSdkVersion: Int , resourcePackageNames: List < String >)","title":"Environment"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/app-test-dir/","text":"// paparazzi / app.cash.paparazzi / Environment / appTestDir appTestDir \u00b6 [jvm]\\ val appTestDir : String","title":"appTestDir - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/app-test-dir/#apptestdir","text":"[jvm]\\ val appTestDir : String","title":"appTestDir"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/assets-dir/","text":"// paparazzi / app.cash.paparazzi / Environment / assetsDir assetsDir \u00b6 [jvm]\\ val assetsDir : String","title":"assetsDir - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/assets-dir/#assetsdir","text":"[jvm]\\ val assetsDir : String","title":"assetsDir"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/compile-sdk-version/","text":"// paparazzi / app.cash.paparazzi / Environment / compileSdkVersion compileSdkVersion \u00b6 [jvm]\\ val compileSdkVersion : Int","title":"compileSdkVersion - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/compile-sdk-version/#compilesdkversion","text":"[jvm]\\ val compileSdkVersion : Int","title":"compileSdkVersion"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/package-name/","text":"// paparazzi / app.cash.paparazzi / Environment / packageName packageName \u00b6 [jvm]\\ val packageName : String","title":"packageName - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/package-name/#packagename","text":"[jvm]\\ val packageName : String","title":"packageName"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/platform-dir/","text":"// paparazzi / app.cash.paparazzi / Environment / platformDir platformDir \u00b6 [jvm]\\ val platformDir : String","title":"platformDir - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/platform-dir/#platformdir","text":"[jvm]\\ val platformDir : String","title":"platformDir"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/res-dir/","text":"// paparazzi / app.cash.paparazzi / Environment / resDir resDir \u00b6 [jvm]\\ val resDir : String","title":"resDir - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/res-dir/#resdir","text":"[jvm]\\ val resDir : String","title":"resDir"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/resource-package-names/","text":"// paparazzi / app.cash.paparazzi / Environment / resourcePackageNames resourcePackageNames \u00b6 [jvm]\\ val resourcePackageNames : List < String >","title":"resourcePackageNames - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-environment/resource-package-names/#resourcepackagenames","text":"[jvm]\\ val resourcePackageNames : List < String >","title":"resourcePackageNames"},{"location":"1.x/paparazzi/app.cash.paparazzi/-flags/","text":"// paparazzi / app.cash.paparazzi / Flags Flags \u00b6 [jvm]\\ object Flags Properties \u00b6 Name Summary DEBUG_LINKED_OBJECTS [jvm] const val DEBUG_LINKED_OBJECTS : String NEW_RESOURCE_LOADING [jvm] const val NEW_RESOURCE_LOADING : String","title":"Flags - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-flags/#flags","text":"[jvm]\\ object Flags","title":"Flags"},{"location":"1.x/paparazzi/app.cash.paparazzi/-flags/#properties","text":"Name Summary DEBUG_LINKED_OBJECTS [jvm] const val DEBUG_LINKED_OBJECTS : String NEW_RESOURCE_LOADING [jvm] const val NEW_RESOURCE_LOADING : String","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi/-flags/-d-e-b-u-g_-l-i-n-k-e-d_-o-b-j-e-c-t-s/","text":"// paparazzi / app.cash.paparazzi / Flags / DEBUG_LINKED_OBJECTS DEBUG_LINKED_OBJECTS \u00b6 [jvm]\\ const val DEBUG_LINKED_OBJECTS : String","title":"DEBUG_LINKED_OBJECTS - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-flags/-d-e-b-u-g_-l-i-n-k-e-d_-o-b-j-e-c-t-s/#debug_linked_objects","text":"[jvm]\\ const val DEBUG_LINKED_OBJECTS : String","title":"DEBUG_LINKED_OBJECTS"},{"location":"1.x/paparazzi/app.cash.paparazzi/-flags/-n-e-w_-r-e-s-o-u-r-c-e_-l-o-a-d-i-n-g/","text":"// paparazzi / app.cash.paparazzi / Flags / NEW_RESOURCE_LOADING NEW_RESOURCE_LOADING \u00b6 [jvm]\\ const val NEW_RESOURCE_LOADING : String","title":"NEW_RESOURCE_LOADING - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-flags/-n-e-w_-r-e-s-o-u-r-c-e_-l-o-a-d-i-n-g/#new_resource_loading","text":"[jvm]\\ const val NEW_RESOURCE_LOADING : String","title":"NEW_RESOURCE_LOADING"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/","text":"// paparazzi / app.cash.paparazzi / HtmlReportWriter HtmlReportWriter \u00b6 [jvm]\\ class HtmlReportWriter @ JvmOverloads constructor(runName: String = defaultRunName(), rootDirectory: File = File(\"${System.getProperty(\"paparazzi.build.dir\", \"build\")}/reports/paparazzi\"), snapshotRootDirectory: File = File(\"src/test/snapshots\")) : SnapshotHandler Creates an HTML report that avoids writing files that have already been written. Images and videos are named by hashes of their contents. Paparazzi won\u2019t write two images or videos with the same contents. Note that the images/ directory includes the individual frames of each video. Runs are named by their date. images 088 c60580f06efa95c37fd8e754074729ee74a06 . png 93f9 a81cb594280f4b3898d90dfad8c8ea969b01 . png 22 d37abd0841ba2a8d0bd635954baf7cbfaa269b . png a4769e43cc5901ef28c0d46c46a44ea6429cbccc . png videos d1cddc5da2224053f2af51f4e69a76de4e61fc41 . mov runs 20190626002322 _b9854e . js 20190626002345 _b1e882 . js index . html index . js paparazzi . js Constructors \u00b6 HtmlReportWriter [jvm] @ JvmOverloads fun HtmlReportWriter (runName: String = defaultRunName(), rootDirectory: File = File(\"${System.getProperty(\"paparazzi.build.dir\", \"build\")}/reports/paparazzi\"), snapshotRootDirectory: File = File(\"src/test/snapshots\")) Functions \u00b6 Name Summary close [jvm] open override fun close () Release all resources and block until everything has been written to the file system. newFrameHandler [jvm] open override fun newFrameHandler (snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"HtmlReportWriter - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/#htmlreportwriter","text":"[jvm]\\ class HtmlReportWriter @ JvmOverloads constructor(runName: String = defaultRunName(), rootDirectory: File = File(\"${System.getProperty(\"paparazzi.build.dir\", \"build\")}/reports/paparazzi\"), snapshotRootDirectory: File = File(\"src/test/snapshots\")) : SnapshotHandler Creates an HTML report that avoids writing files that have already been written. Images and videos are named by hashes of their contents. Paparazzi won\u2019t write two images or videos with the same contents. Note that the images/ directory includes the individual frames of each video. Runs are named by their date. images 088 c60580f06efa95c37fd8e754074729ee74a06 . png 93f9 a81cb594280f4b3898d90dfad8c8ea969b01 . png 22 d37abd0841ba2a8d0bd635954baf7cbfaa269b . png a4769e43cc5901ef28c0d46c46a44ea6429cbccc . png videos d1cddc5da2224053f2af51f4e69a76de4e61fc41 . mov runs 20190626002322 _b9854e . js 20190626002345 _b1e882 . js index . html index . js paparazzi . js","title":"HtmlReportWriter"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/#constructors","text":"HtmlReportWriter [jvm] @ JvmOverloads fun HtmlReportWriter (runName: String = defaultRunName(), rootDirectory: File = File(\"${System.getProperty(\"paparazzi.build.dir\", \"build\")}/reports/paparazzi\"), snapshotRootDirectory: File = File(\"src/test/snapshots\"))","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/#functions","text":"Name Summary close [jvm] open override fun close () Release all resources and block until everything has been written to the file system. newFrameHandler [jvm] open override fun newFrameHandler (snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/-html-report-writer/","text":"// paparazzi / app.cash.paparazzi / HtmlReportWriter / HtmlReportWriter HtmlReportWriter \u00b6 [jvm]\\ @ JvmOverloads fun HtmlReportWriter (runName: String = defaultRunName(), rootDirectory: File = File(\"${System.getProperty(\"paparazzi.build.dir\", \"build\")}/reports/paparazzi\"), snapshotRootDirectory: File = File(\"src/test/snapshots\"))","title":"HtmlReportWriter - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/-html-report-writer/#htmlreportwriter","text":"[jvm]\\ @ JvmOverloads fun HtmlReportWriter (runName: String = defaultRunName(), rootDirectory: File = File(\"${System.getProperty(\"paparazzi.build.dir\", \"build\")}/reports/paparazzi\"), snapshotRootDirectory: File = File(\"src/test/snapshots\"))","title":"HtmlReportWriter"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/close/","text":"// paparazzi / app.cash.paparazzi / HtmlReportWriter / close close \u00b6 [jvm]\\ open override fun close () Release all resources and block until everything has been written to the file system.","title":"close - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/close/#close","text":"[jvm]\\ open override fun close () Release all resources and block until everything has been written to the file system.","title":"close"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/new-frame-handler/","text":"// paparazzi / app.cash.paparazzi / HtmlReportWriter / newFrameHandler newFrameHandler \u00b6 [jvm]\\ open override fun newFrameHandler (snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"newFrameHandler - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-html-report-writer/new-frame-handler/#newframehandler","text":"[jvm]\\ open override fun newFrameHandler (snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"newFrameHandler"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/","text":"// paparazzi / app.cash.paparazzi / InstantAnimationsRule InstantAnimationsRule \u00b6 [jvm]\\ class InstantAnimationsRule : TestRule Sets animation duration scale to 0 so all animations run instantly. Use this with Paparazzi to skip animations and snapshot their terminal state. Note that animation side effects are still performed, including calls like AnimatorListener.onAnimationEnd. This way views from fade-ins and moves are rendered as they do when the animations complete. Constructors \u00b6 InstantAnimationsRule [jvm] fun InstantAnimationsRule () Functions \u00b6 Name Summary apply [jvm] open override fun apply (base: Statement, description: Description): Statement","title":"InstantAnimationsRule - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/#instantanimationsrule","text":"[jvm]\\ class InstantAnimationsRule : TestRule Sets animation duration scale to 0 so all animations run instantly. Use this with Paparazzi to skip animations and snapshot their terminal state. Note that animation side effects are still performed, including calls like AnimatorListener.onAnimationEnd. This way views from fade-ins and moves are rendered as they do when the animations complete.","title":"InstantAnimationsRule"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/#constructors","text":"InstantAnimationsRule [jvm] fun InstantAnimationsRule ()","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/#functions","text":"Name Summary apply [jvm] open override fun apply (base: Statement, description: Description): Statement","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/-instant-animations-rule/","text":"// paparazzi / app.cash.paparazzi / InstantAnimationsRule / InstantAnimationsRule InstantAnimationsRule \u00b6 [jvm]\\ fun InstantAnimationsRule ()","title":"InstantAnimationsRule - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/-instant-animations-rule/#instantanimationsrule","text":"[jvm]\\ fun InstantAnimationsRule ()","title":"InstantAnimationsRule"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/apply/","text":"// paparazzi / app.cash.paparazzi / InstantAnimationsRule / apply apply \u00b6 [jvm]\\ open override fun apply (base: Statement, description: Description): Statement","title":"apply - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-instant-animations-rule/apply/#apply","text":"[jvm]\\ open override fun apply (base: Statement, description: Description): Statement","title":"apply"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/","text":"// paparazzi / app.cash.paparazzi / Paparazzi Paparazzi \u00b6 [jvm]\\ class Paparazzi @ JvmOverloads constructor(environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference), renderExtensions: Set < RenderExtension > = setOf(), supportsRtl: Boolean = false, showSystemUi: Boolean = true, validateAccessibility: Boolean = false) : TestRule Constructors \u00b6 Paparazzi [jvm] @ JvmOverloads fun Paparazzi (environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference), renderExtensions: Set < RenderExtension > = setOf(), supportsRtl: Boolean = false, showSystemUi: Boolean = true, validateAccessibility: Boolean = false) Types \u00b6 Name Summary Companion [jvm] object Companion Functions \u00b6 Name Summary apply [jvm] open override fun apply (base: Statement, description: Description): Statement close [jvm] fun close () gif [jvm] @ JvmOverloads fun gif (view: View, name: String ? = null, start: Long = 0, end: Long = 500, fps: Int = 30) inflate [jvm] fun < V : View> inflate (@LayoutReslayoutId: Int ): V prepare [jvm] fun prepare (description: Description) snapshot [jvm] fun snapshot (name: String ? = null, composable: @Composable() -> Unit ) @ JvmOverloads fun snapshot (view: View, name: String ? = null, offsetMillis: Long = 0) unsafeUpdateConfig [jvm] fun unsafeUpdateConfig (deviceConfig: DeviceConfig ? = null, theme: String ? = null, renderingMode: SessionParams.RenderingMode? = null) Properties \u00b6 Name Summary context [jvm] val context : Context layoutInflater [jvm] val layoutInflater : LayoutInflater resources [jvm] val resources : Resources","title":"Paparazzi - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/#paparazzi","text":"[jvm]\\ class Paparazzi @ JvmOverloads constructor(environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference), renderExtensions: Set < RenderExtension > = setOf(), supportsRtl: Boolean = false, showSystemUi: Boolean = true, validateAccessibility: Boolean = false) : TestRule","title":"Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/#constructors","text":"Paparazzi [jvm] @ JvmOverloads fun Paparazzi (environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference), renderExtensions: Set < RenderExtension > = setOf(), supportsRtl: Boolean = false, showSystemUi: Boolean = true, validateAccessibility: Boolean = false)","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/#types","text":"Name Summary Companion [jvm] object Companion","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/#functions","text":"Name Summary apply [jvm] open override fun apply (base: Statement, description: Description): Statement close [jvm] fun close () gif [jvm] @ JvmOverloads fun gif (view: View, name: String ? = null, start: Long = 0, end: Long = 500, fps: Int = 30) inflate [jvm] fun < V : View> inflate (@LayoutReslayoutId: Int ): V prepare [jvm] fun prepare (description: Description) snapshot [jvm] fun snapshot (name: String ? = null, composable: @Composable() -> Unit ) @ JvmOverloads fun snapshot (view: View, name: String ? = null, offsetMillis: Long = 0) unsafeUpdateConfig [jvm] fun unsafeUpdateConfig (deviceConfig: DeviceConfig ? = null, theme: String ? = null, renderingMode: SessionParams.RenderingMode? = null)","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/#properties","text":"Name Summary context [jvm] val context : Context layoutInflater [jvm] val layoutInflater : LayoutInflater resources [jvm] val resources : Resources","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/-paparazzi/","text":"// paparazzi / app.cash.paparazzi / Paparazzi / Paparazzi Paparazzi \u00b6 [jvm]\\ @ JvmOverloads fun Paparazzi (environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference), renderExtensions: Set < RenderExtension > = setOf(), supportsRtl: Boolean = false, showSystemUi: Boolean = true, validateAccessibility: Boolean = false)","title":"Paparazzi - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/-paparazzi/#paparazzi","text":"[jvm]\\ @ JvmOverloads fun Paparazzi (environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", renderingMode: SessionParams.RenderingMode = RenderingMode.NORMAL, appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference), renderExtensions: Set < RenderExtension > = setOf(), supportsRtl: Boolean = false, showSystemUi: Boolean = true, validateAccessibility: Boolean = false)","title":"Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/apply/","text":"// paparazzi / app.cash.paparazzi / Paparazzi / apply apply \u00b6 [jvm]\\ open override fun apply (base: Statement, description: Description): Statement","title":"apply - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/apply/#apply","text":"[jvm]\\ open override fun apply (base: Statement, description: Description): Statement","title":"apply"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/close/","text":"// paparazzi / app.cash.paparazzi / Paparazzi / close close \u00b6 [jvm]\\ fun close ()","title":"close - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/close/#close","text":"[jvm]\\ fun close ()","title":"close"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/context/","text":"// paparazzi / app.cash.paparazzi / Paparazzi / context context \u00b6 [jvm]\\ val context : Context","title":"context - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/context/#context","text":"[jvm]\\ val context : Context","title":"context"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/gif/","text":"// paparazzi / app.cash.paparazzi / Paparazzi / gif gif \u00b6 [jvm]\\ @ JvmOverloads fun gif (view: View, name: String ? = null, start: Long = 0, end: Long = 500, fps: Int = 30)","title":"gif - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/gif/#gif","text":"[jvm]\\ @ JvmOverloads fun gif (view: View, name: String ? = null, start: Long = 0, end: Long = 500, fps: Int = 30)","title":"gif"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/inflate/","text":"// paparazzi / app.cash.paparazzi / Paparazzi / inflate inflate \u00b6 [jvm]\\ fun < V : View> inflate (@LayoutReslayoutId: Int ): V","title":"inflate - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/inflate/#inflate","text":"[jvm]\\ fun < V : View> inflate (@LayoutReslayoutId: Int ): V","title":"inflate"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/layout-inflater/","text":"// paparazzi / app.cash.paparazzi / Paparazzi / layoutInflater layoutInflater \u00b6 [jvm]\\ val layoutInflater : LayoutInflater","title":"layoutInflater - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/layout-inflater/#layoutinflater","text":"[jvm]\\ val layoutInflater : LayoutInflater","title":"layoutInflater"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/prepare/","text":"// paparazzi / app.cash.paparazzi / Paparazzi / prepare prepare \u00b6 [jvm]\\ fun prepare (description: Description)","title":"prepare - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/prepare/#prepare","text":"[jvm]\\ fun prepare (description: Description)","title":"prepare"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/resources/","text":"// paparazzi / app.cash.paparazzi / Paparazzi / resources resources \u00b6 [jvm]\\ val resources : Resources","title":"resources - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/resources/#resources","text":"[jvm]\\ val resources : Resources","title":"resources"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/snapshot/","text":"// paparazzi / app.cash.paparazzi / Paparazzi / snapshot snapshot \u00b6 [jvm]\\ fun snapshot (name: String ? = null, composable: @Composable() -> Unit ) @ JvmOverloads fun snapshot (view: View, name: String ? = null, offsetMillis: Long = 0)","title":"snapshot - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/snapshot/#snapshot","text":"[jvm]\\ fun snapshot (name: String ? = null, composable: @Composable() -> Unit ) @ JvmOverloads fun snapshot (view: View, name: String ? = null, offsetMillis: Long = 0)","title":"snapshot"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/unsafe-update-config/","text":"// paparazzi / app.cash.paparazzi / Paparazzi / unsafeUpdateConfig unsafeUpdateConfig \u00b6 [jvm]\\ fun unsafeUpdateConfig (deviceConfig: DeviceConfig ? = null, theme: String ? = null, renderingMode: SessionParams.RenderingMode? = null)","title":"unsafeUpdateConfig - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/unsafe-update-config/#unsafeupdateconfig","text":"[jvm]\\ fun unsafeUpdateConfig (deviceConfig: DeviceConfig ? = null, theme: String ? = null, renderingMode: SessionParams.RenderingMode? = null)","title":"unsafeUpdateConfig"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/-companion/","text":"// paparazzi / app.cash.paparazzi / Paparazzi / Companion Companion \u00b6 [jvm]\\ object Companion","title":"Companion - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-paparazzi/-companion/#companion","text":"[jvm]\\ object Companion","title":"Companion"},{"location":"1.x/paparazzi/app.cash.paparazzi/-render-extension/","text":"// paparazzi / app.cash.paparazzi / RenderExtension RenderExtension \u00b6 [jvm]\\ interface RenderExtension An extension for overlaying additional information on top of each rendered frame. Functions \u00b6 Name Summary renderView [jvm] abstract fun renderView (contentView: View): View Allows this extension to modify the view hierarchy represented by contentView . Inheritors \u00b6 Name AccessibilityRenderExtension","title":"RenderExtension - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-render-extension/#renderextension","text":"[jvm]\\ interface RenderExtension An extension for overlaying additional information on top of each rendered frame.","title":"RenderExtension"},{"location":"1.x/paparazzi/app.cash.paparazzi/-render-extension/#functions","text":"Name Summary renderView [jvm] abstract fun renderView (contentView: View): View Allows this extension to modify the view hierarchy represented by contentView .","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi/-render-extension/#inheritors","text":"Name AccessibilityRenderExtension","title":"Inheritors"},{"location":"1.x/paparazzi/app.cash.paparazzi/-render-extension/render-view/","text":"// paparazzi / app.cash.paparazzi / RenderExtension / renderView renderView \u00b6 [jvm]\\ abstract fun renderView (contentView: View): View Allows this extension to modify the view hierarchy represented by contentView . Returns the root view of the modified hierarchy.","title":"renderView - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-render-extension/render-view/#renderview","text":"[jvm]\\ abstract fun renderView (contentView: View): View Allows this extension to modify the view hierarchy represented by contentView . Returns the root view of the modified hierarchy.","title":"renderView"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/","text":"// paparazzi / app.cash.paparazzi / Snapshot Snapshot \u00b6 [jvm]\\ @JsonClass(generateAdapter = true) data class Snapshot (val name: String ?, val testName: TestName , val timestamp: Date , val tags: List < String > = listOf(), val file: String ? = null) Constructors \u00b6 Snapshot [jvm] fun Snapshot (name: String ?, testName: TestName , timestamp: Date , tags: List < String > = listOf(), file: String ? = null) Properties \u00b6 Name Summary file [jvm] val file : String ? = null name [jvm] val name : String ? tags [jvm] val tags : List < String > testName [jvm] val testName : TestName timestamp [jvm] val timestamp : Date","title":"Snapshot - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/#snapshot","text":"[jvm]\\ @JsonClass(generateAdapter = true) data class Snapshot (val name: String ?, val testName: TestName , val timestamp: Date , val tags: List < String > = listOf(), val file: String ? = null)","title":"Snapshot"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/#constructors","text":"Snapshot [jvm] fun Snapshot (name: String ?, testName: TestName , timestamp: Date , tags: List < String > = listOf(), file: String ? = null)","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/#properties","text":"Name Summary file [jvm] val file : String ? = null name [jvm] val name : String ? tags [jvm] val tags : List < String > testName [jvm] val testName : TestName timestamp [jvm] val timestamp : Date","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/-snapshot/","text":"// paparazzi / app.cash.paparazzi / Snapshot / Snapshot Snapshot \u00b6 [jvm]\\ fun Snapshot (name: String ?, testName: TestName , timestamp: Date , tags: List < String > = listOf(), file: String ? = null)","title":"Snapshot - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/-snapshot/#snapshot","text":"[jvm]\\ fun Snapshot (name: String ?, testName: TestName , timestamp: Date , tags: List < String > = listOf(), file: String ? = null)","title":"Snapshot"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/file/","text":"// paparazzi / app.cash.paparazzi / Snapshot / file file \u00b6 [jvm]\\ val file : String ? = null","title":"file - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/file/#file","text":"[jvm]\\ val file : String ? = null","title":"file"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/name/","text":"// paparazzi / app.cash.paparazzi / Snapshot / name name \u00b6 [jvm]\\ val name : String ?","title":"name - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/name/#name","text":"[jvm]\\ val name : String ?","title":"name"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/tags/","text":"// paparazzi / app.cash.paparazzi / Snapshot / tags tags \u00b6 [jvm]\\ val tags : List < String >","title":"tags - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/tags/#tags","text":"[jvm]\\ val tags : List < String >","title":"tags"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/test-name/","text":"// paparazzi / app.cash.paparazzi / Snapshot / testName testName \u00b6 [jvm]\\ val testName : TestName","title":"testName - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/test-name/#testname","text":"[jvm]\\ val testName : TestName","title":"testName"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/timestamp/","text":"// paparazzi / app.cash.paparazzi / Snapshot / timestamp timestamp \u00b6 [jvm]\\ val timestamp : Date","title":"timestamp - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot/timestamp/#timestamp","text":"[jvm]\\ val timestamp : Date","title":"timestamp"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/","text":"// paparazzi / app.cash.paparazzi / SnapshotHandler SnapshotHandler \u00b6 [jvm]\\ interface SnapshotHandler : Closeable Types \u00b6 Name Summary FrameHandler [jvm] interface FrameHandler : Closeable Functions \u00b6 Name Summary close [jvm] abstract override fun close () newFrameHandler [jvm] abstract fun newFrameHandler (snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler Inheritors \u00b6 Name HtmlReportWriter SnapshotVerifier","title":"SnapshotHandler - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#snapshothandler","text":"[jvm]\\ interface SnapshotHandler : Closeable","title":"SnapshotHandler"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#types","text":"Name Summary FrameHandler [jvm] interface FrameHandler : Closeable","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#functions","text":"Name Summary close [jvm] abstract override fun close () newFrameHandler [jvm] abstract fun newFrameHandler (snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#inheritors","text":"Name HtmlReportWriter SnapshotVerifier","title":"Inheritors"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/new-frame-handler/","text":"// paparazzi / app.cash.paparazzi / SnapshotHandler / newFrameHandler newFrameHandler \u00b6 [jvm]\\ abstract fun newFrameHandler (snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"newFrameHandler - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/new-frame-handler/#newframehandler","text":"[jvm]\\ abstract fun newFrameHandler (snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"newFrameHandler"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/","text":"// paparazzi / app.cash.paparazzi / SnapshotHandler / FrameHandler FrameHandler \u00b6 [jvm]\\ interface FrameHandler : Closeable Functions \u00b6 Name Summary close [jvm] abstract override fun close () handle [jvm] abstract fun handle (image: BufferedImage )","title":"FrameHandler - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/#framehandler","text":"[jvm]\\ interface FrameHandler : Closeable","title":"FrameHandler"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/#functions","text":"Name Summary close [jvm] abstract override fun close () handle [jvm] abstract fun handle (image: BufferedImage )","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/handle/","text":"// paparazzi / app.cash.paparazzi / SnapshotHandler / FrameHandler / handle handle \u00b6 [jvm]\\ abstract fun handle (image: BufferedImage )","title":"handle - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/handle/#handle","text":"[jvm]\\ abstract fun handle (image: BufferedImage )","title":"handle"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/","text":"// paparazzi / app.cash.paparazzi / SnapshotVerifier SnapshotVerifier \u00b6 [jvm]\\ class SnapshotVerifier @ JvmOverloads constructor(maxPercentDifference: Double , rootDirectory: File = File(\"src/test/snapshots\")) : SnapshotHandler Constructors \u00b6 SnapshotVerifier [jvm] @ JvmOverloads fun SnapshotVerifier (maxPercentDifference: Double , rootDirectory: File = File(\"src/test/snapshots\")) Functions \u00b6 Name Summary close [jvm] open override fun close () newFrameHandler [jvm] open override fun newFrameHandler (snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"SnapshotVerifier - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/#snapshotverifier","text":"[jvm]\\ class SnapshotVerifier @ JvmOverloads constructor(maxPercentDifference: Double , rootDirectory: File = File(\"src/test/snapshots\")) : SnapshotHandler","title":"SnapshotVerifier"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/#constructors","text":"SnapshotVerifier [jvm] @ JvmOverloads fun SnapshotVerifier (maxPercentDifference: Double , rootDirectory: File = File(\"src/test/snapshots\"))","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/#functions","text":"Name Summary close [jvm] open override fun close () newFrameHandler [jvm] open override fun newFrameHandler (snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/-snapshot-verifier/","text":"// paparazzi / app.cash.paparazzi / SnapshotVerifier / SnapshotVerifier SnapshotVerifier \u00b6 [jvm]\\ @ JvmOverloads fun SnapshotVerifier (maxPercentDifference: Double , rootDirectory: File = File(\"src/test/snapshots\"))","title":"SnapshotVerifier - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/-snapshot-verifier/#snapshotverifier","text":"[jvm]\\ @ JvmOverloads fun SnapshotVerifier (maxPercentDifference: Double , rootDirectory: File = File(\"src/test/snapshots\"))","title":"SnapshotVerifier"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/close/","text":"// paparazzi / app.cash.paparazzi / SnapshotVerifier / close close \u00b6 [jvm]\\ open override fun close ()","title":"close - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/close/#close","text":"[jvm]\\ open override fun close ()","title":"close"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/new-frame-handler/","text":"// paparazzi / app.cash.paparazzi / SnapshotVerifier / newFrameHandler newFrameHandler \u00b6 [jvm]\\ open override fun newFrameHandler (snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"newFrameHandler - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/new-frame-handler/#newframehandler","text":"[jvm]\\ open override fun newFrameHandler (snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"newFrameHandler"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/","text":"// paparazzi / app.cash.paparazzi / TestName TestName \u00b6 [jvm]\\ data class TestName (val packageName: String , val className: String , val methodName: String ) Constructors \u00b6 TestName [jvm] fun TestName (packageName: String , className: String , methodName: String ) Properties \u00b6 Name Summary className [jvm] val className : String methodName [jvm] val methodName : String packageName [jvm] val packageName : String","title":"TestName - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/#testname","text":"[jvm]\\ data class TestName (val packageName: String , val className: String , val methodName: String )","title":"TestName"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/#constructors","text":"TestName [jvm] fun TestName (packageName: String , className: String , methodName: String )","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/#properties","text":"Name Summary className [jvm] val className : String methodName [jvm] val methodName : String packageName [jvm] val packageName : String","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/-test-name/","text":"// paparazzi / app.cash.paparazzi / TestName / TestName TestName \u00b6 [jvm]\\ fun TestName (packageName: String , className: String , methodName: String )","title":"TestName - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/-test-name/#testname","text":"[jvm]\\ fun TestName (packageName: String , className: String , methodName: String )","title":"TestName"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/class-name/","text":"// paparazzi / app.cash.paparazzi / TestName / className className \u00b6 [jvm]\\ val className : String","title":"className - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/class-name/#classname","text":"[jvm]\\ val className : String","title":"className"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/method-name/","text":"// paparazzi / app.cash.paparazzi / TestName / methodName methodName \u00b6 [jvm]\\ val methodName : String","title":"methodName - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/method-name/#methodname","text":"[jvm]\\ val methodName : String","title":"methodName"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/package-name/","text":"// paparazzi / app.cash.paparazzi / TestName / packageName packageName \u00b6 [jvm]\\ val packageName : String","title":"packageName - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi/-test-name/package-name/#packagename","text":"[jvm]\\ val packageName : String","title":"packageName"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/","text":"// paparazzi / app.cash.paparazzi.accessibility Package-level declarations \u00b6 Types \u00b6 Name Summary AccessibilityRenderExtension [jvm] class AccessibilityRenderExtension : RenderExtension","title":"Package-level declarations - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/#types","text":"Name Summary AccessibilityRenderExtension [jvm] class AccessibilityRenderExtension : RenderExtension","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/","text":"// paparazzi / app.cash.paparazzi.accessibility / AccessibilityRenderExtension AccessibilityRenderExtension \u00b6 [jvm]\\ class AccessibilityRenderExtension : RenderExtension Constructors \u00b6 AccessibilityRenderExtension [jvm] fun AccessibilityRenderExtension () Functions \u00b6 Name Summary renderView [jvm] open override fun renderView (contentView: View): View Allows this extension to modify the view hierarchy represented by contentView .","title":"AccessibilityRenderExtension - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/#accessibilityrenderextension","text":"[jvm]\\ class AccessibilityRenderExtension : RenderExtension","title":"AccessibilityRenderExtension"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/#constructors","text":"AccessibilityRenderExtension [jvm] fun AccessibilityRenderExtension ()","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/#functions","text":"Name Summary renderView [jvm] open override fun renderView (contentView: View): View Allows this extension to modify the view hierarchy represented by contentView .","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/-accessibility-render-extension/","text":"// paparazzi / app.cash.paparazzi.accessibility / AccessibilityRenderExtension / AccessibilityRenderExtension AccessibilityRenderExtension \u00b6 [jvm]\\ fun AccessibilityRenderExtension ()","title":"AccessibilityRenderExtension - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/-accessibility-render-extension/#accessibilityrenderextension","text":"[jvm]\\ fun AccessibilityRenderExtension ()","title":"AccessibilityRenderExtension"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/render-view/","text":"// paparazzi / app.cash.paparazzi.accessibility / AccessibilityRenderExtension / renderView renderView \u00b6 [jvm]\\ open override fun renderView (contentView: View): View Allows this extension to modify the view hierarchy represented by contentView . Returns the root view of the modified hierarchy.","title":"renderView - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.accessibility/-accessibility-render-extension/render-view/#renderview","text":"[jvm]\\ open override fun renderView (contentView: View): View Allows this extension to modify the view hierarchy represented by contentView . Returns the root view of the modified hierarchy.","title":"renderView"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated Package-level declarations \u00b6 Types \u00b6 Name Summary FrameworkResources [jvm] open class ~~FrameworkResources~~ : ResourceRepository IdGeneratingResourceFile [jvm] class ~~IdGeneratingResourceFile~~ : ResourceFile , ValueResourceParser.IValueResourceRepository IdResourceParser [jvm] open class ~~IdResourceParser~~ MultiResourceFile [jvm] class ~~MultiResourceFile~~ : ResourceFile , ValueResourceParser.IValueResourceRepository ResourceDeltaKind [jvm] enum ~~ResourceDeltaKind~~ ResourceFile [jvm] abstract class ~~ResourceFile~~ : Configurable ResourceFolder [jvm] class ~~ResourceFolder~~ : Configurable ResourceItem [jvm] open class ~~ResourceItem~~ : Comparable < T > ResourceRepository [jvm] abstract class ~~ResourceRepository~~ ScanningContext [jvm] open class ~~ScanningContext~~ SingleResourceFile [jvm] open class ~~SingleResourceFile~~ : ResourceFile ValidatingResourceParser [jvm] open class ~~ValidatingResourceParser~~ ValueResourceParser [jvm] class ~~ValueResourceParser~~ : DefaultHandler","title":"Package-level declarations - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/#types","text":"Name Summary FrameworkResources [jvm] open class ~~FrameworkResources~~ : ResourceRepository IdGeneratingResourceFile [jvm] class ~~IdGeneratingResourceFile~~ : ResourceFile , ValueResourceParser.IValueResourceRepository IdResourceParser [jvm] open class ~~IdResourceParser~~ MultiResourceFile [jvm] class ~~MultiResourceFile~~ : ResourceFile , ValueResourceParser.IValueResourceRepository ResourceDeltaKind [jvm] enum ~~ResourceDeltaKind~~ ResourceFile [jvm] abstract class ~~ResourceFile~~ : Configurable ResourceFolder [jvm] class ~~ResourceFolder~~ : Configurable ResourceItem [jvm] open class ~~ResourceItem~~ : Comparable < T > ResourceRepository [jvm] abstract class ~~ResourceRepository~~ ScanningContext [jvm] open class ~~ScanningContext~~ SingleResourceFile [jvm] open class ~~SingleResourceFile~~ : ResourceFile ValidatingResourceParser [jvm] open class ~~ValidatingResourceParser~~ ValueResourceParser [jvm] class ~~ValueResourceParser~~ : DefaultHandler","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / FrameworkResources FrameworkResources \u00b6 [jvm]\\ open class ~~FrameworkResources~~ : ResourceRepository \u2014 Deprecated \u00b6 Deprecated \u00b6 This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests. Constructors \u00b6 FrameworkResources [jvm] open fun FrameworkResources (@NonNullresFolder: IAbstractFolder ) Functions \u00b6 Name Summary clear [jvm] open fun clear () ensureInitialized [jvm] open fun ensureInitialized (): Boolean Ensures that the repository has been initialized again after a call to clear . getAvailableResourceTypes [jvm] @NonNull open fun getAvailableResourceTypes (): List <ResourceType> getConfiguredResources [jvm] @NonNull open fun getConfiguredResources (@NonNullreferenceConfig: FolderConfiguration): Map <ResourceType, ResourceValueMap> Returns the resources values matching a given FolderConfiguration. getFolders [jvm] @Nullable open fun getFolders (@NonNulltype: ResourceFolderType): List < ResourceFolder > Returns a list of ResourceFolder for a specific ResourceFolderType. getLanguages [jvm] @NonNull open fun getLanguages (): SortedSet < String > Returns the sorted list of languages used in the resources. getMatchingFile [jvm] @Nullable open fun getMatchingFile (@NonNullname: String , @NonNulltype: ResourceFolderType, @NonNullconfig: FolderConfiguration): ResourceFile Returns the ResourceFile matching the given name, ResourceFolderType and configuration. [jvm] @Nullable open fun getMatchingFile (@NonNullname: String , @NonNulltype: ResourceType, @NonNullconfig: FolderConfiguration): ResourceFile Returns the ResourceFile matching the given name, ResourceType and configuration. getRegions [jvm] @NonNull open fun getRegions (@NonNullcurrentLanguage: String ): SortedSet < String > Returns the sorted list of regions used in the resources with the given language. getResFolder [jvm] open fun getResFolder (): IAbstractFolder getResourceFolder [jvm] @Nullable open fun getResourceFolder (@NonNullfolder: IAbstractFolder ): ResourceFolder Returns the ResourceFolder associated with a IAbstractFolder . getResourceItem [jvm] @NonNull open fun getResourceItem (@NonNulltype: ResourceType, @NonNullname: String ): ResourceItem Returns a ResourceItem matching the given ResourceType and name. getResourceItemsOfType [jvm] @NonNull open fun getResourceItemsOfType (@NonNulltype: ResourceType): List < ResourceItem > Returns a Collection (always non null, but can be empty) of public ResourceItem matching a given ResourceType. getSourceFiles [jvm] @Nullable open fun getSourceFiles (@NonNulltype: ResourceType, @NonNullname: String , @NullablereferenceConfig: FolderConfiguration): List < ResourceFile > Returns the list of source files for a given resource. hasResourceItem [jvm] open fun hasResourceItem (@NonNullurl: String ): Boolean open fun hasResourceItem (@NonNulltype: ResourceType, @NonNullname: String ): Boolean Returns true if this resource repository contains a resource of the given name. hasResourcesOfType [jvm] open fun hasResourcesOfType (@NonNulltype: ResourceType): Boolean Returns whether the repository has public resources of a given ResourceType. isFrameworkRepository [jvm] open fun isFrameworkRepository (): Boolean loadPublicResources [jvm] open fun loadPublicResources (@Nullablelogger: ILogger) Reads the public.xml file in data/res/values/ for a given resource folder and builds up a map of public resources. loadResources [jvm] open fun loadResources () Loads the resources. postUpdateCleanUp [jvm] open fun postUpdateCleanUp () Cleans up the repository of resource items that have no source file anymore. processFolder [jvm] @Nullable open fun processFolder (@NonNullfolder: IAbstractFolder ): ResourceFolder Processes a folder and adds it to the list of existing folders. removeFolder [jvm] @Nullable open fun removeFolder (@NonNulltype: ResourceFolderType, @NonNullremovedFolder: IAbstractFolder , @Nullablecontext: ScanningContext ): ResourceFolder Removes a ResourceFolder associated with the specified IAbstractFolder .","title":"FrameworkResources - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/#frameworkresources","text":"[jvm]\\ open class ~~FrameworkResources~~ : ResourceRepository \u2014","title":"FrameworkResources"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/#deprecated_1","text":"This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/#constructors","text":"FrameworkResources [jvm] open fun FrameworkResources (@NonNullresFolder: IAbstractFolder )","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/#functions","text":"Name Summary clear [jvm] open fun clear () ensureInitialized [jvm] open fun ensureInitialized (): Boolean Ensures that the repository has been initialized again after a call to clear . getAvailableResourceTypes [jvm] @NonNull open fun getAvailableResourceTypes (): List <ResourceType> getConfiguredResources [jvm] @NonNull open fun getConfiguredResources (@NonNullreferenceConfig: FolderConfiguration): Map <ResourceType, ResourceValueMap> Returns the resources values matching a given FolderConfiguration. getFolders [jvm] @Nullable open fun getFolders (@NonNulltype: ResourceFolderType): List < ResourceFolder > Returns a list of ResourceFolder for a specific ResourceFolderType. getLanguages [jvm] @NonNull open fun getLanguages (): SortedSet < String > Returns the sorted list of languages used in the resources. getMatchingFile [jvm] @Nullable open fun getMatchingFile (@NonNullname: String , @NonNulltype: ResourceFolderType, @NonNullconfig: FolderConfiguration): ResourceFile Returns the ResourceFile matching the given name, ResourceFolderType and configuration. [jvm] @Nullable open fun getMatchingFile (@NonNullname: String , @NonNulltype: ResourceType, @NonNullconfig: FolderConfiguration): ResourceFile Returns the ResourceFile matching the given name, ResourceType and configuration. getRegions [jvm] @NonNull open fun getRegions (@NonNullcurrentLanguage: String ): SortedSet < String > Returns the sorted list of regions used in the resources with the given language. getResFolder [jvm] open fun getResFolder (): IAbstractFolder getResourceFolder [jvm] @Nullable open fun getResourceFolder (@NonNullfolder: IAbstractFolder ): ResourceFolder Returns the ResourceFolder associated with a IAbstractFolder . getResourceItem [jvm] @NonNull open fun getResourceItem (@NonNulltype: ResourceType, @NonNullname: String ): ResourceItem Returns a ResourceItem matching the given ResourceType and name. getResourceItemsOfType [jvm] @NonNull open fun getResourceItemsOfType (@NonNulltype: ResourceType): List < ResourceItem > Returns a Collection (always non null, but can be empty) of public ResourceItem matching a given ResourceType. getSourceFiles [jvm] @Nullable open fun getSourceFiles (@NonNulltype: ResourceType, @NonNullname: String , @NullablereferenceConfig: FolderConfiguration): List < ResourceFile > Returns the list of source files for a given resource. hasResourceItem [jvm] open fun hasResourceItem (@NonNullurl: String ): Boolean open fun hasResourceItem (@NonNulltype: ResourceType, @NonNullname: String ): Boolean Returns true if this resource repository contains a resource of the given name. hasResourcesOfType [jvm] open fun hasResourcesOfType (@NonNulltype: ResourceType): Boolean Returns whether the repository has public resources of a given ResourceType. isFrameworkRepository [jvm] open fun isFrameworkRepository (): Boolean loadPublicResources [jvm] open fun loadPublicResources (@Nullablelogger: ILogger) Reads the public.xml file in data/res/values/ for a given resource folder and builds up a map of public resources. loadResources [jvm] open fun loadResources () Loads the resources. postUpdateCleanUp [jvm] open fun postUpdateCleanUp () Cleans up the repository of resource items that have no source file anymore. processFolder [jvm] @Nullable open fun processFolder (@NonNullfolder: IAbstractFolder ): ResourceFolder Processes a folder and adds it to the list of existing folders. removeFolder [jvm] @Nullable open fun removeFolder (@NonNulltype: ResourceFolderType, @NonNullremovedFolder: IAbstractFolder , @Nullablecontext: ScanningContext ): ResourceFolder Removes a ResourceFolder associated with the specified IAbstractFolder .","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/-framework-resources/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / FrameworkResources / FrameworkResources FrameworkResources \u00b6 [jvm]\\ open fun FrameworkResources (@NonNullresFolder: IAbstractFolder )","title":"FrameworkResources - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/-framework-resources/#frameworkresources","text":"[jvm]\\ open fun FrameworkResources (@NonNullresFolder: IAbstractFolder )","title":"FrameworkResources"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/get-resource-items-of-type/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / FrameworkResources / getResourceItemsOfType getResourceItemsOfType \u00b6 [jvm]\\ @NonNull open fun getResourceItemsOfType (@NonNulltype: ResourceType): List < ResourceItem > Returns a Collection (always non null, but can be empty) of public ResourceItem matching a given ResourceType. Return \u00b6 a collection of items, possibly empty. Parameters \u00b6 jvm type the type of the resources to return","title":"getResourceItemsOfType - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/get-resource-items-of-type/#getresourceitemsoftype","text":"[jvm]\\ @NonNull open fun getResourceItemsOfType (@NonNulltype: ResourceType): List < ResourceItem > Returns a Collection (always non null, but can be empty) of public ResourceItem matching a given ResourceType.","title":"getResourceItemsOfType"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/get-resource-items-of-type/#return","text":"a collection of items, possibly empty.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/get-resource-items-of-type/#parameters","text":"jvm type the type of the resources to return","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/has-resources-of-type/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / FrameworkResources / hasResourcesOfType hasResourcesOfType \u00b6 [jvm]\\ open fun hasResourcesOfType (@NonNulltype: ResourceType): Boolean Returns whether the repository has public resources of a given ResourceType. Return \u00b6 true if the repository contains resources of the given type, false otherwise. Parameters \u00b6 jvm type the type of resource to check.","title":"hasResourcesOfType - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/has-resources-of-type/#hasresourcesoftype","text":"[jvm]\\ open fun hasResourcesOfType (@NonNulltype: ResourceType): Boolean Returns whether the repository has public resources of a given ResourceType.","title":"hasResourcesOfType"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/has-resources-of-type/#return","text":"true if the repository contains resources of the given type, false otherwise.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/has-resources-of-type/#parameters","text":"jvm type the type of resource to check.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/load-public-resources/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / FrameworkResources / loadPublicResources loadPublicResources \u00b6 [jvm]\\ open fun loadPublicResources (@Nullablelogger: ILogger) Reads the public.xml file in data/res/values/ for a given resource folder and builds up a map of public resources. This map is a subset of the full resource map that only contains framework resources that are public. Parameters \u00b6 jvm logger a logger to report issues to","title":"loadPublicResources - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/load-public-resources/#loadpublicresources","text":"[jvm]\\ open fun loadPublicResources (@Nullablelogger: ILogger) Reads the public.xml file in data/res/values/ for a given resource folder and builds up a map of public resources. This map is a subset of the full resource map that only contains framework resources that are public.","title":"loadPublicResources"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-framework-resources/load-public-resources/#parameters","text":"jvm logger a logger to report issues to","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / IdGeneratingResourceFile IdGeneratingResourceFile \u00b6 [jvm]\\ class ~~IdGeneratingResourceFile~~ : ResourceFile , ValueResourceParser.IValueResourceRepository \u2014 Deprecated \u00b6 Deprecated \u00b6 This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests. Constructors \u00b6 IdGeneratingResourceFile [jvm] open fun IdGeneratingResourceFile (file: IAbstractFile , folder: ResourceFolder , type: ResourceType) Functions \u00b6 Name Summary addResourceValue [jvm] open fun addResourceValue (value: ResourceValue) getConfiguration [jvm] open fun getConfiguration (): FolderConfiguration abstract fun getConfiguration (): FolderConfiguration getFile [jvm] fun getFile (): IAbstractFile Returns the IFile associated with the ResourceFile. getFolder [jvm] fun getFolder (): ResourceFolder Returns the parent folder as a ResourceFolder . getRepository [jvm] fun getRepository (): ResourceRepository getResourceTypes [jvm] open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. getValue [jvm] open fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. hasResources [jvm] open fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type. isFramework [jvm] fun isFramework (): Boolean Returns whether the resource is a framework resource. toString [jvm] open fun toString (): String","title":"IdGeneratingResourceFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/#idgeneratingresourcefile","text":"[jvm]\\ class ~~IdGeneratingResourceFile~~ : ResourceFile , ValueResourceParser.IValueResourceRepository \u2014","title":"IdGeneratingResourceFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/#deprecated_1","text":"This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/#constructors","text":"IdGeneratingResourceFile [jvm] open fun IdGeneratingResourceFile (file: IAbstractFile , folder: ResourceFolder , type: ResourceType)","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/#functions","text":"Name Summary addResourceValue [jvm] open fun addResourceValue (value: ResourceValue) getConfiguration [jvm] open fun getConfiguration (): FolderConfiguration abstract fun getConfiguration (): FolderConfiguration getFile [jvm] fun getFile (): IAbstractFile Returns the IFile associated with the ResourceFile. getFolder [jvm] fun getFolder (): ResourceFolder Returns the parent folder as a ResourceFolder . getRepository [jvm] fun getRepository (): ResourceRepository getResourceTypes [jvm] open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. getValue [jvm] open fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. hasResources [jvm] open fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type. isFramework [jvm] fun isFramework (): Boolean Returns whether the resource is a framework resource. toString [jvm] open fun toString (): String","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/-id-generating-resource-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / IdGeneratingResourceFile / IdGeneratingResourceFile IdGeneratingResourceFile \u00b6 [jvm]\\ open fun IdGeneratingResourceFile (file: IAbstractFile , folder: ResourceFolder , type: ResourceType)","title":"IdGeneratingResourceFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/-id-generating-resource-file/#idgeneratingresourcefile","text":"[jvm]\\ open fun IdGeneratingResourceFile (file: IAbstractFile , folder: ResourceFolder , type: ResourceType)","title":"IdGeneratingResourceFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/add-resource-value/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / IdGeneratingResourceFile / addResourceValue addResourceValue \u00b6 [jvm]\\ open fun addResourceValue (value: ResourceValue)","title":"addResourceValue - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/add-resource-value/#addresourcevalue","text":"[jvm]\\ open fun addResourceValue (value: ResourceValue)","title":"addResourceValue"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/get-resource-types/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / IdGeneratingResourceFile / getResourceTypes getResourceTypes \u00b6 [jvm]\\ open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. This is never null.","title":"getResourceTypes - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/get-resource-types/#getresourcetypes","text":"[jvm]\\ open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. This is never null.","title":"getResourceTypes"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/get-value/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / IdGeneratingResourceFile / getValue getValue \u00b6 [jvm]\\ open fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. If no resource match, null is returned. Parameters \u00b6 jvm type the type of the resource. name the name of the resource.","title":"getValue - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/get-value/#getvalue","text":"[jvm]\\ open fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. If no resource match, null is returned.","title":"getValue"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/get-value/#parameters","text":"jvm type the type of the resource. name the name of the resource.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/has-resources/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / IdGeneratingResourceFile / hasResources hasResources \u00b6 [jvm]\\ open fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type. Parameters \u00b6 jvm type The ResourceType","title":"hasResources - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/has-resources/#hasresources","text":"[jvm]\\ open fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type.","title":"hasResources"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-generating-resource-file/has-resources/#parameters","text":"jvm type The ResourceType","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / IdResourceParser IdResourceParser \u00b6 [jvm]\\ open class ~~IdResourceParser~~ \u2014 Deprecated \u00b6 Deprecated \u00b6 This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests. Constructors \u00b6 IdResourceParser [jvm] open fun IdResourceParser (@NonNullrepository: ValueResourceParser.IValueResourceRepository , @NonNullcontext: ScanningContext , isFramework: Boolean ) Creates a new IdResourceParser Functions \u00b6 Name Summary parse [jvm] open fun parse (type: ResourceType, path: String , input: InputStream ): Boolean Parse the given input and register ids with the given IValueResourceRepository .","title":"IdResourceParser - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/#idresourceparser","text":"[jvm]\\ open class ~~IdResourceParser~~ \u2014","title":"IdResourceParser"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/#deprecated_1","text":"This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/#constructors","text":"IdResourceParser [jvm] open fun IdResourceParser (@NonNullrepository: ValueResourceParser.IValueResourceRepository , @NonNullcontext: ScanningContext , isFramework: Boolean ) Creates a new IdResourceParser","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/#functions","text":"Name Summary parse [jvm] open fun parse (type: ResourceType, path: String , input: InputStream ): Boolean Parse the given input and register ids with the given IValueResourceRepository .","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/-id-resource-parser/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / IdResourceParser / IdResourceParser IdResourceParser \u00b6 [jvm]\\ open fun IdResourceParser (@NonNullrepository: ValueResourceParser.IValueResourceRepository , @NonNullcontext: ScanningContext , isFramework: Boolean ) Creates a new IdResourceParser Parameters \u00b6 jvm repository value repository for registering resource declaration context a context object with state for the current update, such as a place to stash errors encountered isFramework true if scanning a framework resource","title":"IdResourceParser - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/-id-resource-parser/#idresourceparser","text":"[jvm]\\ open fun IdResourceParser (@NonNullrepository: ValueResourceParser.IValueResourceRepository , @NonNullcontext: ScanningContext , isFramework: Boolean ) Creates a new IdResourceParser","title":"IdResourceParser"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/-id-resource-parser/#parameters","text":"jvm repository value repository for registering resource declaration context a context object with state for the current update, such as a place to stash errors encountered isFramework true if scanning a framework resource","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/parse/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / IdResourceParser / parse parse \u00b6 [jvm]\\ open fun parse (type: ResourceType, path: String , input: InputStream ): Boolean Parse the given input and register ids with the given IValueResourceRepository . Return \u00b6 true if parsing succeeds and false if it fails Parameters \u00b6 jvm type the type of resource being scanned path the full OS path to the file being parsed input the input stream of the XML to be parsed (will be closed by this method) Throws \u00b6 IOException if reading the contents fails","title":"parse - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/parse/#parse","text":"[jvm]\\ open fun parse (type: ResourceType, path: String , input: InputStream ): Boolean Parse the given input and register ids with the given IValueResourceRepository .","title":"parse"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/parse/#return","text":"true if parsing succeeds and false if it fails","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/parse/#parameters","text":"jvm type the type of resource being scanned path the full OS path to the file being parsed input the input stream of the XML to be parsed (will be closed by this method)","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-id-resource-parser/parse/#throws","text":"IOException if reading the contents fails","title":"Throws"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / MultiResourceFile MultiResourceFile \u00b6 [jvm]\\ class ~~MultiResourceFile~~ : ResourceFile , ValueResourceParser.IValueResourceRepository \u2014 Deprecated \u00b6 Deprecated \u00b6 This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests. Constructors \u00b6 MultiResourceFile [jvm] open fun MultiResourceFile (file: IAbstractFile , folder: ResourceFolder ) Functions \u00b6 Name Summary addResourceValue [jvm] open fun addResourceValue (value: ResourceValue) Adds a resource item to the list getConfiguration [jvm] open fun getConfiguration (): FolderConfiguration abstract fun getConfiguration (): FolderConfiguration getFile [jvm] fun getFile (): IAbstractFile Returns the IFile associated with the ResourceFile. getFolder [jvm] fun getFolder (): ResourceFolder Returns the parent folder as a ResourceFolder . getRepository [jvm] fun getRepository (): ResourceRepository getResourceTypes [jvm] open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. getValue [jvm] open fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. hasResources [jvm] open fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type. isFramework [jvm] fun isFramework (): Boolean Returns whether the resource is a framework resource. toString [jvm] open fun toString (): String","title":"MultiResourceFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/#multiresourcefile","text":"[jvm]\\ class ~~MultiResourceFile~~ : ResourceFile , ValueResourceParser.IValueResourceRepository \u2014","title":"MultiResourceFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/#deprecated_1","text":"This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/#constructors","text":"MultiResourceFile [jvm] open fun MultiResourceFile (file: IAbstractFile , folder: ResourceFolder )","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/#functions","text":"Name Summary addResourceValue [jvm] open fun addResourceValue (value: ResourceValue) Adds a resource item to the list getConfiguration [jvm] open fun getConfiguration (): FolderConfiguration abstract fun getConfiguration (): FolderConfiguration getFile [jvm] fun getFile (): IAbstractFile Returns the IFile associated with the ResourceFile. getFolder [jvm] fun getFolder (): ResourceFolder Returns the parent folder as a ResourceFolder . getRepository [jvm] fun getRepository (): ResourceRepository getResourceTypes [jvm] open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. getValue [jvm] open fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. hasResources [jvm] open fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type. isFramework [jvm] fun isFramework (): Boolean Returns whether the resource is a framework resource. toString [jvm] open fun toString (): String","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/-multi-resource-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / MultiResourceFile / MultiResourceFile MultiResourceFile \u00b6 [jvm]\\ open fun MultiResourceFile (file: IAbstractFile , folder: ResourceFolder )","title":"MultiResourceFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/-multi-resource-file/#multiresourcefile","text":"[jvm]\\ open fun MultiResourceFile (file: IAbstractFile , folder: ResourceFolder )","title":"MultiResourceFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/add-resource-value/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / MultiResourceFile / addResourceValue addResourceValue \u00b6 [jvm]\\ open fun addResourceValue (value: ResourceValue) Adds a resource item to the list Parameters \u00b6 jvm value The value of the resource.","title":"addResourceValue - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/add-resource-value/#addresourcevalue","text":"[jvm]\\ open fun addResourceValue (value: ResourceValue) Adds a resource item to the list","title":"addResourceValue"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/add-resource-value/#parameters","text":"jvm value The value of the resource.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/get-resource-types/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / MultiResourceFile / getResourceTypes getResourceTypes \u00b6 [jvm]\\ open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. This is never null.","title":"getResourceTypes - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/get-resource-types/#getresourcetypes","text":"[jvm]\\ open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. This is never null.","title":"getResourceTypes"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/get-value/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / MultiResourceFile / getValue getValue \u00b6 [jvm]\\ open fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. If no resource match, null is returned. Parameters \u00b6 jvm type the type of the resource. name the name of the resource.","title":"getValue - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/get-value/#getvalue","text":"[jvm]\\ open fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. If no resource match, null is returned.","title":"getValue"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/get-value/#parameters","text":"jvm type the type of the resource. name the name of the resource.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/has-resources/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / MultiResourceFile / hasResources hasResources \u00b6 [jvm]\\ open fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type. Parameters \u00b6 jvm type The ResourceType","title":"hasResources - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/has-resources/#hasresources","text":"[jvm]\\ open fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type.","title":"hasResources"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-multi-resource-file/has-resources/#parameters","text":"jvm type The ResourceType","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceDeltaKind ResourceDeltaKind \u00b6 [jvm]\\ enum ~~ResourceDeltaKind~~ \u2014 Deprecated \u00b6 Deprecated \u00b6 This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests. Entries \u00b6 CHANGED [jvm] ~~CHANGED~~ ADDED [jvm] ~~ADDED~~ REMOVED [jvm] ~~REMOVED~~ Functions \u00b6 Name Summary valueOf [jvm] open fun valueOf (name: String ): ResourceDeltaKind Returns the enum constant of this type with the specified name. values [jvm] open fun values (): Array < ResourceDeltaKind > Returns an array containing the constants of this enum type, in the order they\u2019re declared.","title":"ResourceDeltaKind - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/#resourcedeltakind","text":"[jvm]\\ enum ~~ResourceDeltaKind~~ \u2014","title":"ResourceDeltaKind"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/#deprecated_1","text":"This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/#entries","text":"CHANGED [jvm] ~~CHANGED~~ ADDED [jvm] ~~ADDED~~ REMOVED [jvm] ~~REMOVED~~","title":"Entries"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/#functions","text":"Name Summary valueOf [jvm] open fun valueOf (name: String ): ResourceDeltaKind Returns the enum constant of this type with the specified name. values [jvm] open fun values (): Array < ResourceDeltaKind > Returns an array containing the constants of this enum type, in the order they\u2019re declared.","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/value-of/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceDeltaKind / valueOf valueOf \u00b6 [jvm]\\ open fun valueOf (name: String ): ResourceDeltaKind Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"valueOf - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/value-of/#valueof","text":"[jvm]\\ open fun valueOf (name: String ): ResourceDeltaKind Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/values/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceDeltaKind / values values \u00b6 [jvm]\\ open fun values (): Array < ResourceDeltaKind > Returns an array containing the constants of this enum type, in the order they\u2019re declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they\u2019re declared","title":"values - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/values/#values","text":"[jvm]\\ open fun values (): Array < ResourceDeltaKind > Returns an array containing the constants of this enum type, in the order they\u2019re declared. This method may be used to iterate over the constants.","title":"values"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/values/#return","text":"an array containing the constants of this enum type, in the order they\u2019re declared","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/-a-d-d-e-d/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceDeltaKind / ADDED ADDED \u00b6 [jvm]\\ ~~ADDED~~ Deprecated \u00b6","title":"ADDED - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/-a-d-d-e-d/#added","text":"[jvm]\\ ~~ADDED~~","title":"ADDED"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/-a-d-d-e-d/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/-c-h-a-n-g-e-d/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceDeltaKind / CHANGED CHANGED \u00b6 [jvm]\\ ~~CHANGED~~ Deprecated \u00b6","title":"CHANGED - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/-c-h-a-n-g-e-d/#changed","text":"[jvm]\\ ~~CHANGED~~","title":"CHANGED"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/-c-h-a-n-g-e-d/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/-r-e-m-o-v-e-d/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceDeltaKind / REMOVED REMOVED \u00b6 [jvm]\\ ~~REMOVED~~ Deprecated \u00b6","title":"REMOVED - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/-r-e-m-o-v-e-d/#removed","text":"[jvm]\\ ~~REMOVED~~","title":"REMOVED"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-delta-kind/-r-e-m-o-v-e-d/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFile ResourceFile \u00b6 [jvm]\\ abstract class ~~ResourceFile~~ : Configurable\u2014 Deprecated \u00b6 Deprecated \u00b6 This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests. Functions \u00b6 Name Summary getConfiguration [jvm] open fun getConfiguration (): FolderConfiguration getFile [jvm] fun getFile (): IAbstractFile Returns the IFile associated with the ResourceFile. getFolder [jvm] fun getFolder (): ResourceFolder Returns the parent folder as a ResourceFolder . getRepository [jvm] fun getRepository (): ResourceRepository getResourceTypes [jvm] abstract fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. getValue [jvm] abstract fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. hasResources [jvm] abstract fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type. isFramework [jvm] fun isFramework (): Boolean Returns whether the resource is a framework resource. toString [jvm] open fun toString (): String Inheritors \u00b6 Name MultiResourceFile IdGeneratingResourceFile SingleResourceFile","title":"ResourceFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/#resourcefile","text":"[jvm]\\ abstract class ~~ResourceFile~~ : Configurable\u2014","title":"ResourceFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/#deprecated_1","text":"This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/#functions","text":"Name Summary getConfiguration [jvm] open fun getConfiguration (): FolderConfiguration getFile [jvm] fun getFile (): IAbstractFile Returns the IFile associated with the ResourceFile. getFolder [jvm] fun getFolder (): ResourceFolder Returns the parent folder as a ResourceFolder . getRepository [jvm] fun getRepository (): ResourceRepository getResourceTypes [jvm] abstract fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. getValue [jvm] abstract fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. hasResources [jvm] abstract fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type. isFramework [jvm] fun isFramework (): Boolean Returns whether the resource is a framework resource. toString [jvm] open fun toString (): String","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/#inheritors","text":"Name MultiResourceFile IdGeneratingResourceFile SingleResourceFile","title":"Inheritors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/get-configuration/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFile / getConfiguration getConfiguration \u00b6 [jvm]\\ open fun getConfiguration (): FolderConfiguration","title":"getConfiguration - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/get-configuration/#getconfiguration","text":"[jvm]\\ open fun getConfiguration (): FolderConfiguration","title":"getConfiguration"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/get-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFile / getFile getFile \u00b6 [jvm]\\ fun getFile (): IAbstractFile Returns the IFile associated with the ResourceFile.","title":"getFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/get-file/#getfile","text":"[jvm]\\ fun getFile (): IAbstractFile Returns the IFile associated with the ResourceFile.","title":"getFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/get-folder/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFile / getFolder getFolder \u00b6 [jvm]\\ fun getFolder (): ResourceFolder Returns the parent folder as a ResourceFolder .","title":"getFolder - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/get-folder/#getfolder","text":"[jvm]\\ fun getFolder (): ResourceFolder Returns the parent folder as a ResourceFolder .","title":"getFolder"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/get-repository/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFile / getRepository getRepository \u00b6 [jvm]\\ fun getRepository (): ResourceRepository","title":"getRepository - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/get-repository/#getrepository","text":"[jvm]\\ fun getRepository (): ResourceRepository","title":"getRepository"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/get-resource-types/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFile / getResourceTypes getResourceTypes \u00b6 [jvm]\\ abstract fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. This is never null.","title":"getResourceTypes - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/get-resource-types/#getresourcetypes","text":"[jvm]\\ abstract fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. This is never null.","title":"getResourceTypes"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/get-value/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFile / getValue getValue \u00b6 [jvm]\\ abstract fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. If no resource match, null is returned. Parameters \u00b6 jvm type the type of the resource. name the name of the resource.","title":"getValue - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/get-value/#getvalue","text":"[jvm]\\ abstract fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. If no resource match, null is returned.","title":"getValue"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/get-value/#parameters","text":"jvm type the type of the resource. name the name of the resource.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/has-resources/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFile / hasResources hasResources \u00b6 [jvm]\\ abstract fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type. Parameters \u00b6 jvm type The ResourceType","title":"hasResources - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/has-resources/#hasresources","text":"[jvm]\\ abstract fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type.","title":"hasResources"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/has-resources/#parameters","text":"jvm type The ResourceType","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/is-framework/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFile / isFramework isFramework \u00b6 [jvm]\\ fun isFramework (): Boolean Returns whether the resource is a framework resource.","title":"isFramework - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/is-framework/#isframework","text":"[jvm]\\ fun isFramework (): Boolean Returns whether the resource is a framework resource.","title":"isFramework"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/to-string/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFile / toString toString \u00b6 [jvm]\\ open fun toString (): String","title":"toString - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-file/to-string/#tostring","text":"[jvm]\\ open fun toString (): String","title":"toString"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFolder ResourceFolder \u00b6 [jvm]\\ class ~~ResourceFolder~~ : Configurable\u2014 Deprecated \u00b6 Deprecated \u00b6 This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests. Functions \u00b6 Name Summary addFile [jvm] open fun addFile (file: ResourceFile ) Adds a ResourceFile to the folder. getConfiguration [jvm] open fun getConfiguration (): FolderConfiguration getFile [jvm] open fun getFile (filename: String ): ResourceFile Returns the ResourceFile matching a given name. getFolder [jvm] open fun getFolder (): IAbstractFolder Returns the IAbstractFolder associated with this object. getRepository [jvm] open fun getRepository (): ResourceRepository getResourceTypes [jvm] open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceTypes generated by the files inside this folder. getType [jvm] open fun getType (): ResourceFolderType Returns the ResourceFolderType of this object. hasFile [jvm] open fun hasFile (name: String ): Boolean Returns whether the folder contains a file with the given name. hasResources [jvm] open fun hasResources (type: ResourceType): Boolean Returns whether a file in the folder is generating a resource of a specified type. processFile [jvm] open fun processFile (file: IAbstractFile , kind: ResourceDeltaKind , context: ScanningContext ): ResourceFile Processes a file and adds it to its parent folder resource. toString [jvm] open fun toString (): String","title":"ResourceFolder - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/#resourcefolder","text":"[jvm]\\ class ~~ResourceFolder~~ : Configurable\u2014","title":"ResourceFolder"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/#deprecated_1","text":"This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/#functions","text":"Name Summary addFile [jvm] open fun addFile (file: ResourceFile ) Adds a ResourceFile to the folder. getConfiguration [jvm] open fun getConfiguration (): FolderConfiguration getFile [jvm] open fun getFile (filename: String ): ResourceFile Returns the ResourceFile matching a given name. getFolder [jvm] open fun getFolder (): IAbstractFolder Returns the IAbstractFolder associated with this object. getRepository [jvm] open fun getRepository (): ResourceRepository getResourceTypes [jvm] open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceTypes generated by the files inside this folder. getType [jvm] open fun getType (): ResourceFolderType Returns the ResourceFolderType of this object. hasFile [jvm] open fun hasFile (name: String ): Boolean Returns whether the folder contains a file with the given name. hasResources [jvm] open fun hasResources (type: ResourceType): Boolean Returns whether a file in the folder is generating a resource of a specified type. processFile [jvm] open fun processFile (file: IAbstractFile , kind: ResourceDeltaKind , context: ScanningContext ): ResourceFile Processes a file and adds it to its parent folder resource. toString [jvm] open fun toString (): String","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/add-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFolder / addFile addFile \u00b6 [jvm]\\ open fun addFile (file: ResourceFile ) Adds a ResourceFile to the folder. Parameters \u00b6 jvm file The ResourceFile .","title":"addFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/add-file/#addfile","text":"[jvm]\\ open fun addFile (file: ResourceFile ) Adds a ResourceFile to the folder.","title":"addFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/add-file/#parameters","text":"jvm file The ResourceFile .","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-configuration/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFolder / getConfiguration getConfiguration \u00b6 [jvm]\\ open fun getConfiguration (): FolderConfiguration","title":"getConfiguration - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-configuration/#getconfiguration","text":"[jvm]\\ open fun getConfiguration (): FolderConfiguration","title":"getConfiguration"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFolder / getFile getFile \u00b6 [jvm]\\ open fun getFile (filename: String ): ResourceFile Returns the ResourceFile matching a given name. Return \u00b6 the ResourceFile or null if no match was found. Parameters \u00b6 jvm filename The name of the file to return.","title":"getFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-file/#getfile","text":"[jvm]\\ open fun getFile (filename: String ): ResourceFile Returns the ResourceFile matching a given name.","title":"getFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-file/#return","text":"the ResourceFile or null if no match was found.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-file/#parameters","text":"jvm filename The name of the file to return.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-folder/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFolder / getFolder getFolder \u00b6 [jvm]\\ open fun getFolder (): IAbstractFolder Returns the IAbstractFolder associated with this object.","title":"getFolder - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-folder/#getfolder","text":"[jvm]\\ open fun getFolder (): IAbstractFolder Returns the IAbstractFolder associated with this object.","title":"getFolder"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-repository/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFolder / getRepository getRepository \u00b6 [jvm]\\ open fun getRepository (): ResourceRepository","title":"getRepository - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-repository/#getrepository","text":"[jvm]\\ open fun getRepository (): ResourceRepository","title":"getRepository"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-resource-types/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFolder / getResourceTypes getResourceTypes \u00b6 [jvm]\\ open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceTypes generated by the files inside this folder.","title":"getResourceTypes - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-resource-types/#getresourcetypes","text":"[jvm]\\ open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceTypes generated by the files inside this folder.","title":"getResourceTypes"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-type/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFolder / getType getType \u00b6 [jvm]\\ open fun getType (): ResourceFolderType Returns the ResourceFolderType of this object.","title":"getType - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/get-type/#gettype","text":"[jvm]\\ open fun getType (): ResourceFolderType Returns the ResourceFolderType of this object.","title":"getType"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/has-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFolder / hasFile hasFile \u00b6 [jvm]\\ open fun hasFile (name: String ): Boolean Returns whether the folder contains a file with the given name. Parameters \u00b6 jvm name the name of the file.","title":"hasFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/has-file/#hasfile","text":"[jvm]\\ open fun hasFile (name: String ): Boolean Returns whether the folder contains a file with the given name.","title":"hasFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/has-file/#parameters","text":"jvm name the name of the file.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/has-resources/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFolder / hasResources hasResources \u00b6 [jvm]\\ open fun hasResources (type: ResourceType): Boolean Returns whether a file in the folder is generating a resource of a specified type. Parameters \u00b6 jvm type The ResourceType being looked up.","title":"hasResources - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/has-resources/#hasresources","text":"[jvm]\\ open fun hasResources (type: ResourceType): Boolean Returns whether a file in the folder is generating a resource of a specified type.","title":"hasResources"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/has-resources/#parameters","text":"jvm type The ResourceType being looked up.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/process-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFolder / processFile processFile \u00b6 [jvm]\\ open fun processFile (file: IAbstractFile , kind: ResourceDeltaKind , context: ScanningContext ): ResourceFile Processes a file and adds it to its parent folder resource. Return \u00b6 the ResourceFile that was created. Parameters \u00b6 jvm file the underlying resource file. kind the file change kind. context a context object with state for the current update, such as a place to stash errors encountered","title":"processFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/process-file/#processfile","text":"[jvm]\\ open fun processFile (file: IAbstractFile , kind: ResourceDeltaKind , context: ScanningContext ): ResourceFile Processes a file and adds it to its parent folder resource.","title":"processFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/process-file/#return","text":"the ResourceFile that was created.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/process-file/#parameters","text":"jvm file the underlying resource file. kind the file change kind. context a context object with state for the current update, such as a place to stash errors encountered","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/to-string/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceFolder / toString toString \u00b6 [jvm]\\ open fun toString (): String","title":"toString - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-folder/to-string/#tostring","text":"[jvm]\\ open fun toString (): String","title":"toString"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem ResourceItem \u00b6 [jvm]\\ open class ~~ResourceItem~~ : Comparable < T > \u2014 Deprecated \u00b6 Deprecated \u00b6 This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests. Constructors \u00b6 ResourceItem [jvm] open fun ResourceItem (name: String ) Constructs a new ResourceItem. Functions \u00b6 Name Summary compareTo [jvm] open fun compareTo (other: ResourceItem ): Int Compares the ResourceItem to another. getAlternateCount [jvm] open fun getAlternateCount (): Int Returns the number of alternate versions for this resource. getName [jvm] fun getName (): String Returns the name of the resource. getResourceValue [jvm] open fun getResourceValue (type: ResourceType, referenceConfig: FolderConfiguration, isFramework: Boolean ): ResourceValue Returns a ResourceValue for this item based on the given configuration. getSourceFileArray [jvm] open fun getSourceFileArray (): Array < ResourceFile > Returns the sorted list of ResourceItem objects for this resource item. getSourceFileList [jvm] open fun getSourceFileList (): List < ResourceFile > Returns the list of source file for this resource. getXmlString [jvm] open fun getXmlString (type: ResourceType, system: Boolean ): String Returns a formatted string usable in an XML to use for the ResourceItem . hasAlternates [jvm] open fun hasAlternates (): Boolean Returns if the resource has at least one non-default version. hasDefault [jvm] open fun hasDefault (): Boolean Returns whether the resource has a default version, with no qualifier. isDeclaredInline [jvm] open fun isDeclaredInline (): Boolean Returns whether the ID resource has been declared inline inside another resource XML file. isEditableDirectly [jvm] open fun isEditableDirectly (): Boolean Returns whether the resource is editable directly. toString [jvm] open fun toString (): String","title":"ResourceItem - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/#resourceitem","text":"[jvm]\\ open class ~~ResourceItem~~ : Comparable < T > \u2014","title":"ResourceItem"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/#deprecated_1","text":"This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/#constructors","text":"ResourceItem [jvm] open fun ResourceItem (name: String ) Constructs a new ResourceItem.","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/#functions","text":"Name Summary compareTo [jvm] open fun compareTo (other: ResourceItem ): Int Compares the ResourceItem to another. getAlternateCount [jvm] open fun getAlternateCount (): Int Returns the number of alternate versions for this resource. getName [jvm] fun getName (): String Returns the name of the resource. getResourceValue [jvm] open fun getResourceValue (type: ResourceType, referenceConfig: FolderConfiguration, isFramework: Boolean ): ResourceValue Returns a ResourceValue for this item based on the given configuration. getSourceFileArray [jvm] open fun getSourceFileArray (): Array < ResourceFile > Returns the sorted list of ResourceItem objects for this resource item. getSourceFileList [jvm] open fun getSourceFileList (): List < ResourceFile > Returns the list of source file for this resource. getXmlString [jvm] open fun getXmlString (type: ResourceType, system: Boolean ): String Returns a formatted string usable in an XML to use for the ResourceItem . hasAlternates [jvm] open fun hasAlternates (): Boolean Returns if the resource has at least one non-default version. hasDefault [jvm] open fun hasDefault (): Boolean Returns whether the resource has a default version, with no qualifier. isDeclaredInline [jvm] open fun isDeclaredInline (): Boolean Returns whether the ID resource has been declared inline inside another resource XML file. isEditableDirectly [jvm] open fun isEditableDirectly (): Boolean Returns whether the resource is editable directly. toString [jvm] open fun toString (): String","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/-resource-item/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem / ResourceItem ResourceItem \u00b6 [jvm]\\ open fun ResourceItem (name: String ) Constructs a new ResourceItem. Parameters \u00b6 jvm name the name of the resource as it appears in the XML and R.java files.","title":"ResourceItem - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/-resource-item/#resourceitem","text":"[jvm]\\ open fun ResourceItem (name: String ) Constructs a new ResourceItem.","title":"ResourceItem"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/-resource-item/#parameters","text":"jvm name the name of the resource as it appears in the XML and R.java files.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/compare-to/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem / compareTo compareTo \u00b6 [jvm]\\ open fun compareTo (other: ResourceItem ): Int Compares the ResourceItem to another. Parameters \u00b6 jvm other the ResourceItem to be compared to.","title":"compareTo - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/compare-to/#compareto","text":"[jvm]\\ open fun compareTo (other: ResourceItem ): Int Compares the ResourceItem to another.","title":"compareTo"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/compare-to/#parameters","text":"jvm other the ResourceItem to be compared to.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-alternate-count/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem / getAlternateCount getAlternateCount \u00b6 [jvm]\\ open fun getAlternateCount (): Int Returns the number of alternate versions for this resource. See also \u00b6 jvm ResourceFile FolderConfiguration","title":"getAlternateCount - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-alternate-count/#getalternatecount","text":"[jvm]\\ open fun getAlternateCount (): Int Returns the number of alternate versions for this resource.","title":"getAlternateCount"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-alternate-count/#see-also","text":"jvm ResourceFile FolderConfiguration","title":"See also"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-name/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem / getName getName \u00b6 [jvm]\\ fun getName (): String Returns the name of the resource.","title":"getName - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-name/#getname","text":"[jvm]\\ fun getName (): String Returns the name of the resource.","title":"getName"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-resource-value/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem / getResourceValue getResourceValue \u00b6 [jvm]\\ open fun getResourceValue (type: ResourceType, referenceConfig: FolderConfiguration, isFramework: Boolean ): ResourceValue Returns a ResourceValue for this item based on the given configuration. If the ResourceItem has several source files, one will be selected based on the config. Return \u00b6 a ResourceValue or null if none match the config. Parameters \u00b6 jvm type the type of the resource. This is necessary because ResourceItem doesn\u2019t embed its type, but ResourceValue does. referenceConfig the config of the resource item. isFramework whether the resource is a framework value. Same as the type.","title":"getResourceValue - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-resource-value/#getresourcevalue","text":"[jvm]\\ open fun getResourceValue (type: ResourceType, referenceConfig: FolderConfiguration, isFramework: Boolean ): ResourceValue Returns a ResourceValue for this item based on the given configuration. If the ResourceItem has several source files, one will be selected based on the config.","title":"getResourceValue"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-resource-value/#return","text":"a ResourceValue or null if none match the config.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-resource-value/#parameters","text":"jvm type the type of the resource. This is necessary because ResourceItem doesn\u2019t embed its type, but ResourceValue does. referenceConfig the config of the resource item. isFramework whether the resource is a framework value. Same as the type.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-source-file-array/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem / getSourceFileArray getSourceFileArray \u00b6 [jvm]\\ open fun getSourceFileArray (): Array < ResourceFile > Returns the sorted list of ResourceItem objects for this resource item.","title":"getSourceFileArray - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-source-file-array/#getsourcefilearray","text":"[jvm]\\ open fun getSourceFileArray (): Array < ResourceFile > Returns the sorted list of ResourceItem objects for this resource item.","title":"getSourceFileArray"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-source-file-list/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem / getSourceFileList getSourceFileList \u00b6 [jvm]\\ open fun getSourceFileList (): List < ResourceFile > Returns the list of source file for this resource.","title":"getSourceFileList - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-source-file-list/#getsourcefilelist","text":"[jvm]\\ open fun getSourceFileList (): List < ResourceFile > Returns the list of source file for this resource.","title":"getSourceFileList"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-xml-string/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem / getXmlString getXmlString \u00b6 [jvm]\\ open fun getXmlString (type: ResourceType, system: Boolean ): String Returns a formatted string usable in an XML to use for the ResourceItem . Return \u00b6 a string in the format @[type]/[name] Parameters \u00b6 jvm system Whether this is a system resource or a project resource.","title":"getXmlString - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-xml-string/#getxmlstring","text":"[jvm]\\ open fun getXmlString (type: ResourceType, system: Boolean ): String Returns a formatted string usable in an XML to use for the ResourceItem .","title":"getXmlString"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-xml-string/#return","text":"a string in the format @[type]/[name]","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/get-xml-string/#parameters","text":"jvm system Whether this is a system resource or a project resource.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/has-alternates/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem / hasAlternates hasAlternates \u00b6 [jvm]\\ open fun hasAlternates (): Boolean Returns if the resource has at least one non-default version. See also \u00b6 jvm ResourceFile FolderConfiguration","title":"hasAlternates - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/has-alternates/#hasalternates","text":"[jvm]\\ open fun hasAlternates (): Boolean Returns if the resource has at least one non-default version.","title":"hasAlternates"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/has-alternates/#see-also","text":"jvm ResourceFile FolderConfiguration","title":"See also"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/has-default/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem / hasDefault hasDefault \u00b6 [jvm]\\ open fun hasDefault (): Boolean Returns whether the resource has a default version, with no qualifier. See also \u00b6 jvm ResourceFile FolderConfiguration","title":"hasDefault - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/has-default/#hasdefault","text":"[jvm]\\ open fun hasDefault (): Boolean Returns whether the resource has a default version, with no qualifier.","title":"hasDefault"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/has-default/#see-also","text":"jvm ResourceFile FolderConfiguration","title":"See also"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/is-declared-inline/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem / isDeclaredInline isDeclaredInline \u00b6 [jvm]\\ open fun isDeclaredInline (): Boolean Returns whether the ID resource has been declared inline inside another resource XML file. If the resource type is not ID, this will always return false .","title":"isDeclaredInline - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/is-declared-inline/#isdeclaredinline","text":"[jvm]\\ open fun isDeclaredInline (): Boolean Returns whether the ID resource has been declared inline inside another resource XML file. If the resource type is not ID, this will always return false .","title":"isDeclaredInline"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/is-editable-directly/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem / isEditableDirectly isEditableDirectly \u00b6 [jvm]\\ open fun isEditableDirectly (): Boolean Returns whether the resource is editable directly. This is typically the case for resources that don\u2019t have alternate versions, or resources of type ID that aren\u2019t declared inline.","title":"isEditableDirectly - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/is-editable-directly/#iseditabledirectly","text":"[jvm]\\ open fun isEditableDirectly (): Boolean Returns whether the resource is editable directly. This is typically the case for resources that don\u2019t have alternate versions, or resources of type ID that aren\u2019t declared inline.","title":"isEditableDirectly"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/to-string/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceItem / toString toString \u00b6 [jvm]\\ open fun toString (): String","title":"toString - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-item/to-string/#tostring","text":"[jvm]\\ open fun toString (): String","title":"toString"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository ResourceRepository \u00b6 [jvm]\\ abstract class ~~ResourceRepository~~ \u2014 Deprecated \u00b6 Deprecated \u00b6 This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests. Functions \u00b6 Name Summary clear [jvm] open fun clear () ensureInitialized [jvm] open fun ensureInitialized (): Boolean Ensures that the repository has been initialized again after a call to clear . getAvailableResourceTypes [jvm] @NonNull open fun getAvailableResourceTypes (): List <ResourceType> getConfiguredResources [jvm] @NonNull open fun getConfiguredResources (@NonNullreferenceConfig: FolderConfiguration): Map <ResourceType, ResourceValueMap> Returns the resources values matching a given FolderConfiguration. getFolders [jvm] @Nullable open fun getFolders (@NonNulltype: ResourceFolderType): List < ResourceFolder > Returns a list of ResourceFolder for a specific ResourceFolderType. getLanguages [jvm] @NonNull open fun getLanguages (): SortedSet < String > Returns the sorted list of languages used in the resources. getMatchingFile [jvm] @Nullable open fun getMatchingFile (@NonNullname: String , @NonNulltype: ResourceFolderType, @NonNullconfig: FolderConfiguration): ResourceFile Returns the ResourceFile matching the given name, ResourceFolderType and configuration. [jvm] @Nullable open fun getMatchingFile (@NonNullname: String , @NonNulltype: ResourceType, @NonNullconfig: FolderConfiguration): ResourceFile Returns the ResourceFile matching the given name, ResourceType and configuration. getRegions [jvm] @NonNull open fun getRegions (@NonNullcurrentLanguage: String ): SortedSet < String > Returns the sorted list of regions used in the resources with the given language. getResFolder [jvm] open fun getResFolder (): IAbstractFolder getResourceFolder [jvm] @Nullable open fun getResourceFolder (@NonNullfolder: IAbstractFolder ): ResourceFolder Returns the ResourceFolder associated with a IAbstractFolder . getResourceItem [jvm] @NonNull open fun getResourceItem (@NonNulltype: ResourceType, @NonNullname: String ): ResourceItem Returns a ResourceItem matching the given ResourceType and name. getResourceItemsOfType [jvm] @NonNull open fun getResourceItemsOfType (@NonNulltype: ResourceType): Collection < ResourceItem > Returns a list of ResourceItem matching a given ResourceType. getSourceFiles [jvm] @Nullable open fun getSourceFiles (@NonNulltype: ResourceType, @NonNullname: String , @NullablereferenceConfig: FolderConfiguration): List < ResourceFile > Returns the list of source files for a given resource. hasResourceItem [jvm] open fun hasResourceItem (@NonNullurl: String ): Boolean open fun hasResourceItem (@NonNulltype: ResourceType, @NonNullname: String ): Boolean Returns true if this resource repository contains a resource of the given name. hasResourcesOfType [jvm] open fun hasResourcesOfType (@NonNulltype: ResourceType): Boolean Returns whether the repository has resources of a given ResourceType. isFrameworkRepository [jvm] open fun isFrameworkRepository (): Boolean loadResources [jvm] open fun loadResources () Loads the resources. postUpdateCleanUp [jvm] open fun postUpdateCleanUp () Cleans up the repository of resource items that have no source file anymore. processFolder [jvm] @Nullable open fun processFolder (@NonNullfolder: IAbstractFolder ): ResourceFolder Processes a folder and adds it to the list of existing folders. removeFolder [jvm] @Nullable open fun removeFolder (@NonNulltype: ResourceFolderType, @NonNullremovedFolder: IAbstractFolder , @Nullablecontext: ScanningContext ): ResourceFolder Removes a ResourceFolder associated with the specified IAbstractFolder . Inheritors \u00b6 Name FrameworkResources","title":"ResourceRepository - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/#resourcerepository","text":"[jvm]\\ abstract class ~~ResourceRepository~~ \u2014","title":"ResourceRepository"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/#deprecated_1","text":"This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/#functions","text":"Name Summary clear [jvm] open fun clear () ensureInitialized [jvm] open fun ensureInitialized (): Boolean Ensures that the repository has been initialized again after a call to clear . getAvailableResourceTypes [jvm] @NonNull open fun getAvailableResourceTypes (): List <ResourceType> getConfiguredResources [jvm] @NonNull open fun getConfiguredResources (@NonNullreferenceConfig: FolderConfiguration): Map <ResourceType, ResourceValueMap> Returns the resources values matching a given FolderConfiguration. getFolders [jvm] @Nullable open fun getFolders (@NonNulltype: ResourceFolderType): List < ResourceFolder > Returns a list of ResourceFolder for a specific ResourceFolderType. getLanguages [jvm] @NonNull open fun getLanguages (): SortedSet < String > Returns the sorted list of languages used in the resources. getMatchingFile [jvm] @Nullable open fun getMatchingFile (@NonNullname: String , @NonNulltype: ResourceFolderType, @NonNullconfig: FolderConfiguration): ResourceFile Returns the ResourceFile matching the given name, ResourceFolderType and configuration. [jvm] @Nullable open fun getMatchingFile (@NonNullname: String , @NonNulltype: ResourceType, @NonNullconfig: FolderConfiguration): ResourceFile Returns the ResourceFile matching the given name, ResourceType and configuration. getRegions [jvm] @NonNull open fun getRegions (@NonNullcurrentLanguage: String ): SortedSet < String > Returns the sorted list of regions used in the resources with the given language. getResFolder [jvm] open fun getResFolder (): IAbstractFolder getResourceFolder [jvm] @Nullable open fun getResourceFolder (@NonNullfolder: IAbstractFolder ): ResourceFolder Returns the ResourceFolder associated with a IAbstractFolder . getResourceItem [jvm] @NonNull open fun getResourceItem (@NonNulltype: ResourceType, @NonNullname: String ): ResourceItem Returns a ResourceItem matching the given ResourceType and name. getResourceItemsOfType [jvm] @NonNull open fun getResourceItemsOfType (@NonNulltype: ResourceType): Collection < ResourceItem > Returns a list of ResourceItem matching a given ResourceType. getSourceFiles [jvm] @Nullable open fun getSourceFiles (@NonNulltype: ResourceType, @NonNullname: String , @NullablereferenceConfig: FolderConfiguration): List < ResourceFile > Returns the list of source files for a given resource. hasResourceItem [jvm] open fun hasResourceItem (@NonNullurl: String ): Boolean open fun hasResourceItem (@NonNulltype: ResourceType, @NonNullname: String ): Boolean Returns true if this resource repository contains a resource of the given name. hasResourcesOfType [jvm] open fun hasResourcesOfType (@NonNulltype: ResourceType): Boolean Returns whether the repository has resources of a given ResourceType. isFrameworkRepository [jvm] open fun isFrameworkRepository (): Boolean loadResources [jvm] open fun loadResources () Loads the resources. postUpdateCleanUp [jvm] open fun postUpdateCleanUp () Cleans up the repository of resource items that have no source file anymore. processFolder [jvm] @Nullable open fun processFolder (@NonNullfolder: IAbstractFolder ): ResourceFolder Processes a folder and adds it to the list of existing folders. removeFolder [jvm] @Nullable open fun removeFolder (@NonNulltype: ResourceFolderType, @NonNullremovedFolder: IAbstractFolder , @Nullablecontext: ScanningContext ): ResourceFolder Removes a ResourceFolder associated with the specified IAbstractFolder .","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/#inheritors","text":"Name FrameworkResources","title":"Inheritors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/clear/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / clear clear \u00b6 [jvm]\\ open fun clear ()","title":"clear - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/clear/#clear","text":"[jvm]\\ open fun clear ()","title":"clear"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/ensure-initialized/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / ensureInitialized ensureInitialized \u00b6 [jvm]\\ open fun ensureInitialized (): Boolean Ensures that the repository has been initialized again after a call to clear . Return \u00b6 true if the repository was just re-initialized.","title":"ensureInitialized - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/ensure-initialized/#ensureinitialized","text":"[jvm]\\ open fun ensureInitialized (): Boolean Ensures that the repository has been initialized again after a call to clear .","title":"ensureInitialized"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/ensure-initialized/#return","text":"true if the repository was just re-initialized.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-available-resource-types/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / getAvailableResourceTypes getAvailableResourceTypes \u00b6 [jvm]\\ @NonNull open fun getAvailableResourceTypes (): List <ResourceType>","title":"getAvailableResourceTypes - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-available-resource-types/#getavailableresourcetypes","text":"[jvm]\\ @NonNull open fun getAvailableResourceTypes (): List <ResourceType>","title":"getAvailableResourceTypes"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-configured-resources/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / getConfiguredResources getConfiguredResources \u00b6 [jvm]\\ @NonNull open fun getConfiguredResources (@NonNullreferenceConfig: FolderConfiguration): Map <ResourceType, ResourceValueMap> Returns the resources values matching a given FolderConfiguration. Return \u00b6 a map with guaranteed to contain an entry for each ResourceType Parameters \u00b6 jvm referenceConfig the configuration that each value must match.","title":"getConfiguredResources - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-configured-resources/#getconfiguredresources","text":"[jvm]\\ @NonNull open fun getConfiguredResources (@NonNullreferenceConfig: FolderConfiguration): Map <ResourceType, ResourceValueMap> Returns the resources values matching a given FolderConfiguration.","title":"getConfiguredResources"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-configured-resources/#return","text":"a map with guaranteed to contain an entry for each ResourceType","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-configured-resources/#parameters","text":"jvm referenceConfig the configuration that each value must match.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-folders/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / getFolders getFolders \u00b6 [jvm]\\ @Nullable open fun getFolders (@NonNulltype: ResourceFolderType): List < ResourceFolder > Returns a list of ResourceFolder for a specific ResourceFolderType. Parameters \u00b6 jvm type The ResourceFolderType","title":"getFolders - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-folders/#getfolders","text":"[jvm]\\ @Nullable open fun getFolders (@NonNulltype: ResourceFolderType): List < ResourceFolder > Returns a list of ResourceFolder for a specific ResourceFolderType.","title":"getFolders"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-folders/#parameters","text":"jvm type The ResourceFolderType","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-languages/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / getLanguages getLanguages \u00b6 [jvm]\\ @NonNull open fun getLanguages (): SortedSet < String > Returns the sorted list of languages used in the resources.","title":"getLanguages - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-languages/#getlanguages","text":"[jvm]\\ @NonNull open fun getLanguages (): SortedSet < String > Returns the sorted list of languages used in the resources.","title":"getLanguages"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-matching-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / getMatchingFile getMatchingFile \u00b6 [jvm]\\ @Nullable open fun getMatchingFile (@NonNullname: String , @NonNulltype: ResourceFolderType, @NonNullconfig: FolderConfiguration): ResourceFile Returns the ResourceFile matching the given name, ResourceFolderType and configuration. This only works with files generating one resource named after the file (for instance, layouts, bitmap based drawable, xml, anims). Return \u00b6 the matching file or null if no match was found. Parameters \u00b6 jvm name the resource name or file name type the folder type search for config the folder configuration to match for [jvm]\\ @Nullable open fun getMatchingFile (@NonNullname: String , @NonNulltype: ResourceType, @NonNullconfig: FolderConfiguration): ResourceFile Returns the ResourceFile matching the given name, ResourceType and configuration. This only works with files generating one resource named after the file (for instance, layouts, bitmap based drawable, xml, anims). Return \u00b6 the matching file or null if no match was found. Parameters \u00b6 jvm name the resource name or file name type the folder type search for config the folder configuration to match for","title":"getMatchingFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-matching-file/#getmatchingfile","text":"[jvm]\\ @Nullable open fun getMatchingFile (@NonNullname: String , @NonNulltype: ResourceFolderType, @NonNullconfig: FolderConfiguration): ResourceFile Returns the ResourceFile matching the given name, ResourceFolderType and configuration. This only works with files generating one resource named after the file (for instance, layouts, bitmap based drawable, xml, anims).","title":"getMatchingFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-matching-file/#return","text":"the matching file or null if no match was found.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-matching-file/#parameters","text":"jvm name the resource name or file name type the folder type search for config the folder configuration to match for [jvm]\\ @Nullable open fun getMatchingFile (@NonNullname: String , @NonNulltype: ResourceType, @NonNullconfig: FolderConfiguration): ResourceFile Returns the ResourceFile matching the given name, ResourceType and configuration. This only works with files generating one resource named after the file (for instance, layouts, bitmap based drawable, xml, anims).","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-matching-file/#return_1","text":"the matching file or null if no match was found.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-matching-file/#parameters_1","text":"jvm name the resource name or file name type the folder type search for config the folder configuration to match for","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-regions/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / getRegions getRegions \u00b6 [jvm]\\ @NonNull open fun getRegions (@NonNullcurrentLanguage: String ): SortedSet < String > Returns the sorted list of regions used in the resources with the given language. Parameters \u00b6 jvm currentLanguage the current language the region must be associated with.","title":"getRegions - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-regions/#getregions","text":"[jvm]\\ @NonNull open fun getRegions (@NonNullcurrentLanguage: String ): SortedSet < String > Returns the sorted list of regions used in the resources with the given language.","title":"getRegions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-regions/#parameters","text":"jvm currentLanguage the current language the region must be associated with.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-res-folder/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / getResFolder getResFolder \u00b6 [jvm]\\ open fun getResFolder (): IAbstractFolder","title":"getResFolder - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-res-folder/#getresfolder","text":"[jvm]\\ open fun getResFolder (): IAbstractFolder","title":"getResFolder"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-resource-folder/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / getResourceFolder getResourceFolder \u00b6 [jvm]\\ @Nullable open fun getResourceFolder (@NonNullfolder: IAbstractFolder ): ResourceFolder Returns the ResourceFolder associated with a IAbstractFolder . Return \u00b6 the ResourceFolder or null if it was not found. Parameters \u00b6 jvm folder The IAbstractFolder object.","title":"getResourceFolder - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-resource-folder/#getresourcefolder","text":"[jvm]\\ @Nullable open fun getResourceFolder (@NonNullfolder: IAbstractFolder ): ResourceFolder Returns the ResourceFolder associated with a IAbstractFolder .","title":"getResourceFolder"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-resource-folder/#return","text":"the ResourceFolder or null if it was not found.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-resource-folder/#parameters","text":"jvm folder The IAbstractFolder object.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-resource-item/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / getResourceItem getResourceItem \u00b6 [jvm]\\ @NonNull open fun getResourceItem (@NonNulltype: ResourceType, @NonNullname: String ): ResourceItem Returns a ResourceItem matching the given ResourceType and name. If none exist, it creates one. Return \u00b6 A resource item matching the type and name. Parameters \u00b6 jvm type the resource type name the name of the resource.","title":"getResourceItem - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-resource-item/#getresourceitem","text":"[jvm]\\ @NonNull open fun getResourceItem (@NonNulltype: ResourceType, @NonNullname: String ): ResourceItem Returns a ResourceItem matching the given ResourceType and name. If none exist, it creates one.","title":"getResourceItem"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-resource-item/#return","text":"A resource item matching the type and name.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-resource-item/#parameters","text":"jvm type the resource type name the name of the resource.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-resource-items-of-type/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / getResourceItemsOfType getResourceItemsOfType \u00b6 [jvm]\\ @NonNull open fun getResourceItemsOfType (@NonNulltype: ResourceType): Collection < ResourceItem > Returns a list of ResourceItem matching a given ResourceType. Return \u00b6 a non null collection of resource items Parameters \u00b6 jvm type the type of the resource items to return","title":"getResourceItemsOfType - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-resource-items-of-type/#getresourceitemsoftype","text":"[jvm]\\ @NonNull open fun getResourceItemsOfType (@NonNulltype: ResourceType): Collection < ResourceItem > Returns a list of ResourceItem matching a given ResourceType.","title":"getResourceItemsOfType"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-resource-items-of-type/#return","text":"a non null collection of resource items","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-resource-items-of-type/#parameters","text":"jvm type the type of the resource items to return","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-source-files/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / getSourceFiles getSourceFiles \u00b6 [jvm]\\ @Nullable open fun getSourceFiles (@NonNulltype: ResourceType, @NonNullname: String , @NullablereferenceConfig: FolderConfiguration): List < ResourceFile > Returns the list of source files for a given resource. Optionally, if a FolderConfiguration is given, then only the best match for this config is returned. Return \u00b6 a list of files generating this resource or null if it was not found. Parameters \u00b6 jvm type the type of the resource. name the name of the resource. referenceConfig an optional config for which only the best match will be returned.","title":"getSourceFiles - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-source-files/#getsourcefiles","text":"[jvm]\\ @Nullable open fun getSourceFiles (@NonNulltype: ResourceType, @NonNullname: String , @NullablereferenceConfig: FolderConfiguration): List < ResourceFile > Returns the list of source files for a given resource. Optionally, if a FolderConfiguration is given, then only the best match for this config is returned.","title":"getSourceFiles"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-source-files/#return","text":"a list of files generating this resource or null if it was not found.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/get-source-files/#parameters","text":"jvm type the type of the resource. name the name of the resource. referenceConfig an optional config for which only the best match will be returned.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/has-resource-item/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / hasResourceItem hasResourceItem \u00b6 [jvm]\\ open fun hasResourceItem (@NonNullurl: String ): Boolean Returns true if this resource repository contains a resource of the given name. Return \u00b6 true if the resource is known Parameters \u00b6 jvm url the resource URL [jvm]\\ open fun hasResourceItem (@NonNulltype: ResourceType, @NonNullname: String ): Boolean Returns true if this resource repository contains a resource of the given name. Return \u00b6 true if the resource is known Parameters \u00b6 jvm type the type of resource to look up name the name of the resource","title":"hasResourceItem - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/has-resource-item/#hasresourceitem","text":"[jvm]\\ open fun hasResourceItem (@NonNullurl: String ): Boolean Returns true if this resource repository contains a resource of the given name.","title":"hasResourceItem"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/has-resource-item/#return","text":"true if the resource is known","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/has-resource-item/#parameters","text":"jvm url the resource URL [jvm]\\ open fun hasResourceItem (@NonNulltype: ResourceType, @NonNullname: String ): Boolean Returns true if this resource repository contains a resource of the given name.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/has-resource-item/#return_1","text":"true if the resource is known","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/has-resource-item/#parameters_1","text":"jvm type the type of resource to look up name the name of the resource","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/has-resources-of-type/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / hasResourcesOfType hasResourcesOfType \u00b6 [jvm]\\ open fun hasResourcesOfType (@NonNulltype: ResourceType): Boolean Returns whether the repository has resources of a given ResourceType. Return \u00b6 true if the repository contains resources of the given type, false otherwise. Parameters \u00b6 jvm type the type of resource to check.","title":"hasResourcesOfType - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/has-resources-of-type/#hasresourcesoftype","text":"[jvm]\\ open fun hasResourcesOfType (@NonNulltype: ResourceType): Boolean Returns whether the repository has resources of a given ResourceType.","title":"hasResourcesOfType"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/has-resources-of-type/#return","text":"true if the repository contains resources of the given type, false otherwise.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/has-resources-of-type/#parameters","text":"jvm type the type of resource to check.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/is-framework-repository/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / isFrameworkRepository isFrameworkRepository \u00b6 [jvm]\\ open fun isFrameworkRepository (): Boolean","title":"isFrameworkRepository - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/is-framework-repository/#isframeworkrepository","text":"[jvm]\\ open fun isFrameworkRepository (): Boolean","title":"isFrameworkRepository"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/load-resources/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / loadResources loadResources \u00b6 [jvm]\\ open fun loadResources () Loads the resources.","title":"loadResources - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/load-resources/#loadresources","text":"[jvm]\\ open fun loadResources () Loads the resources.","title":"loadResources"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/post-update-clean-up/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / postUpdateCleanUp postUpdateCleanUp \u00b6 [jvm]\\ open fun postUpdateCleanUp () Cleans up the repository of resource items that have no source file anymore.","title":"postUpdateCleanUp - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/post-update-clean-up/#postupdatecleanup","text":"[jvm]\\ open fun postUpdateCleanUp () Cleans up the repository of resource items that have no source file anymore.","title":"postUpdateCleanUp"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/process-folder/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / processFolder processFolder \u00b6 [jvm]\\ @Nullable open fun processFolder (@NonNullfolder: IAbstractFolder ): ResourceFolder Processes a folder and adds it to the list of existing folders. Return \u00b6 the ResourceFolder created from this folder, or null if the process failed. Parameters \u00b6 jvm folder the folder to process","title":"processFolder - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/process-folder/#processfolder","text":"[jvm]\\ @Nullable open fun processFolder (@NonNullfolder: IAbstractFolder ): ResourceFolder Processes a folder and adds it to the list of existing folders.","title":"processFolder"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/process-folder/#return","text":"the ResourceFolder created from this folder, or null if the process failed.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/process-folder/#parameters","text":"jvm folder the folder to process","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/remove-folder/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ResourceRepository / removeFolder removeFolder \u00b6 [jvm]\\ @Nullable open fun removeFolder (@NonNulltype: ResourceFolderType, @NonNullremovedFolder: IAbstractFolder , @Nullablecontext: ScanningContext ): ResourceFolder Removes a ResourceFolder associated with the specified IAbstractFolder . Return \u00b6 the ResourceFolder that was removed, or null if no matches were found. Parameters \u00b6 jvm type The type of the folder removedFolder the IAbstractFolder object. context the scanning context","title":"removeFolder - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/remove-folder/#removefolder","text":"[jvm]\\ @Nullable open fun removeFolder (@NonNulltype: ResourceFolderType, @NonNullremovedFolder: IAbstractFolder , @Nullablecontext: ScanningContext ): ResourceFolder Removes a ResourceFolder associated with the specified IAbstractFolder .","title":"removeFolder"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/remove-folder/#return","text":"the ResourceFolder that was removed, or null if no matches were found.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-resource-repository/remove-folder/#parameters","text":"jvm type The type of the folder removedFolder the IAbstractFolder object. context the scanning context","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ScanningContext ScanningContext \u00b6 [jvm]\\ open class ~~ScanningContext~~ \u2014 Deprecated \u00b6 Deprecated \u00b6 This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests. Constructors \u00b6 ScanningContext [jvm] open fun ScanningContext () Constructs a new ScanningContext Functions \u00b6 Name Summary addError [jvm] open fun addError (@NonNullerror: String ) Adds the given error to the scanning context. checkValue [jvm] open fun checkValue (@Nullableuri: String , @NonNullname: String , @NonNullvalue: String ): Boolean Asks the context to check whether the given attribute name and value is valid in this context. getErrors [jvm] @Nullable open fun getErrors (): List < String > Returns a list of errors encountered during scanning, or null if there were no errors. needsFullAapt [jvm] open fun needsFullAapt (): Boolean Returns whether this repository has been marked as \"dirty\"; if one or more of the constituent files have declared that the resource item names that they provide have changed.","title":"ScanningContext - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/#scanningcontext","text":"[jvm]\\ open class ~~ScanningContext~~ \u2014","title":"ScanningContext"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/#deprecated_1","text":"This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/#constructors","text":"ScanningContext [jvm] open fun ScanningContext () Constructs a new ScanningContext","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/#functions","text":"Name Summary addError [jvm] open fun addError (@NonNullerror: String ) Adds the given error to the scanning context. checkValue [jvm] open fun checkValue (@Nullableuri: String , @NonNullname: String , @NonNullvalue: String ): Boolean Asks the context to check whether the given attribute name and value is valid in this context. getErrors [jvm] @Nullable open fun getErrors (): List < String > Returns a list of errors encountered during scanning, or null if there were no errors. needsFullAapt [jvm] open fun needsFullAapt (): Boolean Returns whether this repository has been marked as \"dirty\"; if one or more of the constituent files have declared that the resource item names that they provide have changed.","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/-scanning-context/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ScanningContext / ScanningContext ScanningContext \u00b6 [jvm]\\ open fun ScanningContext () Constructs a new ScanningContext","title":"ScanningContext - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/-scanning-context/#scanningcontext","text":"[jvm]\\ open fun ScanningContext () Constructs a new ScanningContext","title":"ScanningContext"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/add-error/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ScanningContext / addError addError \u00b6 [jvm]\\ open fun addError (@NonNullerror: String ) Adds the given error to the scanning context. The error should use the same syntax as real aapt error messages such that the aapt parser can properly detect the filename, line number, etc. Parameters \u00b6 jvm error the error message, including file name and line number at the beginning","title":"addError - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/add-error/#adderror","text":"[jvm]\\ open fun addError (@NonNullerror: String ) Adds the given error to the scanning context. The error should use the same syntax as real aapt error messages such that the aapt parser can properly detect the filename, line number, etc.","title":"addError"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/add-error/#parameters","text":"jvm error the error message, including file name and line number at the beginning","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/check-value/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ScanningContext / checkValue checkValue \u00b6 [jvm]\\ open fun checkValue (@Nullableuri: String , @NonNullname: String , @NonNullvalue: String ): Boolean Asks the context to check whether the given attribute name and value is valid in this context. Return \u00b6 true if the attribute is valid Parameters \u00b6 jvm uri the XML namespace URI name the attribute local name value the attribute value","title":"checkValue - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/check-value/#checkvalue","text":"[jvm]\\ open fun checkValue (@Nullableuri: String , @NonNullname: String , @NonNullvalue: String ): Boolean Asks the context to check whether the given attribute name and value is valid in this context.","title":"checkValue"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/check-value/#return","text":"true if the attribute is valid","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/check-value/#parameters","text":"jvm uri the XML namespace URI name the attribute local name value the attribute value","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/get-errors/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ScanningContext / getErrors getErrors \u00b6 [jvm]\\ @Nullable open fun getErrors (): List < String > Returns a list of errors encountered during scanning, or null if there were no errors.","title":"getErrors - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/get-errors/#geterrors","text":"[jvm]\\ @Nullable open fun getErrors (): List < String > Returns a list of errors encountered during scanning, or null if there were no errors.","title":"getErrors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/needs-full-aapt/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ScanningContext / needsFullAapt needsFullAapt \u00b6 [jvm]\\ open fun needsFullAapt (): Boolean Returns whether this repository has been marked as \"dirty\"; if one or more of the constituent files have declared that the resource item names that they provide have changed. Return \u00b6 true if a full aapt compilation is required","title":"needsFullAapt - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/needs-full-aapt/#needsfullaapt","text":"[jvm]\\ open fun needsFullAapt (): Boolean Returns whether this repository has been marked as \"dirty\"; if one or more of the constituent files have declared that the resource item names that they provide have changed.","title":"needsFullAapt"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-scanning-context/needs-full-aapt/#return","text":"true if a full aapt compilation is required","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / SingleResourceFile SingleResourceFile \u00b6 [jvm]\\ open class ~~SingleResourceFile~~ : ResourceFile \u2014 Deprecated \u00b6 Deprecated \u00b6 This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests. Constructors \u00b6 SingleResourceFile [jvm] open fun SingleResourceFile (file: IAbstractFile , folder: ResourceFolder ) Functions \u00b6 Name Summary getConfiguration [jvm] open fun getConfiguration (): FolderConfiguration abstract fun getConfiguration (): FolderConfiguration getFile [jvm] fun getFile (): IAbstractFile Returns the IFile associated with the ResourceFile. getFolder [jvm] fun getFolder (): ResourceFolder Returns the parent folder as a ResourceFolder . getRepository [jvm] fun getRepository (): ResourceRepository getResourceTypes [jvm] open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. getValue [jvm] open fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. hasResources [jvm] open fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type. isFramework [jvm] fun isFramework (): Boolean Returns whether the resource is a framework resource. toString [jvm] open fun toString (): String","title":"SingleResourceFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/#singleresourcefile","text":"[jvm]\\ open class ~~SingleResourceFile~~ : ResourceFile \u2014","title":"SingleResourceFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/#deprecated_1","text":"This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/#constructors","text":"SingleResourceFile [jvm] open fun SingleResourceFile (file: IAbstractFile , folder: ResourceFolder )","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/#functions","text":"Name Summary getConfiguration [jvm] open fun getConfiguration (): FolderConfiguration abstract fun getConfiguration (): FolderConfiguration getFile [jvm] fun getFile (): IAbstractFile Returns the IFile associated with the ResourceFile. getFolder [jvm] fun getFolder (): ResourceFolder Returns the parent folder as a ResourceFolder . getRepository [jvm] fun getRepository (): ResourceRepository getResourceTypes [jvm] open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. getValue [jvm] open fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. hasResources [jvm] open fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type. isFramework [jvm] fun isFramework (): Boolean Returns whether the resource is a framework resource. toString [jvm] open fun toString (): String","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/-single-resource-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / SingleResourceFile / SingleResourceFile SingleResourceFile \u00b6 [jvm]\\ open fun SingleResourceFile (file: IAbstractFile , folder: ResourceFolder )","title":"SingleResourceFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/-single-resource-file/#singleresourcefile","text":"[jvm]\\ open fun SingleResourceFile (file: IAbstractFile , folder: ResourceFolder )","title":"SingleResourceFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/get-resource-types/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / SingleResourceFile / getResourceTypes getResourceTypes \u00b6 [jvm]\\ open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. This is never null.","title":"getResourceTypes - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/get-resource-types/#getresourcetypes","text":"[jvm]\\ open fun getResourceTypes (): Collection <ResourceType> Returns the list of ResourceType generated by the file. This is never null.","title":"getResourceTypes"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/get-value/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / SingleResourceFile / getValue getValue \u00b6 [jvm]\\ open fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. If no resource match, null is returned. Parameters \u00b6 jvm type the type of the resource. name the name of the resource.","title":"getValue - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/get-value/#getvalue","text":"[jvm]\\ open fun getValue (type: ResourceType, name: String ): ResourceValue Returns the value of a resource generated by this file by ResourceType and name. If no resource match, null is returned.","title":"getValue"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/get-value/#parameters","text":"jvm type the type of the resource. name the name of the resource.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/has-resources/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / SingleResourceFile / hasResources hasResources \u00b6 [jvm]\\ open fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type. Parameters \u00b6 jvm type The ResourceType","title":"hasResources - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/has-resources/#hasresources","text":"[jvm]\\ open fun hasResources (type: ResourceType): Boolean Returns whether the file generated a resource of a specific type.","title":"hasResources"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-single-resource-file/has-resources/#parameters","text":"jvm type The ResourceType","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ValidatingResourceParser ValidatingResourceParser \u00b6 [jvm]\\ open class ~~ValidatingResourceParser~~ \u2014 Deprecated \u00b6 Deprecated \u00b6 This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests. Constructors \u00b6 ValidatingResourceParser [jvm] open fun ValidatingResourceParser (@NonNullcontext: ScanningContext , isFramework: Boolean ) Creates a new ValidatingResourceParser Functions \u00b6 Name Summary parse [jvm] open fun parse (path: String , input: InputStream ): Boolean Parse the given input and return false if it contains errors, or if the context is already tagged as needing a full aapt run.","title":"ValidatingResourceParser - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/#validatingresourceparser","text":"[jvm]\\ open class ~~ValidatingResourceParser~~ \u2014","title":"ValidatingResourceParser"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/#deprecated_1","text":"This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/#constructors","text":"ValidatingResourceParser [jvm] open fun ValidatingResourceParser (@NonNullcontext: ScanningContext , isFramework: Boolean ) Creates a new ValidatingResourceParser","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/#functions","text":"Name Summary parse [jvm] open fun parse (path: String , input: InputStream ): Boolean Parse the given input and return false if it contains errors, or if the context is already tagged as needing a full aapt run.","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/-validating-resource-parser/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ValidatingResourceParser / ValidatingResourceParser ValidatingResourceParser \u00b6 [jvm]\\ open fun ValidatingResourceParser (@NonNullcontext: ScanningContext , isFramework: Boolean ) Creates a new ValidatingResourceParser Parameters \u00b6 jvm context a context object with state for the current update, such as a place to stash errors encountered isFramework true if scanning a framework resource","title":"ValidatingResourceParser - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/-validating-resource-parser/#validatingresourceparser","text":"[jvm]\\ open fun ValidatingResourceParser (@NonNullcontext: ScanningContext , isFramework: Boolean ) Creates a new ValidatingResourceParser","title":"ValidatingResourceParser"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/-validating-resource-parser/#parameters","text":"jvm context a context object with state for the current update, such as a place to stash errors encountered isFramework true if scanning a framework resource","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/parse/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ValidatingResourceParser / parse parse \u00b6 [jvm]\\ open fun parse (path: String , input: InputStream ): Boolean Parse the given input and return false if it contains errors, or if the context is already tagged as needing a full aapt run. Return \u00b6 true if parsing succeeds and false if it fails Parameters \u00b6 jvm path the full OS path to the file being parsed input the input stream of the XML to be parsed (will be closed by this method) Throws \u00b6 IOException if reading the contents fails","title":"parse - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/parse/#parse","text":"[jvm]\\ open fun parse (path: String , input: InputStream ): Boolean Parse the given input and return false if it contains errors, or if the context is already tagged as needing a full aapt run.","title":"parse"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/parse/#return","text":"true if parsing succeeds and false if it fails","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/parse/#parameters","text":"jvm path the full OS path to the file being parsed input the input stream of the XML to be parsed (will be closed by this method)","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-validating-resource-parser/parse/#throws","text":"IOException if reading the contents fails","title":"Throws"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ValueResourceParser ValueResourceParser \u00b6 [jvm]\\ class ~~ValueResourceParser~~ : DefaultHandler \u2014 Deprecated \u00b6 Deprecated \u00b6 This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests. Constructors \u00b6 ValueResourceParser [jvm] open fun ValueResourceParser (repository: ValueResourceParser.IValueResourceRepository , isFramework: Boolean , libraryName: String ) Types \u00b6 Name Summary IValueResourceRepository [jvm] interface IValueResourceRepository Functions \u00b6 Name Summary characters [jvm] open fun characters (ch: Array < Char >, start: Int , length: Int ) endDocument [jvm] open fun endDocument () endElement [jvm] open fun endElement (uri: String , localName: String , qName: String ) endPrefixMapping [jvm] open fun endPrefixMapping (prefix: String ) error [jvm] open fun error (e: SAXParseException ) fatalError [jvm] open fun fatalError (e: SAXParseException ) ignorableWhitespace [jvm] open fun ignorableWhitespace (ch: Array < Char >, start: Int , length: Int ) notationDecl [jvm] open fun notationDecl (name: String , publicId: String , systemId: String ) processingInstruction [jvm] open fun processingInstruction (target: String , data: String ) resolveEntity [jvm] open fun resolveEntity (publicId: String , systemId: String ): InputSource setDocumentLocator [jvm] open fun setDocumentLocator (locator: Locator ) skippedEntity [jvm] open fun skippedEntity (name: String ) startDocument [jvm] open fun startDocument () startElement [jvm] open fun startElement (uri: String , localName: String , qName: String , attributes: Attributes ) startPrefixMapping [jvm] open fun startPrefixMapping (prefix: String , uri: String ) unparsedEntityDecl [jvm] open fun unparsedEntityDecl (name: String , publicId: String , systemId: String , notationName: String ) warning [jvm] open fun warning (e: SAXParseException )","title":"ValueResourceParser - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/#valueresourceparser","text":"[jvm]\\ class ~~ValueResourceParser~~ : DefaultHandler \u2014","title":"ValueResourceParser"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/#deprecated","text":"","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/#deprecated_1","text":"This class is part of an obsolete resource repository system that is no longer used in production code. The class is preserved temporarily for LayoutLib tests.","title":"Deprecated"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/#constructors","text":"ValueResourceParser [jvm] open fun ValueResourceParser (repository: ValueResourceParser.IValueResourceRepository , isFramework: Boolean , libraryName: String )","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/#types","text":"Name Summary IValueResourceRepository [jvm] interface IValueResourceRepository","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/#functions","text":"Name Summary characters [jvm] open fun characters (ch: Array < Char >, start: Int , length: Int ) endDocument [jvm] open fun endDocument () endElement [jvm] open fun endElement (uri: String , localName: String , qName: String ) endPrefixMapping [jvm] open fun endPrefixMapping (prefix: String ) error [jvm] open fun error (e: SAXParseException ) fatalError [jvm] open fun fatalError (e: SAXParseException ) ignorableWhitespace [jvm] open fun ignorableWhitespace (ch: Array < Char >, start: Int , length: Int ) notationDecl [jvm] open fun notationDecl (name: String , publicId: String , systemId: String ) processingInstruction [jvm] open fun processingInstruction (target: String , data: String ) resolveEntity [jvm] open fun resolveEntity (publicId: String , systemId: String ): InputSource setDocumentLocator [jvm] open fun setDocumentLocator (locator: Locator ) skippedEntity [jvm] open fun skippedEntity (name: String ) startDocument [jvm] open fun startDocument () startElement [jvm] open fun startElement (uri: String , localName: String , qName: String , attributes: Attributes ) startPrefixMapping [jvm] open fun startPrefixMapping (prefix: String , uri: String ) unparsedEntityDecl [jvm] open fun unparsedEntityDecl (name: String , publicId: String , systemId: String , notationName: String ) warning [jvm] open fun warning (e: SAXParseException )","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/-value-resource-parser/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ValueResourceParser / ValueResourceParser ValueResourceParser \u00b6 [jvm]\\ open fun ValueResourceParser (repository: ValueResourceParser.IValueResourceRepository , isFramework: Boolean , libraryName: String )","title":"ValueResourceParser - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/-value-resource-parser/#valueresourceparser","text":"[jvm]\\ open fun ValueResourceParser (repository: ValueResourceParser.IValueResourceRepository , isFramework: Boolean , libraryName: String )","title":"ValueResourceParser"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/characters/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ValueResourceParser / characters characters \u00b6 [jvm]\\ open fun characters (ch: Array < Char >, start: Int , length: Int )","title":"characters - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/characters/#characters","text":"[jvm]\\ open fun characters (ch: Array < Char >, start: Int , length: Int )","title":"characters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/end-element/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ValueResourceParser / endElement endElement \u00b6 [jvm]\\ open fun endElement (uri: String , localName: String , qName: String )","title":"endElement - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/end-element/#endelement","text":"[jvm]\\ open fun endElement (uri: String , localName: String , qName: String )","title":"endElement"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/start-element/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ValueResourceParser / startElement startElement \u00b6 [jvm]\\ open fun startElement (uri: String , localName: String , qName: String , attributes: Attributes )","title":"startElement - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/start-element/#startelement","text":"[jvm]\\ open fun startElement (uri: String , localName: String , qName: String , attributes: Attributes )","title":"startElement"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/-i-value-resource-repository/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ValueResourceParser / IValueResourceRepository IValueResourceRepository \u00b6 [jvm]\\ interface IValueResourceRepository Functions \u00b6 Name Summary addResourceValue [jvm] abstract fun addResourceValue (value: ResourceValue) Inheritors \u00b6 Name MultiResourceFile IdGeneratingResourceFile","title":"IValueResourceRepository - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/-i-value-resource-repository/#ivalueresourcerepository","text":"[jvm]\\ interface IValueResourceRepository","title":"IValueResourceRepository"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/-i-value-resource-repository/#functions","text":"Name Summary addResourceValue [jvm] abstract fun addResourceValue (value: ResourceValue)","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/-i-value-resource-repository/#inheritors","text":"Name MultiResourceFile IdGeneratingResourceFile","title":"Inheritors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/-i-value-resource-repository/add-resource-value/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated / ValueResourceParser / IValueResourceRepository / addResourceValue addResourceValue \u00b6 [jvm]\\ abstract fun addResourceValue (value: ResourceValue)","title":"addResourceValue - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.ide.common.resources.deprecated/-value-resource-parser/-i-value-resource-repository/add-resource-value/#addresourcevalue","text":"[jvm]\\ abstract fun addResourceValue (value: ResourceValue)","title":"addResourceValue"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io Package-level declarations \u00b6 Types \u00b6 Name Summary FileWrapper [jvm] open class FileWrapper : File , IAbstractFile An implementation of IAbstractFile extending File . FolderWrapper [jvm] open class FolderWrapper : File , IAbstractFolder An implementation of IAbstractFolder extending File . IAbstractFile [jvm] interface IAbstractFile : IAbstractResource A file. IAbstractFolder [jvm] interface IAbstractFolder : IAbstractResource A folder. IAbstractResource [jvm] interface IAbstractResource Base representation of a file system resource. StreamException [jvm] open class StreamException : Exception Exception thrown when getContents fails.","title":"Package-level declarations - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/#types","text":"Name Summary FileWrapper [jvm] open class FileWrapper : File , IAbstractFile An implementation of IAbstractFile extending File . FolderWrapper [jvm] open class FolderWrapper : File , IAbstractFolder An implementation of IAbstractFolder extending File . IAbstractFile [jvm] interface IAbstractFile : IAbstractResource A file. IAbstractFolder [jvm] interface IAbstractFolder : IAbstractResource A folder. IAbstractResource [jvm] interface IAbstractResource Base representation of a file system resource. StreamException [jvm] open class StreamException : Exception Exception thrown when getContents fails.","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FileWrapper FileWrapper \u00b6 [jvm]\\ open class FileWrapper : File , IAbstractFile An implementation of IAbstractFile extending File . Constructors \u00b6 FileWrapper [jvm] open fun FileWrapper (file: File ) Creates a new File instance matching a given File object. FileWrapper [jvm] open fun FileWrapper (parent: File , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string. FileWrapper [jvm] open fun FileWrapper (osPathname: String ) Creates a new File instance by converting the given pathname string into an abstract pathname. FileWrapper [jvm] open fun FileWrapper (parent: String , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string. FileWrapper [jvm] open fun FileWrapper (uri: URI ) Creates a new File instance by converting the given file: URI into an abstract pathname. Functions \u00b6 Name Summary canExecute [jvm] open fun canExecute (): Boolean canRead [jvm] open fun canRead (): Boolean canWrite [jvm] open fun canWrite (): Boolean compareTo [jvm] open fun compareTo (pathname: File ): Int createNewFile [jvm] open fun createNewFile (): Boolean createTempFile [jvm] open fun createTempFile (prefix: String , suffix: String , directory: File ): File delete [jvm] abstract fun delete (): Boolean Deletes the resource. [jvm] open fun delete (): Boolean deleteOnExit [jvm] open fun deleteOnExit () equals [jvm] open fun equals (obj: Any ): Boolean exists [jvm] open fun exists (): Boolean getAbsoluteFile [jvm] open fun getAbsoluteFile (): File getAbsolutePath [jvm] open fun getAbsolutePath (): String getCanonicalFile [jvm] open fun getCanonicalFile (): File getCanonicalPath [jvm] open fun getCanonicalPath (): String getContents [jvm] open fun getContents (): InputStream Returns an InputStream object on the file content. getFreeSpace [jvm] open fun getFreeSpace (): Long getModificationStamp [jvm] open fun getModificationStamp (): Long Returns the last modification timestamp getName [jvm] abstract fun getName (): String Returns the name of the resource. [jvm] open fun getName (): String getOsLocation [jvm] open fun getOsLocation (): String Returns the OS path of the folder location (may be absolute). getOutputStream [jvm] open fun getOutputStream (): OutputStream Returns an OutputStream to write into the file. getParent [jvm] open fun getParent (): String getParentFile [jvm] open fun getParentFile (): File getParentFolder [jvm] open fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent. getPreferredWriteMode [jvm] open fun getPreferredWriteMode (): IAbstractFile.PreferredWriteMode Returns the preferred mode to write into the file. getTotalSpace [jvm] open fun getTotalSpace (): Long getUsableSpace [jvm] open fun getUsableSpace (): Long hashCode [jvm] open fun hashCode (): Int isAbsolute [jvm] open fun isAbsolute (): Boolean isDirectory [jvm] open fun isDirectory (): Boolean isFile [jvm] open fun isFile (): Boolean isHidden [jvm] open fun isHidden (): Boolean lastModified [jvm] open fun lastModified (): Long length [jvm] open fun length (): Long list [jvm] open fun list (): Array < String > listFiles [jvm] open fun listFiles (): Array < File > listRoots [jvm] open fun listRoots (): Array < File > mkdir [jvm] open fun mkdir (): Boolean mkdirs [jvm] open fun mkdirs (): Boolean renameTo [jvm] open fun renameTo (dest: File ): Boolean setContents [jvm] open fun setContents (source: InputStream ) Sets the content of the file. setExecutable [jvm] open fun setExecutable (executable: Boolean , ownerOnly: Boolean ): Boolean setLastModified [jvm] open fun setLastModified (time: Long ): Boolean setReadable [jvm] open fun setReadable (readable: Boolean , ownerOnly: Boolean ): Boolean setReadOnly [jvm] open fun setReadOnly (): Boolean setWritable [jvm] open fun setWritable (writable: Boolean , ownerOnly: Boolean ): Boolean toPath [jvm] open fun toPath (): Path toString [jvm] open fun toString (): String toURI [jvm] open fun toURI (): URI toURL [jvm] open fun toURL (): URL Properties \u00b6 Name Summary path [jvm] val path : String pathSeparator [jvm] val pathSeparator : String pathSeparatorChar [jvm] val pathSeparatorChar : Char separator [jvm] val separator : String separatorChar [jvm] val separatorChar : Char","title":"FileWrapper - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/#filewrapper","text":"[jvm]\\ open class FileWrapper : File , IAbstractFile An implementation of IAbstractFile extending File .","title":"FileWrapper"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/#constructors","text":"FileWrapper [jvm] open fun FileWrapper (file: File ) Creates a new File instance matching a given File object. FileWrapper [jvm] open fun FileWrapper (parent: File , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string. FileWrapper [jvm] open fun FileWrapper (osPathname: String ) Creates a new File instance by converting the given pathname string into an abstract pathname. FileWrapper [jvm] open fun FileWrapper (parent: String , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string. FileWrapper [jvm] open fun FileWrapper (uri: URI ) Creates a new File instance by converting the given file: URI into an abstract pathname.","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/#functions","text":"Name Summary canExecute [jvm] open fun canExecute (): Boolean canRead [jvm] open fun canRead (): Boolean canWrite [jvm] open fun canWrite (): Boolean compareTo [jvm] open fun compareTo (pathname: File ): Int createNewFile [jvm] open fun createNewFile (): Boolean createTempFile [jvm] open fun createTempFile (prefix: String , suffix: String , directory: File ): File delete [jvm] abstract fun delete (): Boolean Deletes the resource. [jvm] open fun delete (): Boolean deleteOnExit [jvm] open fun deleteOnExit () equals [jvm] open fun equals (obj: Any ): Boolean exists [jvm] open fun exists (): Boolean getAbsoluteFile [jvm] open fun getAbsoluteFile (): File getAbsolutePath [jvm] open fun getAbsolutePath (): String getCanonicalFile [jvm] open fun getCanonicalFile (): File getCanonicalPath [jvm] open fun getCanonicalPath (): String getContents [jvm] open fun getContents (): InputStream Returns an InputStream object on the file content. getFreeSpace [jvm] open fun getFreeSpace (): Long getModificationStamp [jvm] open fun getModificationStamp (): Long Returns the last modification timestamp getName [jvm] abstract fun getName (): String Returns the name of the resource. [jvm] open fun getName (): String getOsLocation [jvm] open fun getOsLocation (): String Returns the OS path of the folder location (may be absolute). getOutputStream [jvm] open fun getOutputStream (): OutputStream Returns an OutputStream to write into the file. getParent [jvm] open fun getParent (): String getParentFile [jvm] open fun getParentFile (): File getParentFolder [jvm] open fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent. getPreferredWriteMode [jvm] open fun getPreferredWriteMode (): IAbstractFile.PreferredWriteMode Returns the preferred mode to write into the file. getTotalSpace [jvm] open fun getTotalSpace (): Long getUsableSpace [jvm] open fun getUsableSpace (): Long hashCode [jvm] open fun hashCode (): Int isAbsolute [jvm] open fun isAbsolute (): Boolean isDirectory [jvm] open fun isDirectory (): Boolean isFile [jvm] open fun isFile (): Boolean isHidden [jvm] open fun isHidden (): Boolean lastModified [jvm] open fun lastModified (): Long length [jvm] open fun length (): Long list [jvm] open fun list (): Array < String > listFiles [jvm] open fun listFiles (): Array < File > listRoots [jvm] open fun listRoots (): Array < File > mkdir [jvm] open fun mkdir (): Boolean mkdirs [jvm] open fun mkdirs (): Boolean renameTo [jvm] open fun renameTo (dest: File ): Boolean setContents [jvm] open fun setContents (source: InputStream ) Sets the content of the file. setExecutable [jvm] open fun setExecutable (executable: Boolean , ownerOnly: Boolean ): Boolean setLastModified [jvm] open fun setLastModified (time: Long ): Boolean setReadable [jvm] open fun setReadable (readable: Boolean , ownerOnly: Boolean ): Boolean setReadOnly [jvm] open fun setReadOnly (): Boolean setWritable [jvm] open fun setWritable (writable: Boolean , ownerOnly: Boolean ): Boolean toPath [jvm] open fun toPath (): Path toString [jvm] open fun toString (): String toURI [jvm] open fun toURI (): URI toURL [jvm] open fun toURL (): URL","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/#properties","text":"Name Summary path [jvm] val path : String pathSeparator [jvm] val pathSeparator : String pathSeparatorChar [jvm] val pathSeparatorChar : Char separator [jvm] val separator : String separatorChar [jvm] val separatorChar : Char","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/-file-wrapper/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FileWrapper / FileWrapper FileWrapper \u00b6 [jvm]\\ open fun FileWrapper (file: File ) Creates a new File instance matching a given File object. Parameters \u00b6 jvm file the file to match [jvm]\\ open fun FileWrapper (parent: File , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string. See also \u00b6 jvm File Parameters \u00b6 jvm parent the parent pathname child the child name [jvm]\\ open fun FileWrapper (osPathname: String ) Creates a new File instance by converting the given pathname string into an abstract pathname. See also \u00b6 jvm File Parameters \u00b6 jvm osPathname the OS pathname [jvm]\\ open fun FileWrapper (parent: String , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string. See also \u00b6 jvm File Parameters \u00b6 jvm parent the parent pathname child the child name [jvm]\\ open fun FileWrapper (uri: URI ) Creates a new File instance by converting the given file: URI into an abstract pathname. See also \u00b6 jvm File Parameters \u00b6 jvm uri An absolute, hierarchical URI with a scheme equal to \"file\", a non-empty path component, and undefined authority, query, and fragment components","title":"FileWrapper - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/-file-wrapper/#filewrapper","text":"[jvm]\\ open fun FileWrapper (file: File ) Creates a new File instance matching a given File object.","title":"FileWrapper"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/-file-wrapper/#parameters","text":"jvm file the file to match [jvm]\\ open fun FileWrapper (parent: File , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/-file-wrapper/#see-also","text":"jvm File","title":"See also"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/-file-wrapper/#parameters_1","text":"jvm parent the parent pathname child the child name [jvm]\\ open fun FileWrapper (osPathname: String ) Creates a new File instance by converting the given pathname string into an abstract pathname.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/-file-wrapper/#see-also_1","text":"jvm File","title":"See also"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/-file-wrapper/#parameters_2","text":"jvm osPathname the OS pathname [jvm]\\ open fun FileWrapper (parent: String , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/-file-wrapper/#see-also_2","text":"jvm File","title":"See also"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/-file-wrapper/#parameters_3","text":"jvm parent the parent pathname child the child name [jvm]\\ open fun FileWrapper (uri: URI ) Creates a new File instance by converting the given file: URI into an abstract pathname.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/-file-wrapper/#see-also_3","text":"jvm File","title":"See also"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/-file-wrapper/#parameters_4","text":"jvm uri An absolute, hierarchical URI with a scheme equal to \"file\", a non-empty path component, and undefined authority, query, and fragment components","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/exists/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FileWrapper / exists exists \u00b6 [jvm]\\ open fun exists (): Boolean","title":"exists - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/exists/#exists","text":"[jvm]\\ open fun exists (): Boolean","title":"exists"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-contents/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FileWrapper / getContents getContents \u00b6 [jvm]\\ open fun getContents (): InputStream Returns an InputStream object on the file content. The stream must be closed by the caller. Throws \u00b6 StreamException","title":"getContents - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-contents/#getcontents","text":"[jvm]\\ open fun getContents (): InputStream Returns an InputStream object on the file content. The stream must be closed by the caller.","title":"getContents"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-contents/#throws","text":"StreamException","title":"Throws"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-modification-stamp/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FileWrapper / getModificationStamp getModificationStamp \u00b6 [jvm]\\ open fun getModificationStamp (): Long Returns the last modification timestamp","title":"getModificationStamp - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-modification-stamp/#getmodificationstamp","text":"[jvm]\\ open fun getModificationStamp (): Long Returns the last modification timestamp","title":"getModificationStamp"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-os-location/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FileWrapper / getOsLocation getOsLocation \u00b6 [jvm]\\ open fun getOsLocation (): String Returns the OS path of the folder location (may be absolute).","title":"getOsLocation - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-os-location/#getoslocation","text":"[jvm]\\ open fun getOsLocation (): String Returns the OS path of the folder location (may be absolute).","title":"getOsLocation"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-output-stream/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FileWrapper / getOutputStream getOutputStream \u00b6 [jvm]\\ open fun getOutputStream (): OutputStream Returns an OutputStream to write into the file. Throws \u00b6 StreamException","title":"getOutputStream - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-output-stream/#getoutputstream","text":"[jvm]\\ open fun getOutputStream (): OutputStream Returns an OutputStream to write into the file.","title":"getOutputStream"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-output-stream/#throws","text":"StreamException","title":"Throws"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-parent-folder/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FileWrapper / getParentFolder getParentFolder \u00b6 [jvm]\\ open fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent.","title":"getParentFolder - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-parent-folder/#getparentfolder","text":"[jvm]\\ open fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent.","title":"getParentFolder"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-preferred-write-mode/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FileWrapper / getPreferredWriteMode getPreferredWriteMode \u00b6 [jvm]\\ open fun getPreferredWriteMode (): IAbstractFile.PreferredWriteMode Returns the preferred mode to write into the file.","title":"getPreferredWriteMode - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/get-preferred-write-mode/#getpreferredwritemode","text":"[jvm]\\ open fun getPreferredWriteMode (): IAbstractFile.PreferredWriteMode Returns the preferred mode to write into the file.","title":"getPreferredWriteMode"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/set-contents/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FileWrapper / setContents setContents \u00b6 [jvm]\\ open fun setContents (source: InputStream ) Sets the content of the file. Parameters \u00b6 jvm source the content Throws \u00b6 StreamException","title":"setContents - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/set-contents/#setcontents","text":"[jvm]\\ open fun setContents (source: InputStream ) Sets the content of the file.","title":"setContents"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/set-contents/#parameters","text":"jvm source the content","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-file-wrapper/set-contents/#throws","text":"StreamException","title":"Throws"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FolderWrapper FolderWrapper \u00b6 [jvm]\\ open class FolderWrapper : File , IAbstractFolder An implementation of IAbstractFolder extending File . Constructors \u00b6 FolderWrapper [jvm] open fun FolderWrapper (parent: File , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string. FolderWrapper [jvm] open fun FolderWrapper (pathname: String ) Creates a new File instance by converting the given pathname string into an abstract pathname. FolderWrapper [jvm] open fun FolderWrapper (parent: String , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string. FolderWrapper [jvm] open fun FolderWrapper (uri: URI ) Creates a new File instance by converting the given file: URI into an abstract pathname. FolderWrapper [jvm] open fun FolderWrapper (file: File ) Creates a new File instance matching a give File object. Functions \u00b6 Name Summary canExecute [jvm] open fun canExecute (): Boolean canRead [jvm] open fun canRead (): Boolean canWrite [jvm] open fun canWrite (): Boolean compareTo [jvm] open fun compareTo (pathname: File ): Int createNewFile [jvm] open fun createNewFile (): Boolean createTempFile [jvm] open fun createTempFile (prefix: String , suffix: String , directory: File ): File delete [jvm] abstract fun delete (): Boolean Deletes the resource. [jvm] open fun delete (): Boolean deleteOnExit [jvm] open fun deleteOnExit () equals [jvm] open fun equals (obj: Any ): Boolean exists [jvm] open fun exists (): Boolean getAbsoluteFile [jvm] open fun getAbsoluteFile (): File getAbsolutePath [jvm] open fun getAbsolutePath (): String getCanonicalFile [jvm] open fun getCanonicalFile (): File getCanonicalPath [jvm] open fun getCanonicalPath (): String getFile [jvm] open fun getFile (name: String ): IAbstractFile Returns an IAbstractFile representing a child of the current folder with the given name. getFolder [jvm] open fun getFolder (name: String ): IAbstractFolder Returns an IAbstractFolder representing a child of the current folder with the given name. getFreeSpace [jvm] open fun getFreeSpace (): Long getName [jvm] abstract fun getName (): String Returns the name of the resource. [jvm] open fun getName (): String getOsLocation [jvm] open fun getOsLocation (): String Returns the OS path of the folder location (may be absolute). getParent [jvm] open fun getParent (): String getParentFile [jvm] open fun getParentFile (): File getParentFolder [jvm] open fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent. getTotalSpace [jvm] open fun getTotalSpace (): Long getUsableSpace [jvm] open fun getUsableSpace (): Long hasFile [jvm] open fun hasFile (name: String ): Boolean Returns true if the receiver contains a file with a given name hashCode [jvm] open fun hashCode (): Int isAbsolute [jvm] open fun isAbsolute (): Boolean isDirectory [jvm] open fun isDirectory (): Boolean isFile [jvm] open fun isFile (): Boolean isHidden [jvm] open fun isHidden (): Boolean lastModified [jvm] open fun lastModified (): Long length [jvm] open fun length (): Long list [jvm] open fun list (): Array < String > [jvm] open fun list (filter: IAbstractFolder.FilenameFilter ): Array < String > Returns a list of all existing file and directory members in this folder that satisfy the specified filter. listFiles [jvm] open fun listFiles (): Array < File > listMembers [jvm] open fun listMembers (): Array < IAbstractResource > Returns a list of all existing file and directory members in this folder. listRoots [jvm] open fun listRoots (): Array < File > mkdir [jvm] open fun mkdir (): Boolean mkdirs [jvm] open fun mkdirs (): Boolean renameTo [jvm] open fun renameTo (dest: File ): Boolean setExecutable [jvm] open fun setExecutable (executable: Boolean , ownerOnly: Boolean ): Boolean setLastModified [jvm] open fun setLastModified (time: Long ): Boolean setReadable [jvm] open fun setReadable (readable: Boolean , ownerOnly: Boolean ): Boolean setReadOnly [jvm] open fun setReadOnly (): Boolean setWritable [jvm] open fun setWritable (writable: Boolean , ownerOnly: Boolean ): Boolean toPath [jvm] open fun toPath (): Path toString [jvm] open fun toString (): String toURI [jvm] open fun toURI (): URI toURL [jvm] open fun toURL (): URL Properties \u00b6 Name Summary path [jvm] val path : String pathSeparator [jvm] val pathSeparator : String pathSeparatorChar [jvm] val pathSeparatorChar : Char separator [jvm] val separator : String separatorChar [jvm] val separatorChar : Char","title":"FolderWrapper - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/#folderwrapper","text":"[jvm]\\ open class FolderWrapper : File , IAbstractFolder An implementation of IAbstractFolder extending File .","title":"FolderWrapper"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/#constructors","text":"FolderWrapper [jvm] open fun FolderWrapper (parent: File , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string. FolderWrapper [jvm] open fun FolderWrapper (pathname: String ) Creates a new File instance by converting the given pathname string into an abstract pathname. FolderWrapper [jvm] open fun FolderWrapper (parent: String , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string. FolderWrapper [jvm] open fun FolderWrapper (uri: URI ) Creates a new File instance by converting the given file: URI into an abstract pathname. FolderWrapper [jvm] open fun FolderWrapper (file: File ) Creates a new File instance matching a give File object.","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/#functions","text":"Name Summary canExecute [jvm] open fun canExecute (): Boolean canRead [jvm] open fun canRead (): Boolean canWrite [jvm] open fun canWrite (): Boolean compareTo [jvm] open fun compareTo (pathname: File ): Int createNewFile [jvm] open fun createNewFile (): Boolean createTempFile [jvm] open fun createTempFile (prefix: String , suffix: String , directory: File ): File delete [jvm] abstract fun delete (): Boolean Deletes the resource. [jvm] open fun delete (): Boolean deleteOnExit [jvm] open fun deleteOnExit () equals [jvm] open fun equals (obj: Any ): Boolean exists [jvm] open fun exists (): Boolean getAbsoluteFile [jvm] open fun getAbsoluteFile (): File getAbsolutePath [jvm] open fun getAbsolutePath (): String getCanonicalFile [jvm] open fun getCanonicalFile (): File getCanonicalPath [jvm] open fun getCanonicalPath (): String getFile [jvm] open fun getFile (name: String ): IAbstractFile Returns an IAbstractFile representing a child of the current folder with the given name. getFolder [jvm] open fun getFolder (name: String ): IAbstractFolder Returns an IAbstractFolder representing a child of the current folder with the given name. getFreeSpace [jvm] open fun getFreeSpace (): Long getName [jvm] abstract fun getName (): String Returns the name of the resource. [jvm] open fun getName (): String getOsLocation [jvm] open fun getOsLocation (): String Returns the OS path of the folder location (may be absolute). getParent [jvm] open fun getParent (): String getParentFile [jvm] open fun getParentFile (): File getParentFolder [jvm] open fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent. getTotalSpace [jvm] open fun getTotalSpace (): Long getUsableSpace [jvm] open fun getUsableSpace (): Long hasFile [jvm] open fun hasFile (name: String ): Boolean Returns true if the receiver contains a file with a given name hashCode [jvm] open fun hashCode (): Int isAbsolute [jvm] open fun isAbsolute (): Boolean isDirectory [jvm] open fun isDirectory (): Boolean isFile [jvm] open fun isFile (): Boolean isHidden [jvm] open fun isHidden (): Boolean lastModified [jvm] open fun lastModified (): Long length [jvm] open fun length (): Long list [jvm] open fun list (): Array < String > [jvm] open fun list (filter: IAbstractFolder.FilenameFilter ): Array < String > Returns a list of all existing file and directory members in this folder that satisfy the specified filter. listFiles [jvm] open fun listFiles (): Array < File > listMembers [jvm] open fun listMembers (): Array < IAbstractResource > Returns a list of all existing file and directory members in this folder. listRoots [jvm] open fun listRoots (): Array < File > mkdir [jvm] open fun mkdir (): Boolean mkdirs [jvm] open fun mkdirs (): Boolean renameTo [jvm] open fun renameTo (dest: File ): Boolean setExecutable [jvm] open fun setExecutable (executable: Boolean , ownerOnly: Boolean ): Boolean setLastModified [jvm] open fun setLastModified (time: Long ): Boolean setReadable [jvm] open fun setReadable (readable: Boolean , ownerOnly: Boolean ): Boolean setReadOnly [jvm] open fun setReadOnly (): Boolean setWritable [jvm] open fun setWritable (writable: Boolean , ownerOnly: Boolean ): Boolean toPath [jvm] open fun toPath (): Path toString [jvm] open fun toString (): String toURI [jvm] open fun toURI (): URI toURL [jvm] open fun toURL (): URL","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/#properties","text":"Name Summary path [jvm] val path : String pathSeparator [jvm] val pathSeparator : String pathSeparatorChar [jvm] val pathSeparatorChar : Char separator [jvm] val separator : String separatorChar [jvm] val separatorChar : Char","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/-folder-wrapper/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FolderWrapper / FolderWrapper FolderWrapper \u00b6 [jvm]\\ open fun FolderWrapper (parent: File , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string. See also \u00b6 jvm File Parameters \u00b6 jvm parent the parent pathname child the child name [jvm]\\ open fun FolderWrapper (pathname: String ) Creates a new File instance by converting the given pathname string into an abstract pathname. See also \u00b6 jvm File Parameters \u00b6 jvm pathname the pathname [jvm]\\ open fun FolderWrapper (parent: String , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string. See also \u00b6 jvm File Parameters \u00b6 jvm parent the parent pathname child the child name [jvm]\\ open fun FolderWrapper (uri: URI ) Creates a new File instance by converting the given file: URI into an abstract pathname. See also \u00b6 jvm File Parameters \u00b6 jvm uri An absolute, hierarchical URI with a scheme equal to \"file\", a non-empty path component, and undefined authority, query, and fragment components [jvm]\\ open fun FolderWrapper (file: File ) Creates a new File instance matching a give File object. Parameters \u00b6 jvm file the file to match","title":"FolderWrapper - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/-folder-wrapper/#folderwrapper","text":"[jvm]\\ open fun FolderWrapper (parent: File , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string.","title":"FolderWrapper"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/-folder-wrapper/#see-also","text":"jvm File","title":"See also"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/-folder-wrapper/#parameters","text":"jvm parent the parent pathname child the child name [jvm]\\ open fun FolderWrapper (pathname: String ) Creates a new File instance by converting the given pathname string into an abstract pathname.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/-folder-wrapper/#see-also_1","text":"jvm File","title":"See also"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/-folder-wrapper/#parameters_1","text":"jvm pathname the pathname [jvm]\\ open fun FolderWrapper (parent: String , child: String ) Creates a new File instance from a parent abstract pathname and a child pathname string.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/-folder-wrapper/#see-also_2","text":"jvm File","title":"See also"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/-folder-wrapper/#parameters_2","text":"jvm parent the parent pathname child the child name [jvm]\\ open fun FolderWrapper (uri: URI ) Creates a new File instance by converting the given file: URI into an abstract pathname.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/-folder-wrapper/#see-also_3","text":"jvm File","title":"See also"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/-folder-wrapper/#parameters_3","text":"jvm uri An absolute, hierarchical URI with a scheme equal to \"file\", a non-empty path component, and undefined authority, query, and fragment components [jvm]\\ open fun FolderWrapper (file: File ) Creates a new File instance matching a give File object.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/-folder-wrapper/#parameters_4","text":"jvm file the file to match","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/exists/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FolderWrapper / exists exists \u00b6 [jvm]\\ open fun exists (): Boolean","title":"exists - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/exists/#exists","text":"[jvm]\\ open fun exists (): Boolean","title":"exists"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/get-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FolderWrapper / getFile getFile \u00b6 [jvm]\\ open fun getFile (name: String ): IAbstractFile Returns an IAbstractFile representing a child of the current folder with the given name. The file may not actually exist. Parameters \u00b6 jvm name the name of the file.","title":"getFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/get-file/#getfile","text":"[jvm]\\ open fun getFile (name: String ): IAbstractFile Returns an IAbstractFile representing a child of the current folder with the given name. The file may not actually exist.","title":"getFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/get-file/#parameters","text":"jvm name the name of the file.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/get-folder/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FolderWrapper / getFolder getFolder \u00b6 [jvm]\\ open fun getFolder (name: String ): IAbstractFolder Returns an IAbstractFolder representing a child of the current folder with the given name. The folder may not actually exist. Parameters \u00b6 jvm name the name of the folder.","title":"getFolder - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/get-folder/#getfolder","text":"[jvm]\\ open fun getFolder (name: String ): IAbstractFolder Returns an IAbstractFolder representing a child of the current folder with the given name. The folder may not actually exist.","title":"getFolder"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/get-folder/#parameters","text":"jvm name the name of the folder.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/get-os-location/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FolderWrapper / getOsLocation getOsLocation \u00b6 [jvm]\\ open fun getOsLocation (): String Returns the OS path of the folder location (may be absolute).","title":"getOsLocation - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/get-os-location/#getoslocation","text":"[jvm]\\ open fun getOsLocation (): String Returns the OS path of the folder location (may be absolute).","title":"getOsLocation"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/get-parent-folder/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FolderWrapper / getParentFolder getParentFolder \u00b6 [jvm]\\ open fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent.","title":"getParentFolder - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/get-parent-folder/#getparentfolder","text":"[jvm]\\ open fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent.","title":"getParentFolder"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/has-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FolderWrapper / hasFile hasFile \u00b6 [jvm]\\ open fun hasFile (name: String ): Boolean Returns true if the receiver contains a file with a given name Parameters \u00b6 jvm name the name of the file. This is the name without the path leading to the parent folder.","title":"hasFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/has-file/#hasfile","text":"[jvm]\\ open fun hasFile (name: String ): Boolean Returns true if the receiver contains a file with a given name","title":"hasFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/has-file/#parameters","text":"jvm name the name of the file. This is the name without the path leading to the parent folder.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/list-members/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FolderWrapper / listMembers listMembers \u00b6 [jvm]\\ open fun listMembers (): Array < IAbstractResource > Returns a list of all existing file and directory members in this folder. The returned array can be empty but is never null.","title":"listMembers - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/list-members/#listmembers","text":"[jvm]\\ open fun listMembers (): Array < IAbstractResource > Returns a list of all existing file and directory members in this folder. The returned array can be empty but is never null.","title":"listMembers"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/list/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / FolderWrapper / list list \u00b6 [jvm]\\ open fun list (filter: IAbstractFolder.FilenameFilter ): Array < String > Returns a list of all existing file and directory members in this folder that satisfy the specified filter. Return \u00b6 An array of file names (generated using getName ). The array can be empty but is never null. Parameters \u00b6 jvm filter A filename filter instance. Must not be null.","title":"list - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/list/#list","text":"[jvm]\\ open fun list (filter: IAbstractFolder.FilenameFilter ): Array < String > Returns a list of all existing file and directory members in this folder that satisfy the specified filter.","title":"list"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/list/#return","text":"An array of file names (generated using getName ). The array can be empty but is never null.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-folder-wrapper/list/#parameters","text":"jvm filter A filename filter instance. Must not be null.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFile IAbstractFile \u00b6 [jvm]\\ interface IAbstractFile : IAbstractResource A file. Types \u00b6 Name Summary PreferredWriteMode [jvm] enum PreferredWriteMode Functions \u00b6 Name Summary delete [jvm] abstract fun delete (): Boolean Deletes the resource. exists [jvm] abstract fun exists (): Boolean Returns whether the resource actually exists. getContents [jvm] abstract fun getContents (): InputStream Returns an InputStream object on the file content. getModificationStamp [jvm] abstract fun getModificationStamp (): Long Returns the last modification timestamp getName [jvm] abstract fun getName (): String Returns the name of the resource. getOsLocation [jvm] abstract fun getOsLocation (): String Returns the OS path of the folder location (may be absolute). getOutputStream [jvm] abstract fun getOutputStream (): OutputStream Returns an OutputStream to write into the file. getParentFolder [jvm] abstract fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent. getPath [jvm] abstract fun getPath (): String Returns the path of the resource. getPreferredWriteMode [jvm] abstract fun getPreferredWriteMode (): IAbstractFile.PreferredWriteMode Returns the preferred mode to write into the file. setContents [jvm] abstract fun setContents (source: InputStream ) Sets the content of the file. Inheritors \u00b6 Name FileWrapper","title":"IAbstractFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/#iabstractfile","text":"[jvm]\\ interface IAbstractFile : IAbstractResource A file.","title":"IAbstractFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/#types","text":"Name Summary PreferredWriteMode [jvm] enum PreferredWriteMode","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/#functions","text":"Name Summary delete [jvm] abstract fun delete (): Boolean Deletes the resource. exists [jvm] abstract fun exists (): Boolean Returns whether the resource actually exists. getContents [jvm] abstract fun getContents (): InputStream Returns an InputStream object on the file content. getModificationStamp [jvm] abstract fun getModificationStamp (): Long Returns the last modification timestamp getName [jvm] abstract fun getName (): String Returns the name of the resource. getOsLocation [jvm] abstract fun getOsLocation (): String Returns the OS path of the folder location (may be absolute). getOutputStream [jvm] abstract fun getOutputStream (): OutputStream Returns an OutputStream to write into the file. getParentFolder [jvm] abstract fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent. getPath [jvm] abstract fun getPath (): String Returns the path of the resource. getPreferredWriteMode [jvm] abstract fun getPreferredWriteMode (): IAbstractFile.PreferredWriteMode Returns the preferred mode to write into the file. setContents [jvm] abstract fun setContents (source: InputStream ) Sets the content of the file.","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/#inheritors","text":"Name FileWrapper","title":"Inheritors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/get-contents/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFile / getContents getContents \u00b6 [jvm]\\ abstract fun getContents (): InputStream Returns an InputStream object on the file content. The stream must be closed by the caller. Throws \u00b6 StreamException","title":"getContents - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/get-contents/#getcontents","text":"[jvm]\\ abstract fun getContents (): InputStream Returns an InputStream object on the file content. The stream must be closed by the caller.","title":"getContents"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/get-contents/#throws","text":"StreamException","title":"Throws"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/get-modification-stamp/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFile / getModificationStamp getModificationStamp \u00b6 [jvm]\\ abstract fun getModificationStamp (): Long Returns the last modification timestamp","title":"getModificationStamp - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/get-modification-stamp/#getmodificationstamp","text":"[jvm]\\ abstract fun getModificationStamp (): Long Returns the last modification timestamp","title":"getModificationStamp"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/get-output-stream/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFile / getOutputStream getOutputStream \u00b6 [jvm]\\ abstract fun getOutputStream (): OutputStream Returns an OutputStream to write into the file. Throws \u00b6 StreamException","title":"getOutputStream - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/get-output-stream/#getoutputstream","text":"[jvm]\\ abstract fun getOutputStream (): OutputStream Returns an OutputStream to write into the file.","title":"getOutputStream"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/get-output-stream/#throws","text":"StreamException","title":"Throws"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/get-preferred-write-mode/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFile / getPreferredWriteMode getPreferredWriteMode \u00b6 [jvm]\\ abstract fun getPreferredWriteMode (): IAbstractFile.PreferredWriteMode Returns the preferred mode to write into the file.","title":"getPreferredWriteMode - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/get-preferred-write-mode/#getpreferredwritemode","text":"[jvm]\\ abstract fun getPreferredWriteMode (): IAbstractFile.PreferredWriteMode Returns the preferred mode to write into the file.","title":"getPreferredWriteMode"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/set-contents/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFile / setContents setContents \u00b6 [jvm]\\ abstract fun setContents (source: InputStream ) Sets the content of the file. Parameters \u00b6 jvm source the content Throws \u00b6 StreamException","title":"setContents - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/set-contents/#setcontents","text":"[jvm]\\ abstract fun setContents (source: InputStream ) Sets the content of the file.","title":"setContents"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/set-contents/#parameters","text":"jvm source the content","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/set-contents/#throws","text":"StreamException","title":"Throws"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFile / PreferredWriteMode PreferredWriteMode \u00b6 [jvm]\\ enum PreferredWriteMode Entries \u00b6 INPUTSTREAM [jvm] INPUTSTREAM OUTPUTSTREAM [jvm] OUTPUTSTREAM Functions \u00b6 Name Summary valueOf [jvm] open fun valueOf (name: String ): IAbstractFile.PreferredWriteMode Returns the enum constant of this type with the specified name. values [jvm] open fun values (): Array < IAbstractFile.PreferredWriteMode > Returns an array containing the constants of this enum type, in the order they\u2019re declared.","title":"PreferredWriteMode - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/#preferredwritemode","text":"[jvm]\\ enum PreferredWriteMode","title":"PreferredWriteMode"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/#entries","text":"INPUTSTREAM [jvm] INPUTSTREAM OUTPUTSTREAM [jvm] OUTPUTSTREAM","title":"Entries"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/#functions","text":"Name Summary valueOf [jvm] open fun valueOf (name: String ): IAbstractFile.PreferredWriteMode Returns the enum constant of this type with the specified name. values [jvm] open fun values (): Array < IAbstractFile.PreferredWriteMode > Returns an array containing the constants of this enum type, in the order they\u2019re declared.","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/value-of/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFile / PreferredWriteMode / valueOf valueOf \u00b6 [jvm]\\ open fun valueOf (name: String ): IAbstractFile.PreferredWriteMode Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"valueOf - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/value-of/#valueof","text":"[jvm]\\ open fun valueOf (name: String ): IAbstractFile.PreferredWriteMode Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/values/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFile / PreferredWriteMode / values values \u00b6 [jvm]\\ open fun values (): Array < IAbstractFile.PreferredWriteMode > Returns an array containing the constants of this enum type, in the order they\u2019re declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they\u2019re declared","title":"values - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/values/#values","text":"[jvm]\\ open fun values (): Array < IAbstractFile.PreferredWriteMode > Returns an array containing the constants of this enum type, in the order they\u2019re declared. This method may be used to iterate over the constants.","title":"values"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/values/#return","text":"an array containing the constants of this enum type, in the order they\u2019re declared","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/-i-n-p-u-t-s-t-r-e-a-m/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFile / PreferredWriteMode / INPUTSTREAM INPUTSTREAM \u00b6 [jvm]\\ INPUTSTREAM","title":"INPUTSTREAM - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/-i-n-p-u-t-s-t-r-e-a-m/#inputstream","text":"[jvm]\\ INPUTSTREAM","title":"INPUTSTREAM"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/-o-u-t-p-u-t-s-t-r-e-a-m/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFile / PreferredWriteMode / OUTPUTSTREAM OUTPUTSTREAM \u00b6 [jvm]\\ OUTPUTSTREAM","title":"OUTPUTSTREAM - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-file/-preferred-write-mode/-o-u-t-p-u-t-s-t-r-e-a-m/#outputstream","text":"[jvm]\\ OUTPUTSTREAM","title":"OUTPUTSTREAM"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFolder IAbstractFolder \u00b6 [jvm]\\ interface IAbstractFolder : IAbstractResource A folder. Types \u00b6 Name Summary FilenameFilter [jvm] interface FilenameFilter Instances of classes that implement this interface are used to filter filenames. Functions \u00b6 Name Summary delete [jvm] abstract fun delete (): Boolean Deletes the resource. exists [jvm] abstract fun exists (): Boolean Returns whether the resource actually exists. getFile [jvm] abstract fun getFile (name: String ): IAbstractFile Returns an IAbstractFile representing a child of the current folder with the given name. getFolder [jvm] abstract fun getFolder (name: String ): IAbstractFolder Returns an IAbstractFolder representing a child of the current folder with the given name. getName [jvm] abstract fun getName (): String Returns the name of the resource. getOsLocation [jvm] abstract fun getOsLocation (): String Returns the OS path of the folder location (may be absolute). getParentFolder [jvm] abstract fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent. getPath [jvm] abstract fun getPath (): String Returns the path of the resource. hasFile [jvm] abstract fun hasFile (name: String ): Boolean Returns true if the receiver contains a file with a given name list [jvm] abstract fun list (filter: IAbstractFolder.FilenameFilter ): Array < String > Returns a list of all existing file and directory members in this folder that satisfy the specified filter. listMembers [jvm] abstract fun listMembers (): Array < IAbstractResource > Returns a list of all existing file and directory members in this folder. Inheritors \u00b6 Name FolderWrapper","title":"IAbstractFolder - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/#iabstractfolder","text":"[jvm]\\ interface IAbstractFolder : IAbstractResource A folder.","title":"IAbstractFolder"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/#types","text":"Name Summary FilenameFilter [jvm] interface FilenameFilter Instances of classes that implement this interface are used to filter filenames.","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/#functions","text":"Name Summary delete [jvm] abstract fun delete (): Boolean Deletes the resource. exists [jvm] abstract fun exists (): Boolean Returns whether the resource actually exists. getFile [jvm] abstract fun getFile (name: String ): IAbstractFile Returns an IAbstractFile representing a child of the current folder with the given name. getFolder [jvm] abstract fun getFolder (name: String ): IAbstractFolder Returns an IAbstractFolder representing a child of the current folder with the given name. getName [jvm] abstract fun getName (): String Returns the name of the resource. getOsLocation [jvm] abstract fun getOsLocation (): String Returns the OS path of the folder location (may be absolute). getParentFolder [jvm] abstract fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent. getPath [jvm] abstract fun getPath (): String Returns the path of the resource. hasFile [jvm] abstract fun hasFile (name: String ): Boolean Returns true if the receiver contains a file with a given name list [jvm] abstract fun list (filter: IAbstractFolder.FilenameFilter ): Array < String > Returns a list of all existing file and directory members in this folder that satisfy the specified filter. listMembers [jvm] abstract fun listMembers (): Array < IAbstractResource > Returns a list of all existing file and directory members in this folder.","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/#inheritors","text":"Name FolderWrapper","title":"Inheritors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/get-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFolder / getFile getFile \u00b6 [jvm]\\ abstract fun getFile (name: String ): IAbstractFile Returns an IAbstractFile representing a child of the current folder with the given name. The file may not actually exist. Parameters \u00b6 jvm name the name of the file.","title":"getFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/get-file/#getfile","text":"[jvm]\\ abstract fun getFile (name: String ): IAbstractFile Returns an IAbstractFile representing a child of the current folder with the given name. The file may not actually exist.","title":"getFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/get-file/#parameters","text":"jvm name the name of the file.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/get-folder/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFolder / getFolder getFolder \u00b6 [jvm]\\ abstract fun getFolder (name: String ): IAbstractFolder Returns an IAbstractFolder representing a child of the current folder with the given name. The folder may not actually exist. Parameters \u00b6 jvm name the name of the folder.","title":"getFolder - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/get-folder/#getfolder","text":"[jvm]\\ abstract fun getFolder (name: String ): IAbstractFolder Returns an IAbstractFolder representing a child of the current folder with the given name. The folder may not actually exist.","title":"getFolder"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/get-folder/#parameters","text":"jvm name the name of the folder.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/has-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFolder / hasFile hasFile \u00b6 [jvm]\\ abstract fun hasFile (name: String ): Boolean Returns true if the receiver contains a file with a given name Parameters \u00b6 jvm name the name of the file. This is the name without the path leading to the parent folder.","title":"hasFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/has-file/#hasfile","text":"[jvm]\\ abstract fun hasFile (name: String ): Boolean Returns true if the receiver contains a file with a given name","title":"hasFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/has-file/#parameters","text":"jvm name the name of the file. This is the name without the path leading to the parent folder.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/list-members/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFolder / listMembers listMembers \u00b6 [jvm]\\ abstract fun listMembers (): Array < IAbstractResource > Returns a list of all existing file and directory members in this folder. The returned array can be empty but is never null.","title":"listMembers - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/list-members/#listmembers","text":"[jvm]\\ abstract fun listMembers (): Array < IAbstractResource > Returns a list of all existing file and directory members in this folder. The returned array can be empty but is never null.","title":"listMembers"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/list/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFolder / list list \u00b6 [jvm]\\ abstract fun list (filter: IAbstractFolder.FilenameFilter ): Array < String > Returns a list of all existing file and directory members in this folder that satisfy the specified filter. Return \u00b6 An array of file names (generated using getName ). The array can be empty but is never null. Parameters \u00b6 jvm filter A filename filter instance. Must not be null.","title":"list - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/list/#list","text":"[jvm]\\ abstract fun list (filter: IAbstractFolder.FilenameFilter ): Array < String > Returns a list of all existing file and directory members in this folder that satisfy the specified filter.","title":"list"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/list/#return","text":"An array of file names (generated using getName ). The array can be empty but is never null.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/list/#parameters","text":"jvm filter A filename filter instance. Must not be null.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/-filename-filter/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFolder / FilenameFilter FilenameFilter \u00b6 [jvm]\\ interface FilenameFilter Instances of classes that implement this interface are used to filter filenames. Functions \u00b6 Name Summary accept [jvm] abstract fun accept (dir: IAbstractFolder , name: String ): Boolean Tests if a specified file should be included in a file list.","title":"FilenameFilter - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/-filename-filter/#filenamefilter","text":"[jvm]\\ interface FilenameFilter Instances of classes that implement this interface are used to filter filenames.","title":"FilenameFilter"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/-filename-filter/#functions","text":"Name Summary accept [jvm] abstract fun accept (dir: IAbstractFolder , name: String ): Boolean Tests if a specified file should be included in a file list.","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/-filename-filter/accept/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractFolder / FilenameFilter / accept accept \u00b6 [jvm]\\ abstract fun accept (dir: IAbstractFolder , name: String ): Boolean Tests if a specified file should be included in a file list. Return \u00b6 true if and only if the name should be included in the file list; false otherwise. Parameters \u00b6 jvm dir the directory in which the file was found. name the name of the file.","title":"accept - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/-filename-filter/accept/#accept","text":"[jvm]\\ abstract fun accept (dir: IAbstractFolder , name: String ): Boolean Tests if a specified file should be included in a file list.","title":"accept"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/-filename-filter/accept/#return","text":"true if and only if the name should be included in the file list; false otherwise.","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-folder/-filename-filter/accept/#parameters","text":"jvm dir the directory in which the file was found. name the name of the file.","title":"Parameters"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractResource IAbstractResource \u00b6 [jvm]\\ interface IAbstractResource Base representation of a file system resource. This somewhat limited interface is designed to let classes use file-system resources, without having the manually handle either the standard Java file or the Eclipse file API.. Functions \u00b6 Name Summary delete [jvm] abstract fun delete (): Boolean Deletes the resource. exists [jvm] abstract fun exists (): Boolean Returns whether the resource actually exists. getName [jvm] abstract fun getName (): String Returns the name of the resource. getOsLocation [jvm] abstract fun getOsLocation (): String Returns the OS path of the folder location (may be absolute). getParentFolder [jvm] abstract fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent. getPath [jvm] abstract fun getPath (): String Returns the path of the resource. Inheritors \u00b6 Name IAbstractFolder IAbstractFile","title":"IAbstractResource - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/#iabstractresource","text":"[jvm]\\ interface IAbstractResource Base representation of a file system resource. This somewhat limited interface is designed to let classes use file-system resources, without having the manually handle either the standard Java file or the Eclipse file API..","title":"IAbstractResource"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/#functions","text":"Name Summary delete [jvm] abstract fun delete (): Boolean Deletes the resource. exists [jvm] abstract fun exists (): Boolean Returns whether the resource actually exists. getName [jvm] abstract fun getName (): String Returns the name of the resource. getOsLocation [jvm] abstract fun getOsLocation (): String Returns the OS path of the folder location (may be absolute). getParentFolder [jvm] abstract fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent. getPath [jvm] abstract fun getPath (): String Returns the path of the resource.","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/#inheritors","text":"Name IAbstractFolder IAbstractFile","title":"Inheritors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/delete/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractResource / delete delete \u00b6 [jvm]\\ abstract fun delete (): Boolean Deletes the resource.","title":"delete - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/delete/#delete","text":"[jvm]\\ abstract fun delete (): Boolean Deletes the resource.","title":"delete"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/exists/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractResource / exists exists \u00b6 [jvm]\\ abstract fun exists (): Boolean Returns whether the resource actually exists.","title":"exists - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/exists/#exists","text":"[jvm]\\ abstract fun exists (): Boolean Returns whether the resource actually exists.","title":"exists"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/get-name/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractResource / getName getName \u00b6 [jvm]\\ abstract fun getName (): String Returns the name of the resource.","title":"getName - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/get-name/#getname","text":"[jvm]\\ abstract fun getName (): String Returns the name of the resource.","title":"getName"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/get-os-location/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractResource / getOsLocation getOsLocation \u00b6 [jvm]\\ abstract fun getOsLocation (): String Returns the OS path of the folder location (may be absolute).","title":"getOsLocation - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/get-os-location/#getoslocation","text":"[jvm]\\ abstract fun getOsLocation (): String Returns the OS path of the folder location (may be absolute).","title":"getOsLocation"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/get-parent-folder/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractResource / getParentFolder getParentFolder \u00b6 [jvm]\\ abstract fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent.","title":"getParentFolder - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/get-parent-folder/#getparentfolder","text":"[jvm]\\ abstract fun getParentFolder (): IAbstractFolder Returns the parent folder or null if there is no parent.","title":"getParentFolder"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/get-path/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / IAbstractResource / getPath getPath \u00b6 [jvm]\\ abstract fun getPath (): String Returns the path of the resource.","title":"getPath - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-i-abstract-resource/get-path/#getpath","text":"[jvm]\\ abstract fun getPath (): String Returns the path of the resource.","title":"getPath"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / StreamException StreamException \u00b6 [jvm]\\ open class StreamException : Exception Exception thrown when getContents fails. Constructors \u00b6 StreamException [jvm] open fun StreamException (e: Exception , file: IAbstractFile ) StreamException [jvm] open fun StreamException (e: Exception , file: IAbstractFile , error: StreamException.Error ) Types \u00b6 Name Summary Error [jvm] enum Error Functions \u00b6 Name Summary addSuppressed [jvm] fun addSuppressed (exception: Throwable ) fillInStackTrace [jvm] open fun fillInStackTrace (): Throwable getError [jvm] open fun getError (): StreamException.Error getFile [jvm] open fun getFile (): IAbstractFile getLocalizedMessage [jvm] open fun getLocalizedMessage (): String getMessage [jvm] open fun getMessage (): String getSuppressed [jvm] fun getSuppressed (): Array < Throwable > initCause [jvm] open fun initCause (cause: Throwable ): Throwable printStackTrace [jvm] open fun printStackTrace () toString [jvm] open fun toString (): String Properties \u00b6 Name Summary cause [jvm] open val cause : Throwable stackTrace [jvm] open var stackTrace : Array < StackTraceElement >","title":"StreamException - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/#streamexception","text":"[jvm]\\ open class StreamException : Exception Exception thrown when getContents fails.","title":"StreamException"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/#constructors","text":"StreamException [jvm] open fun StreamException (e: Exception , file: IAbstractFile ) StreamException [jvm] open fun StreamException (e: Exception , file: IAbstractFile , error: StreamException.Error )","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/#types","text":"Name Summary Error [jvm] enum Error","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/#functions","text":"Name Summary addSuppressed [jvm] fun addSuppressed (exception: Throwable ) fillInStackTrace [jvm] open fun fillInStackTrace (): Throwable getError [jvm] open fun getError (): StreamException.Error getFile [jvm] open fun getFile (): IAbstractFile getLocalizedMessage [jvm] open fun getLocalizedMessage (): String getMessage [jvm] open fun getMessage (): String getSuppressed [jvm] fun getSuppressed (): Array < Throwable > initCause [jvm] open fun initCause (cause: Throwable ): Throwable printStackTrace [jvm] open fun printStackTrace () toString [jvm] open fun toString (): String","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/#properties","text":"Name Summary cause [jvm] open val cause : Throwable stackTrace [jvm] open var stackTrace : Array < StackTraceElement >","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-stream-exception/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / StreamException / StreamException StreamException \u00b6 [jvm]\\ open fun StreamException (e: Exception , file: IAbstractFile ) open fun StreamException (e: Exception , file: IAbstractFile , error: StreamException.Error )","title":"StreamException - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-stream-exception/#streamexception","text":"[jvm]\\ open fun StreamException (e: Exception , file: IAbstractFile ) open fun StreamException (e: Exception , file: IAbstractFile , error: StreamException.Error )","title":"StreamException"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/get-error/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / StreamException / getError getError \u00b6 [jvm]\\ open fun getError (): StreamException.Error","title":"getError - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/get-error/#geterror","text":"[jvm]\\ open fun getError (): StreamException.Error","title":"getError"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/get-file/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / StreamException / getFile getFile \u00b6 [jvm]\\ open fun getFile (): IAbstractFile","title":"getFile - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/get-file/#getfile","text":"[jvm]\\ open fun getFile (): IAbstractFile","title":"getFile"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / StreamException / Error Error \u00b6 [jvm]\\ enum Error Entries \u00b6 DEFAULT [jvm] DEFAULT OUTOFSYNC [jvm] OUTOFSYNC FILENOTFOUND [jvm] FILENOTFOUND Functions \u00b6 Name Summary valueOf [jvm] open fun valueOf (name: String ): StreamException.Error Returns the enum constant of this type with the specified name. values [jvm] open fun values (): Array < StreamException.Error > Returns an array containing the constants of this enum type, in the order they\u2019re declared.","title":"Error - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/#error","text":"[jvm]\\ enum Error","title":"Error"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/#entries","text":"DEFAULT [jvm] DEFAULT OUTOFSYNC [jvm] OUTOFSYNC FILENOTFOUND [jvm] FILENOTFOUND","title":"Entries"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/#functions","text":"Name Summary valueOf [jvm] open fun valueOf (name: String ): StreamException.Error Returns the enum constant of this type with the specified name. values [jvm] open fun values (): Array < StreamException.Error > Returns an array containing the constants of this enum type, in the order they\u2019re declared.","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/value-of/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / StreamException / Error / valueOf valueOf \u00b6 [jvm]\\ open fun valueOf (name: String ): StreamException.Error Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"valueOf - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/value-of/#valueof","text":"[jvm]\\ open fun valueOf (name: String ): StreamException.Error Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/values/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / StreamException / Error / values values \u00b6 [jvm]\\ open fun values (): Array < StreamException.Error > Returns an array containing the constants of this enum type, in the order they\u2019re declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they\u2019re declared","title":"values - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/values/#values","text":"[jvm]\\ open fun values (): Array < StreamException.Error > Returns an array containing the constants of this enum type, in the order they\u2019re declared. This method may be used to iterate over the constants.","title":"values"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/values/#return","text":"an array containing the constants of this enum type, in the order they\u2019re declared","title":"Return"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/-d-e-f-a-u-l-t/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / StreamException / Error / DEFAULT DEFAULT \u00b6 [jvm]\\ DEFAULT","title":"DEFAULT - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/-d-e-f-a-u-l-t/#default","text":"[jvm]\\ DEFAULT","title":"DEFAULT"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/-f-i-l-e-n-o-t-f-o-u-n-d/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / StreamException / Error / FILENOTFOUND FILENOTFOUND \u00b6 [jvm]\\ FILENOTFOUND","title":"FILENOTFOUND - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/-f-i-l-e-n-o-t-f-o-u-n-d/#filenotfound","text":"[jvm]\\ FILENOTFOUND","title":"FILENOTFOUND"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/-o-u-t-o-f-s-y-n-c/","text":"// paparazzi / app.cash.paparazzi.deprecated.com.android.io / StreamException / Error / OUTOFSYNC OUTOFSYNC \u00b6 [jvm]\\ OUTOFSYNC","title":"OUTOFSYNC - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.deprecated.com.android.io/-stream-exception/-error/-o-u-t-o-f-s-y-n-c/#outofsync","text":"[jvm]\\ OUTOFSYNC","title":"OUTOFSYNC"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/","text":"// paparazzi / app.cash.paparazzi.internal Package-level declarations \u00b6 Types \u00b6 Name Summary ChoreographerDelegateInterceptor [jvm] object ChoreographerDelegateInterceptor EditModeInterceptor [jvm] object EditModeInterceptor IInputMethodManagerInterceptor [jvm] object IInputMethodManagerInterceptor With ServiceManagerInterceptor returning null for the service, we must override the logic in com.android.internal.view.IInputMethodManager.Stub.asInterface to return the default implementation of IInputMethodManager. MatrixMatrixMultiplicationInterceptor [jvm] object MatrixMatrixMultiplicationInterceptor MatrixVectorMultiplicationInterceptor [jvm] object MatrixVectorMultiplicationInterceptor ResourceRepositoryBridge [jvm] interface ResourceRepositoryBridge ResourcesInterceptor [jvm] object ResourcesInterceptor ServiceManagerInterceptor [jvm] object ServiceManagerInterceptor The ImeTracing class attempts to initialize its mService field in its constructor .","title":"Package-level declarations - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/#types","text":"Name Summary ChoreographerDelegateInterceptor [jvm] object ChoreographerDelegateInterceptor EditModeInterceptor [jvm] object EditModeInterceptor IInputMethodManagerInterceptor [jvm] object IInputMethodManagerInterceptor With ServiceManagerInterceptor returning null for the service, we must override the logic in com.android.internal.view.IInputMethodManager.Stub.asInterface to return the default implementation of IInputMethodManager. MatrixMatrixMultiplicationInterceptor [jvm] object MatrixMatrixMultiplicationInterceptor MatrixVectorMultiplicationInterceptor [jvm] object MatrixVectorMultiplicationInterceptor ResourceRepositoryBridge [jvm] interface ResourceRepositoryBridge ResourcesInterceptor [jvm] object ResourcesInterceptor ServiceManagerInterceptor [jvm] object ServiceManagerInterceptor The ImeTracing class attempts to initialize its mService field in its constructor .","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-choreographer-delegate-interceptor/","text":"// paparazzi / app.cash.paparazzi.internal / ChoreographerDelegateInterceptor ChoreographerDelegateInterceptor \u00b6 [jvm]\\ object ChoreographerDelegateInterceptor Functions \u00b6 Name Summary intercept [jvm] @ JvmStatic fun intercept (choreographer: Choreographer): Long","title":"ChoreographerDelegateInterceptor - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-choreographer-delegate-interceptor/#choreographerdelegateinterceptor","text":"[jvm]\\ object ChoreographerDelegateInterceptor","title":"ChoreographerDelegateInterceptor"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-choreographer-delegate-interceptor/#functions","text":"Name Summary intercept [jvm] @ JvmStatic fun intercept (choreographer: Choreographer): Long","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-choreographer-delegate-interceptor/intercept/","text":"// paparazzi / app.cash.paparazzi.internal / ChoreographerDelegateInterceptor / intercept intercept \u00b6 [jvm]\\ @ JvmStatic fun intercept (choreographer: Choreographer): Long","title":"intercept - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-choreographer-delegate-interceptor/intercept/#intercept","text":"[jvm]\\ @ JvmStatic fun intercept (choreographer: Choreographer): Long","title":"intercept"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-edit-mode-interceptor/","text":"// paparazzi / app.cash.paparazzi.internal / EditModeInterceptor EditModeInterceptor \u00b6 [jvm]\\ object EditModeInterceptor Functions \u00b6 Name Summary intercept [jvm] @ JvmStatic fun intercept (): Boolean","title":"EditModeInterceptor - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-edit-mode-interceptor/#editmodeinterceptor","text":"[jvm]\\ object EditModeInterceptor","title":"EditModeInterceptor"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-edit-mode-interceptor/#functions","text":"Name Summary intercept [jvm] @ JvmStatic fun intercept (): Boolean","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-edit-mode-interceptor/intercept/","text":"// paparazzi / app.cash.paparazzi.internal / EditModeInterceptor / intercept intercept \u00b6 [jvm]\\ @ JvmStatic fun intercept (): Boolean","title":"intercept - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-edit-mode-interceptor/intercept/#intercept","text":"[jvm]\\ @ JvmStatic fun intercept (): Boolean","title":"intercept"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-i-input-method-manager-interceptor/","text":"// paparazzi / app.cash.paparazzi.internal / IInputMethodManagerInterceptor IInputMethodManagerInterceptor \u00b6 [jvm]\\ object IInputMethodManagerInterceptor With ServiceManagerInterceptor returning null for the service, we must override the logic in com.android.internal.view.IInputMethodManager.Stub.asInterface to return the default implementation of IInputMethodManager. Functions \u00b6 Name Summary interceptAsInterface [jvm] @ JvmStatic fun interceptAsInterface (obj: IBinder?): IInputMethodManager","title":"IInputMethodManagerInterceptor - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-i-input-method-manager-interceptor/#iinputmethodmanagerinterceptor","text":"[jvm]\\ object IInputMethodManagerInterceptor With ServiceManagerInterceptor returning null for the service, we must override the logic in com.android.internal.view.IInputMethodManager.Stub.asInterface to return the default implementation of IInputMethodManager.","title":"IInputMethodManagerInterceptor"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-i-input-method-manager-interceptor/#functions","text":"Name Summary interceptAsInterface [jvm] @ JvmStatic fun interceptAsInterface (obj: IBinder?): IInputMethodManager","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-i-input-method-manager-interceptor/intercept-as-interface/","text":"// paparazzi / app.cash.paparazzi.internal / IInputMethodManagerInterceptor / interceptAsInterface interceptAsInterface \u00b6 [jvm]\\ @ JvmStatic fun interceptAsInterface (obj: IBinder?): IInputMethodManager","title":"interceptAsInterface - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-i-input-method-manager-interceptor/intercept-as-interface/#interceptasinterface","text":"[jvm]\\ @ JvmStatic fun interceptAsInterface (obj: IBinder?): IInputMethodManager","title":"interceptAsInterface"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-matrix-matrix-multiplication-interceptor/","text":"// paparazzi / app.cash.paparazzi.internal / MatrixMatrixMultiplicationInterceptor MatrixMatrixMultiplicationInterceptor \u00b6 [jvm]\\ object MatrixMatrixMultiplicationInterceptor Functions \u00b6 Name Summary intercept [jvm] @ JvmStatic fun intercept (result: FloatArray , resultOffset: Int , lhs: FloatArray , lhsOffset: Int , rhs: FloatArray , rhsOffset: Int )","title":"MatrixMatrixMultiplicationInterceptor - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-matrix-matrix-multiplication-interceptor/#matrixmatrixmultiplicationinterceptor","text":"[jvm]\\ object MatrixMatrixMultiplicationInterceptor","title":"MatrixMatrixMultiplicationInterceptor"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-matrix-matrix-multiplication-interceptor/#functions","text":"Name Summary intercept [jvm] @ JvmStatic fun intercept (result: FloatArray , resultOffset: Int , lhs: FloatArray , lhsOffset: Int , rhs: FloatArray , rhsOffset: Int )","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-matrix-matrix-multiplication-interceptor/intercept/","text":"// paparazzi / app.cash.paparazzi.internal / MatrixMatrixMultiplicationInterceptor / intercept intercept \u00b6 [jvm]\\ @ JvmStatic fun intercept (result: FloatArray , resultOffset: Int , lhs: FloatArray , lhsOffset: Int , rhs: FloatArray , rhsOffset: Int )","title":"intercept - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-matrix-matrix-multiplication-interceptor/intercept/#intercept","text":"[jvm]\\ @ JvmStatic fun intercept (result: FloatArray , resultOffset: Int , lhs: FloatArray , lhsOffset: Int , rhs: FloatArray , rhsOffset: Int )","title":"intercept"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-matrix-vector-multiplication-interceptor/","text":"// paparazzi / app.cash.paparazzi.internal / MatrixVectorMultiplicationInterceptor MatrixVectorMultiplicationInterceptor \u00b6 [jvm]\\ object MatrixVectorMultiplicationInterceptor Functions \u00b6 Name Summary intercept [jvm] @ JvmStatic fun intercept (resultVec: FloatArray , resultVecOffset: Int , lhsMat: FloatArray , lhsMatOffset: Int , rhsVec: FloatArray , rhsVecOffset: Int )","title":"MatrixVectorMultiplicationInterceptor - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-matrix-vector-multiplication-interceptor/#matrixvectormultiplicationinterceptor","text":"[jvm]\\ object MatrixVectorMultiplicationInterceptor","title":"MatrixVectorMultiplicationInterceptor"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-matrix-vector-multiplication-interceptor/#functions","text":"Name Summary intercept [jvm] @ JvmStatic fun intercept (resultVec: FloatArray , resultVecOffset: Int , lhsMat: FloatArray , lhsMatOffset: Int , rhsVec: FloatArray , rhsVecOffset: Int )","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-matrix-vector-multiplication-interceptor/intercept/","text":"// paparazzi / app.cash.paparazzi.internal / MatrixVectorMultiplicationInterceptor / intercept intercept \u00b6 [jvm]\\ @ JvmStatic fun intercept (resultVec: FloatArray , resultVecOffset: Int , lhsMat: FloatArray , lhsMatOffset: Int , rhsVec: FloatArray , rhsVecOffset: Int )","title":"intercept - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-matrix-vector-multiplication-interceptor/intercept/#intercept","text":"[jvm]\\ @ JvmStatic fun intercept (resultVec: FloatArray , resultVecOffset: Int , lhsMat: FloatArray , lhsMatOffset: Int , rhsVec: FloatArray , rhsVecOffset: Int )","title":"intercept"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/","text":"// paparazzi / app.cash.paparazzi.internal / ResourceRepositoryBridge ResourceRepositoryBridge \u00b6 [jvm]\\ interface ResourceRepositoryBridge Types \u00b6 Name Summary Legacy [jvm] class Legacy (val repository: ResourceRepository ) : ResourceRepositoryBridge New [jvm] class New (val repository: ResourceRepository) : ResourceRepositoryBridge Inheritors \u00b6 Name Legacy New","title":"ResourceRepositoryBridge - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/#resourcerepositorybridge","text":"[jvm]\\ interface ResourceRepositoryBridge","title":"ResourceRepositoryBridge"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/#types","text":"Name Summary Legacy [jvm] class Legacy (val repository: ResourceRepository ) : ResourceRepositoryBridge New [jvm] class New (val repository: ResourceRepository) : ResourceRepositoryBridge","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/#inheritors","text":"Name Legacy New","title":"Inheritors"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-legacy/","text":"// paparazzi / app.cash.paparazzi.internal / ResourceRepositoryBridge / Legacy Legacy \u00b6 [jvm]\\ class Legacy (val repository: ResourceRepository ) : ResourceRepositoryBridge Constructors \u00b6 Legacy [jvm] fun Legacy (repository: ResourceRepository ) Properties \u00b6 Name Summary repository [jvm] val repository : ResourceRepository","title":"Legacy - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-legacy/#legacy","text":"[jvm]\\ class Legacy (val repository: ResourceRepository ) : ResourceRepositoryBridge","title":"Legacy"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-legacy/#constructors","text":"Legacy [jvm] fun Legacy (repository: ResourceRepository )","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-legacy/#properties","text":"Name Summary repository [jvm] val repository : ResourceRepository","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-legacy/-legacy/","text":"// paparazzi / app.cash.paparazzi.internal / ResourceRepositoryBridge / Legacy / Legacy Legacy \u00b6 [jvm]\\ fun Legacy (repository: ResourceRepository )","title":"Legacy - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-legacy/-legacy/#legacy","text":"[jvm]\\ fun Legacy (repository: ResourceRepository )","title":"Legacy"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-legacy/repository/","text":"// paparazzi / app.cash.paparazzi.internal / ResourceRepositoryBridge / Legacy / repository repository \u00b6 [jvm]\\ val repository : ResourceRepository","title":"repository - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-legacy/repository/#repository","text":"[jvm]\\ val repository : ResourceRepository","title":"repository"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-new/","text":"// paparazzi / app.cash.paparazzi.internal / ResourceRepositoryBridge / New New \u00b6 [jvm]\\ class New (val repository: ResourceRepository) : ResourceRepositoryBridge Constructors \u00b6 New [jvm] fun New (repository: ResourceRepository) Properties \u00b6 Name Summary repository [jvm] val repository : ResourceRepository","title":"New - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-new/#new","text":"[jvm]\\ class New (val repository: ResourceRepository) : ResourceRepositoryBridge","title":"New"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-new/#constructors","text":"New [jvm] fun New (repository: ResourceRepository)","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-new/#properties","text":"Name Summary repository [jvm] val repository : ResourceRepository","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-new/-new/","text":"// paparazzi / app.cash.paparazzi.internal / ResourceRepositoryBridge / New / New New \u00b6 [jvm]\\ fun New (repository: ResourceRepository)","title":"New - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-new/-new/#new","text":"[jvm]\\ fun New (repository: ResourceRepository)","title":"New"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-new/repository/","text":"// paparazzi / app.cash.paparazzi.internal / ResourceRepositoryBridge / New / repository repository \u00b6 [jvm]\\ val repository : ResourceRepository","title":"repository - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resource-repository-bridge/-new/repository/#repository","text":"[jvm]\\ val repository : ResourceRepository","title":"repository"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resources-interceptor/","text":"// paparazzi / app.cash.paparazzi.internal / ResourcesInterceptor ResourcesInterceptor \u00b6 [jvm]\\ object ResourcesInterceptor Functions \u00b6 Name Summary intercept [jvm] @ JvmStatic fun intercept (context: Context, resId: Int ): Typeface?","title":"ResourcesInterceptor - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resources-interceptor/#resourcesinterceptor","text":"[jvm]\\ object ResourcesInterceptor","title":"ResourcesInterceptor"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resources-interceptor/#functions","text":"Name Summary intercept [jvm] @ JvmStatic fun intercept (context: Context, resId: Int ): Typeface?","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resources-interceptor/intercept/","text":"// paparazzi / app.cash.paparazzi.internal / ResourcesInterceptor / intercept intercept \u00b6 [jvm]\\ @ JvmStatic fun intercept (context: Context, resId: Int ): Typeface?","title":"intercept - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-resources-interceptor/intercept/#intercept","text":"[jvm]\\ @ JvmStatic fun intercept (context: Context, resId: Int ): Typeface?","title":"intercept"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-service-manager-interceptor/","text":"// paparazzi / app.cash.paparazzi.internal / ServiceManagerInterceptor ServiceManagerInterceptor \u00b6 [jvm]\\ object ServiceManagerInterceptor The ImeTracing class attempts to initialize its mService field in its constructor . Unfortunately, layoutlib\u2019s version of ServiceManager throws an exception immediately. This interceptor overrides ServiceManager.getServiceOrThrow to simply return null instead. Functions \u00b6 Name Summary interceptGetServiceOrThrow [jvm] @ JvmStatic fun interceptGetServiceOrThrow (name: String ): IBinder?","title":"ServiceManagerInterceptor - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-service-manager-interceptor/#servicemanagerinterceptor","text":"[jvm]\\ object ServiceManagerInterceptor The ImeTracing class attempts to initialize its mService field in its constructor . Unfortunately, layoutlib\u2019s version of ServiceManager throws an exception immediately. This interceptor overrides ServiceManager.getServiceOrThrow to simply return null instead.","title":"ServiceManagerInterceptor"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-service-manager-interceptor/#functions","text":"Name Summary interceptGetServiceOrThrow [jvm] @ JvmStatic fun interceptGetServiceOrThrow (name: String ): IBinder?","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-service-manager-interceptor/intercept-get-service-or-throw/","text":"// paparazzi / app.cash.paparazzi.internal / ServiceManagerInterceptor / interceptGetServiceOrThrow interceptGetServiceOrThrow \u00b6 [jvm]\\ @ JvmStatic fun interceptGetServiceOrThrow (name: String ): IBinder?","title":"interceptGetServiceOrThrow - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal/-service-manager-interceptor/intercept-get-service-or-throw/#interceptgetserviceorthrow","text":"[jvm]\\ @ JvmStatic fun interceptGetServiceOrThrow (name: String ): IBinder?","title":"interceptGetServiceOrThrow"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/","text":"// paparazzi / app.cash.paparazzi.internal.parsers Package-level declarations \u00b6 Types \u00b6 Name Summary AaptAttrParser [jvm] interface AaptAttrParser Copied from https://cs.android.com/android-studio/platform/tools/adt/idea/+/858f81bb7c350bc7a05daad36edefd21f74c8cef:android/src/com/android/tools/idea/rendering/parsers/AaptAttrParser.java AaptAttrSnapshot [jvm] class AaptAttrSnapshot (val namespace: String , val prefix: String , val name: String , val id: String , val bundledTag: TagSnapshot ) : AttributeSnapshot Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/mirror-goog-studio-master-dev:android/src/com/android/tools/idea/rendering/parsers/AaptAttrAttributeSnapshot.java AttributeSnapshot [jvm] open class AttributeSnapshot (val namespace: String , val prefix: String ?, val name: String , val value: String ) Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/mirror-goog-studio-master-dev:android/src/com/android/tools/idea/rendering/parsers/AttributeSnapshot.java InMemoryParser [jvm] abstract class InMemoryParser : KXmlParser Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/858f81bb7c350bc7a05daad36edefd21f74c8cef:android/src/com/android/tools/idea/rendering/parsers/LayoutPullParser.java;bpv=0;bpt=0 ResourceParser [jvm] class ResourceParser (inputStream: InputStream ) : KXmlParser An XML resource parser that creates a tree of TagSnapshot s TagSnapshot [jvm] data class TagSnapshot (val name: String , val namespace: String , val prefix: String ?, val attributes: List < AttributeSnapshot >, val children: List < TagSnapshot >, val hasDeclaredAaptAttrs: Boolean = false) Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/mirror-goog-studio-master-dev:android/src/com/android/tools/idea/rendering/parsers/TagSnapshot.java","title":"Package-level declarations - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/#types","text":"Name Summary AaptAttrParser [jvm] interface AaptAttrParser Copied from https://cs.android.com/android-studio/platform/tools/adt/idea/+/858f81bb7c350bc7a05daad36edefd21f74c8cef:android/src/com/android/tools/idea/rendering/parsers/AaptAttrParser.java AaptAttrSnapshot [jvm] class AaptAttrSnapshot (val namespace: String , val prefix: String , val name: String , val id: String , val bundledTag: TagSnapshot ) : AttributeSnapshot Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/mirror-goog-studio-master-dev:android/src/com/android/tools/idea/rendering/parsers/AaptAttrAttributeSnapshot.java AttributeSnapshot [jvm] open class AttributeSnapshot (val namespace: String , val prefix: String ?, val name: String , val value: String ) Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/mirror-goog-studio-master-dev:android/src/com/android/tools/idea/rendering/parsers/AttributeSnapshot.java InMemoryParser [jvm] abstract class InMemoryParser : KXmlParser Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/858f81bb7c350bc7a05daad36edefd21f74c8cef:android/src/com/android/tools/idea/rendering/parsers/LayoutPullParser.java;bpv=0;bpt=0 ResourceParser [jvm] class ResourceParser (inputStream: InputStream ) : KXmlParser An XML resource parser that creates a tree of TagSnapshot s TagSnapshot [jvm] data class TagSnapshot (val name: String , val namespace: String , val prefix: String ?, val attributes: List < AttributeSnapshot >, val children: List < TagSnapshot >, val hasDeclaredAaptAttrs: Boolean = false) Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/mirror-goog-studio-master-dev:android/src/com/android/tools/idea/rendering/parsers/TagSnapshot.java","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-parser/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AaptAttrParser AaptAttrParser \u00b6 [jvm]\\ interface AaptAttrParser Copied from https://cs.android.com/android-studio/platform/tools/adt/idea/+/858f81bb7c350bc7a05daad36edefd21f74c8cef:android/src/com/android/tools/idea/rendering/parsers/AaptAttrParser.java Interface for parsers that support declaration of inlined {@code aapt:attr} attributes Functions \u00b6 Name Summary getAaptDeclaredAttrs [jvm] abstract fun getAaptDeclaredAttrs (): Map < String , TagSnapshot > Returns a Map that contains all the aapt:attr elements declared in this or any children parsers. This list can be used to resolve @aapt/_aapt references into this parser.","title":"AaptAttrParser - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-parser/#aaptattrparser","text":"[jvm]\\ interface AaptAttrParser Copied from https://cs.android.com/android-studio/platform/tools/adt/idea/+/858f81bb7c350bc7a05daad36edefd21f74c8cef:android/src/com/android/tools/idea/rendering/parsers/AaptAttrParser.java Interface for parsers that support declaration of inlined {@code aapt:attr} attributes","title":"AaptAttrParser"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-parser/#functions","text":"Name Summary getAaptDeclaredAttrs [jvm] abstract fun getAaptDeclaredAttrs (): Map < String , TagSnapshot > Returns a Map that contains all the aapt:attr elements declared in this or any children parsers. This list can be used to resolve @aapt/_aapt references into this parser.","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-parser/get-aapt-declared-attrs/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AaptAttrParser / getAaptDeclaredAttrs getAaptDeclaredAttrs \u00b6 [jvm]\\ abstract fun getAaptDeclaredAttrs (): Map < String , TagSnapshot > Returns a Map that contains all the aapt:attr elements declared in this or any children parsers. This list can be used to resolve @aapt/_aapt references into this parser.","title":"getAaptDeclaredAttrs - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-parser/get-aapt-declared-attrs/#getaaptdeclaredattrs","text":"[jvm]\\ abstract fun getAaptDeclaredAttrs (): Map < String , TagSnapshot > Returns a Map that contains all the aapt:attr elements declared in this or any children parsers. This list can be used to resolve @aapt/_aapt references into this parser.","title":"getAaptDeclaredAttrs"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AaptAttrSnapshot AaptAttrSnapshot \u00b6 [jvm]\\ class AaptAttrSnapshot (val namespace: String , val prefix: String , val name: String , val id: String , val bundledTag: TagSnapshot ) : AttributeSnapshot Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/mirror-goog-studio-master-dev:android/src/com/android/tools/idea/rendering/parsers/AaptAttrAttributeSnapshot.java Aapt attributes are attributes that instead of containing a reference, contain the inlined value of the reference. This snapshot will generate a dynamic reference that will be used by the resource resolution to be able to retrieve the inlined value. Constructors \u00b6 AaptAttrSnapshot [jvm] fun AaptAttrSnapshot (namespace: String , prefix: String , name: String , id: String , bundledTag: TagSnapshot ) Functions \u00b6 Name Summary equals [jvm] open operator override fun equals (other: Any ?): Boolean hashCode [jvm] open override fun hashCode (): Int toString [jvm] open override fun toString (): String Properties \u00b6 Name Summary bundledTag [jvm] val bundledTag : TagSnapshot id [jvm] val id : String name [jvm] open override val name : String namespace [jvm] open override val namespace : String prefix [jvm] open override val prefix : String value [jvm] open val value : String","title":"AaptAttrSnapshot - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/#aaptattrsnapshot","text":"[jvm]\\ class AaptAttrSnapshot (val namespace: String , val prefix: String , val name: String , val id: String , val bundledTag: TagSnapshot ) : AttributeSnapshot Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/mirror-goog-studio-master-dev:android/src/com/android/tools/idea/rendering/parsers/AaptAttrAttributeSnapshot.java Aapt attributes are attributes that instead of containing a reference, contain the inlined value of the reference. This snapshot will generate a dynamic reference that will be used by the resource resolution to be able to retrieve the inlined value.","title":"AaptAttrSnapshot"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/#constructors","text":"AaptAttrSnapshot [jvm] fun AaptAttrSnapshot (namespace: String , prefix: String , name: String , id: String , bundledTag: TagSnapshot )","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/#functions","text":"Name Summary equals [jvm] open operator override fun equals (other: Any ?): Boolean hashCode [jvm] open override fun hashCode (): Int toString [jvm] open override fun toString (): String","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/#properties","text":"Name Summary bundledTag [jvm] val bundledTag : TagSnapshot id [jvm] val id : String name [jvm] open override val name : String namespace [jvm] open override val namespace : String prefix [jvm] open override val prefix : String value [jvm] open val value : String","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/-aapt-attr-snapshot/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AaptAttrSnapshot / AaptAttrSnapshot AaptAttrSnapshot \u00b6 [jvm]\\ fun AaptAttrSnapshot (namespace: String , prefix: String , name: String , id: String , bundledTag: TagSnapshot )","title":"AaptAttrSnapshot - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/-aapt-attr-snapshot/#aaptattrsnapshot","text":"[jvm]\\ fun AaptAttrSnapshot (namespace: String , prefix: String , name: String , id: String , bundledTag: TagSnapshot )","title":"AaptAttrSnapshot"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/bundled-tag/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AaptAttrSnapshot / bundledTag bundledTag \u00b6 [jvm]\\ val bundledTag : TagSnapshot","title":"bundledTag - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/bundled-tag/#bundledtag","text":"[jvm]\\ val bundledTag : TagSnapshot","title":"bundledTag"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/id/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AaptAttrSnapshot / id id \u00b6 [jvm]\\ val id : String","title":"id - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/id/#id","text":"[jvm]\\ val id : String","title":"id"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/name/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AaptAttrSnapshot / name name \u00b6 [jvm]\\ open override val name : String","title":"name - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/name/#name","text":"[jvm]\\ open override val name : String","title":"name"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/namespace/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AaptAttrSnapshot / namespace namespace \u00b6 [jvm]\\ open override val namespace : String","title":"namespace - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/namespace/#namespace","text":"[jvm]\\ open override val namespace : String","title":"namespace"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/prefix/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AaptAttrSnapshot / prefix prefix \u00b6 [jvm]\\ open override val prefix : String","title":"prefix - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-aapt-attr-snapshot/prefix/#prefix","text":"[jvm]\\ open override val prefix : String","title":"prefix"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AttributeSnapshot AttributeSnapshot \u00b6 [jvm]\\ open class AttributeSnapshot (val namespace: String , val prefix: String ?, val name: String , val value: String ) Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/mirror-goog-studio-master-dev:android/src/com/android/tools/idea/rendering/parsers/AttributeSnapshot.java A snapshot of an attribute value pulled from an XML resource. Used in conjunction with TagSnapshot . Constructors \u00b6 AttributeSnapshot [jvm] fun AttributeSnapshot (namespace: String , prefix: String ?, name: String , value: String ) Functions \u00b6 Name Summary equals [jvm] open operator override fun equals (other: Any ?): Boolean hashCode [jvm] open override fun hashCode (): Int toString [jvm] open override fun toString (): String Properties \u00b6 Name Summary name [jvm] open val name : String namespace [jvm] open val namespace : String prefix [jvm] open val prefix : String ? value [jvm] open val value : String Inheritors \u00b6 Name AaptAttrSnapshot","title":"AttributeSnapshot - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/#attributesnapshot","text":"[jvm]\\ open class AttributeSnapshot (val namespace: String , val prefix: String ?, val name: String , val value: String ) Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/mirror-goog-studio-master-dev:android/src/com/android/tools/idea/rendering/parsers/AttributeSnapshot.java A snapshot of an attribute value pulled from an XML resource. Used in conjunction with TagSnapshot .","title":"AttributeSnapshot"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/#constructors","text":"AttributeSnapshot [jvm] fun AttributeSnapshot (namespace: String , prefix: String ?, name: String , value: String )","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/#functions","text":"Name Summary equals [jvm] open operator override fun equals (other: Any ?): Boolean hashCode [jvm] open override fun hashCode (): Int toString [jvm] open override fun toString (): String","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/#properties","text":"Name Summary name [jvm] open val name : String namespace [jvm] open val namespace : String prefix [jvm] open val prefix : String ? value [jvm] open val value : String","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/#inheritors","text":"Name AaptAttrSnapshot","title":"Inheritors"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/-attribute-snapshot/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AttributeSnapshot / AttributeSnapshot AttributeSnapshot \u00b6 [jvm]\\ fun AttributeSnapshot (namespace: String , prefix: String ?, name: String , value: String )","title":"AttributeSnapshot - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/-attribute-snapshot/#attributesnapshot","text":"[jvm]\\ fun AttributeSnapshot (namespace: String , prefix: String ?, name: String , value: String )","title":"AttributeSnapshot"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/equals/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AttributeSnapshot / equals equals \u00b6 [jvm]\\ open operator override fun equals (other: Any ?): Boolean","title":"equals - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/equals/#equals","text":"[jvm]\\ open operator override fun equals (other: Any ?): Boolean","title":"equals"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/hash-code/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AttributeSnapshot / hashCode hashCode \u00b6 [jvm]\\ open override fun hashCode (): Int","title":"hashCode - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/hash-code/#hashcode","text":"[jvm]\\ open override fun hashCode (): Int","title":"hashCode"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/name/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AttributeSnapshot / name name \u00b6 [jvm]\\ open val name : String","title":"name - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/name/#name","text":"[jvm]\\ open val name : String","title":"name"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/namespace/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AttributeSnapshot / namespace namespace \u00b6 [jvm]\\ open val namespace : String","title":"namespace - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/namespace/#namespace","text":"[jvm]\\ open val namespace : String","title":"namespace"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/prefix/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AttributeSnapshot / prefix prefix \u00b6 [jvm]\\ open val prefix : String ?","title":"prefix - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/prefix/#prefix","text":"[jvm]\\ open val prefix : String ?","title":"prefix"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/to-string/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AttributeSnapshot / toString toString \u00b6 [jvm]\\ open override fun toString (): String","title":"toString - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/to-string/#tostring","text":"[jvm]\\ open override fun toString (): String","title":"toString"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/value/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / AttributeSnapshot / value value \u00b6 [jvm]\\ open val value : String","title":"value - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-attribute-snapshot/value/#value","text":"[jvm]\\ open val value : String","title":"value"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / InMemoryParser InMemoryParser \u00b6 [jvm]\\ abstract class InMemoryParser : KXmlParser Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/858f81bb7c350bc7a05daad36edefd21f74c8cef:android/src/com/android/tools/idea/rendering/parsers/LayoutPullParser.java;bpv=0;bpt=0 A parser implementation that walks an in-memory XML DOM tree. Constructors \u00b6 InMemoryParser [jvm] fun InMemoryParser () Functions \u00b6 Name Summary defineEntityReplacementText [jvm] open override fun defineEntityReplacementText (p0: String , p1: String ) getAttributeCount [jvm] open override fun getAttributeCount (): Int getAttributeName [jvm] open override fun getAttributeName (i: Int ): String ? getAttributeNamespace [jvm] open override fun getAttributeNamespace (i: Int ): String getAttributePrefix [jvm] open override fun getAttributePrefix (i: Int ): String ? getAttributeType [jvm] open override fun getAttributeType (p0: Int ): String getAttributeValue [jvm] open override fun getAttributeValue (i: Int ): String ? open override fun getAttributeValue (namespace: String ?, name: String ?): String ? getColumnNumber [jvm] open override fun getColumnNumber (): Int getDepth [jvm] open override fun getDepth (): Int getEventType [jvm] open override fun getEventType (): Int getFeature [jvm] open override fun getFeature (p0: String ): Boolean getInputEncoding [jvm] open override fun getInputEncoding (): String getLineNumber [jvm] open override fun getLineNumber (): Int getName [jvm] open override fun getName (): String ? getNamespaceCount [jvm] open override fun getNamespaceCount (p0: Int ): Int getNamespacePrefix [jvm] open override fun getNamespacePrefix (p0: Int ): String getNamespaceUri [jvm] open override fun getNamespaceUri (p0: Int ): String getPositionDescription [jvm] open override fun getPositionDescription (): String getProperty [jvm] open override fun getProperty (p0: String ): Any getText [jvm] open override fun getText (): String getTextCharacters [jvm] open override fun getTextCharacters (p0: IntArray ): CharArray isAttributeDefault [jvm] open override fun isAttributeDefault (p0: Int ): Boolean isEmptyElementTag [jvm] open override fun isEmptyElementTag (): Boolean next [jvm] open operator override fun next (): Int nextTag [jvm] open override fun nextTag (): Int nextText [jvm] open override fun nextText (): String nextToken [jvm] open override fun nextToken (): Int require [jvm] open override fun require (p0: Int , p1: String , p2: String ) rootTag [jvm] abstract fun rootTag (): TagSnapshot setFeature [jvm] open override fun setFeature (p0: String , p1: Boolean ) setInput [jvm] open override fun setInput (p0: Reader ) open override fun setInput (p0: InputStream , p1: String ) setProperty [jvm] open override fun setProperty (p0: String , p1: Any ) skipSubTree [jvm] open fun skipSubTree () Properties \u00b6 Name Summary isWhitespace [jvm] val isWhitespace : Boolean namespace [jvm] var namespace : String prefix [jvm] val prefix : String","title":"InMemoryParser - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/#inmemoryparser","text":"[jvm]\\ abstract class InMemoryParser : KXmlParser Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/858f81bb7c350bc7a05daad36edefd21f74c8cef:android/src/com/android/tools/idea/rendering/parsers/LayoutPullParser.java;bpv=0;bpt=0 A parser implementation that walks an in-memory XML DOM tree.","title":"InMemoryParser"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/#constructors","text":"InMemoryParser [jvm] fun InMemoryParser ()","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/#functions","text":"Name Summary defineEntityReplacementText [jvm] open override fun defineEntityReplacementText (p0: String , p1: String ) getAttributeCount [jvm] open override fun getAttributeCount (): Int getAttributeName [jvm] open override fun getAttributeName (i: Int ): String ? getAttributeNamespace [jvm] open override fun getAttributeNamespace (i: Int ): String getAttributePrefix [jvm] open override fun getAttributePrefix (i: Int ): String ? getAttributeType [jvm] open override fun getAttributeType (p0: Int ): String getAttributeValue [jvm] open override fun getAttributeValue (i: Int ): String ? open override fun getAttributeValue (namespace: String ?, name: String ?): String ? getColumnNumber [jvm] open override fun getColumnNumber (): Int getDepth [jvm] open override fun getDepth (): Int getEventType [jvm] open override fun getEventType (): Int getFeature [jvm] open override fun getFeature (p0: String ): Boolean getInputEncoding [jvm] open override fun getInputEncoding (): String getLineNumber [jvm] open override fun getLineNumber (): Int getName [jvm] open override fun getName (): String ? getNamespaceCount [jvm] open override fun getNamespaceCount (p0: Int ): Int getNamespacePrefix [jvm] open override fun getNamespacePrefix (p0: Int ): String getNamespaceUri [jvm] open override fun getNamespaceUri (p0: Int ): String getPositionDescription [jvm] open override fun getPositionDescription (): String getProperty [jvm] open override fun getProperty (p0: String ): Any getText [jvm] open override fun getText (): String getTextCharacters [jvm] open override fun getTextCharacters (p0: IntArray ): CharArray isAttributeDefault [jvm] open override fun isAttributeDefault (p0: Int ): Boolean isEmptyElementTag [jvm] open override fun isEmptyElementTag (): Boolean next [jvm] open operator override fun next (): Int nextTag [jvm] open override fun nextTag (): Int nextText [jvm] open override fun nextText (): String nextToken [jvm] open override fun nextToken (): Int require [jvm] open override fun require (p0: Int , p1: String , p2: String ) rootTag [jvm] abstract fun rootTag (): TagSnapshot setFeature [jvm] open override fun setFeature (p0: String , p1: Boolean ) setInput [jvm] open override fun setInput (p0: Reader ) open override fun setInput (p0: InputStream , p1: String ) setProperty [jvm] open override fun setProperty (p0: String , p1: Any ) skipSubTree [jvm] open fun skipSubTree ()","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/#properties","text":"Name Summary isWhitespace [jvm] val isWhitespace : Boolean namespace [jvm] var namespace : String prefix [jvm] val prefix : String","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/-in-memory-parser/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / InMemoryParser / InMemoryParser InMemoryParser \u00b6 [jvm]\\ fun InMemoryParser ()","title":"InMemoryParser - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/-in-memory-parser/#inmemoryparser","text":"[jvm]\\ fun InMemoryParser ()","title":"InMemoryParser"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-attribute-count/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / InMemoryParser / getAttributeCount getAttributeCount \u00b6 [jvm]\\ open override fun getAttributeCount (): Int","title":"getAttributeCount - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-attribute-count/#getattributecount","text":"[jvm]\\ open override fun getAttributeCount (): Int","title":"getAttributeCount"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-attribute-name/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / InMemoryParser / getAttributeName getAttributeName \u00b6 [jvm]\\ open override fun getAttributeName (i: Int ): String ?","title":"getAttributeName - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-attribute-name/#getattributename","text":"[jvm]\\ open override fun getAttributeName (i: Int ): String ?","title":"getAttributeName"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-attribute-namespace/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / InMemoryParser / getAttributeNamespace getAttributeNamespace \u00b6 [jvm]\\ open override fun getAttributeNamespace (i: Int ): String","title":"getAttributeNamespace - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-attribute-namespace/#getattributenamespace","text":"[jvm]\\ open override fun getAttributeNamespace (i: Int ): String","title":"getAttributeNamespace"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-attribute-prefix/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / InMemoryParser / getAttributePrefix getAttributePrefix \u00b6 [jvm]\\ open override fun getAttributePrefix (i: Int ): String ?","title":"getAttributePrefix - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-attribute-prefix/#getattributeprefix","text":"[jvm]\\ open override fun getAttributePrefix (i: Int ): String ?","title":"getAttributePrefix"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-attribute-value/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / InMemoryParser / getAttributeValue getAttributeValue \u00b6 [jvm]\\ open override fun getAttributeValue (i: Int ): String ? open override fun getAttributeValue (namespace: String ?, name: String ?): String ?","title":"getAttributeValue - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-attribute-value/#getattributevalue","text":"[jvm]\\ open override fun getAttributeValue (i: Int ): String ? open override fun getAttributeValue (namespace: String ?, name: String ?): String ?","title":"getAttributeValue"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-depth/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / InMemoryParser / getDepth getDepth \u00b6 [jvm]\\ open override fun getDepth (): Int","title":"getDepth - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-depth/#getdepth","text":"[jvm]\\ open override fun getDepth (): Int","title":"getDepth"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-name/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / InMemoryParser / getName getName \u00b6 [jvm]\\ open override fun getName (): String ?","title":"getName - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/get-name/#getname","text":"[jvm]\\ open override fun getName (): String ?","title":"getName"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/next/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / InMemoryParser / next next \u00b6 [jvm]\\ open operator override fun next (): Int","title":"next - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/next/#next","text":"[jvm]\\ open operator override fun next (): Int","title":"next"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/root-tag/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / InMemoryParser / rootTag rootTag \u00b6 [jvm]\\ abstract fun rootTag (): TagSnapshot","title":"rootTag - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-in-memory-parser/root-tag/#roottag","text":"[jvm]\\ abstract fun rootTag (): TagSnapshot","title":"rootTag"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-resource-parser/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / ResourceParser ResourceParser \u00b6 [jvm]\\ class ResourceParser (inputStream: InputStream ) : KXmlParser An XML resource parser that creates a tree of TagSnapshot s Constructors \u00b6 ResourceParser [jvm] fun ResourceParser (inputStream: InputStream ) Types \u00b6 Name Summary Companion [jvm] object Companion Functions \u00b6 Name Summary createTagSnapshot [jvm] fun createTagSnapshot (): TagSnapshot defineEntityReplacementText [jvm] open override fun defineEntityReplacementText (p0: String , p1: String ) getAttributeName [jvm] open override fun getAttributeName (p0: Int ): String getAttributeNamespace [jvm] open override fun getAttributeNamespace (p0: Int ): String getAttributePrefix [jvm] open override fun getAttributePrefix (p0: Int ): String getAttributeType [jvm] open override fun getAttributeType (p0: Int ): String getAttributeValue [jvm] open override fun getAttributeValue (p0: Int ): String open override fun getAttributeValue (p0: String , p1: String ): String getColumnNumber [jvm] open override fun getColumnNumber (): Int getEventType [jvm] open override fun getEventType (): Int getFeature [jvm] open override fun getFeature (p0: String ): Boolean getInputEncoding [jvm] open override fun getInputEncoding (): String getLineNumber [jvm] open override fun getLineNumber (): Int getNamespaceCount [jvm] open override fun getNamespaceCount (p0: Int ): Int getNamespacePrefix [jvm] open override fun getNamespacePrefix (p0: Int ): String getNamespaceUri [jvm] open override fun getNamespaceUri (p0: Int ): String getPositionDescription [jvm] open override fun getPositionDescription (): String getProperty [jvm] open override fun getProperty (p0: String ): Any getText [jvm] open override fun getText (): String getTextCharacters [jvm] open override fun getTextCharacters (p0: IntArray ): CharArray isAttributeDefault [jvm] open override fun isAttributeDefault (p0: Int ): Boolean isEmptyElementTag [jvm] open override fun isEmptyElementTag (): Boolean next [jvm] open operator override fun next (): Int nextTag [jvm] open override fun nextTag (): Int nextText [jvm] open override fun nextText (): String nextToken [jvm] open override fun nextToken (): Int require [jvm] open override fun require (p0: Int , p1: String , p2: String ) setFeature [jvm] open override fun setFeature (p0: String , p1: Boolean ) setInput [jvm] open override fun setInput (p0: Reader ) open override fun setInput (p0: InputStream , p1: String ) setProperty [jvm] open override fun setProperty (p0: String , p1: Any ) skipSubTree [jvm] open fun skipSubTree () Properties \u00b6 Name Summary attributeCount [jvm] val attributeCount : Int depth [jvm] val depth : Int isWhitespace [jvm] val isWhitespace : Boolean name [jvm] val name : String namespace [jvm] var namespace : String prefix [jvm] val prefix : String","title":"ResourceParser - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-resource-parser/#resourceparser","text":"[jvm]\\ class ResourceParser (inputStream: InputStream ) : KXmlParser An XML resource parser that creates a tree of TagSnapshot s","title":"ResourceParser"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-resource-parser/#constructors","text":"ResourceParser [jvm] fun ResourceParser (inputStream: InputStream )","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-resource-parser/#types","text":"Name Summary Companion [jvm] object Companion","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-resource-parser/#functions","text":"Name Summary createTagSnapshot [jvm] fun createTagSnapshot (): TagSnapshot defineEntityReplacementText [jvm] open override fun defineEntityReplacementText (p0: String , p1: String ) getAttributeName [jvm] open override fun getAttributeName (p0: Int ): String getAttributeNamespace [jvm] open override fun getAttributeNamespace (p0: Int ): String getAttributePrefix [jvm] open override fun getAttributePrefix (p0: Int ): String getAttributeType [jvm] open override fun getAttributeType (p0: Int ): String getAttributeValue [jvm] open override fun getAttributeValue (p0: Int ): String open override fun getAttributeValue (p0: String , p1: String ): String getColumnNumber [jvm] open override fun getColumnNumber (): Int getEventType [jvm] open override fun getEventType (): Int getFeature [jvm] open override fun getFeature (p0: String ): Boolean getInputEncoding [jvm] open override fun getInputEncoding (): String getLineNumber [jvm] open override fun getLineNumber (): Int getNamespaceCount [jvm] open override fun getNamespaceCount (p0: Int ): Int getNamespacePrefix [jvm] open override fun getNamespacePrefix (p0: Int ): String getNamespaceUri [jvm] open override fun getNamespaceUri (p0: Int ): String getPositionDescription [jvm] open override fun getPositionDescription (): String getProperty [jvm] open override fun getProperty (p0: String ): Any getText [jvm] open override fun getText (): String getTextCharacters [jvm] open override fun getTextCharacters (p0: IntArray ): CharArray isAttributeDefault [jvm] open override fun isAttributeDefault (p0: Int ): Boolean isEmptyElementTag [jvm] open override fun isEmptyElementTag (): Boolean next [jvm] open operator override fun next (): Int nextTag [jvm] open override fun nextTag (): Int nextText [jvm] open override fun nextText (): String nextToken [jvm] open override fun nextToken (): Int require [jvm] open override fun require (p0: Int , p1: String , p2: String ) setFeature [jvm] open override fun setFeature (p0: String , p1: Boolean ) setInput [jvm] open override fun setInput (p0: Reader ) open override fun setInput (p0: InputStream , p1: String ) setProperty [jvm] open override fun setProperty (p0: String , p1: Any ) skipSubTree [jvm] open fun skipSubTree ()","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-resource-parser/#properties","text":"Name Summary attributeCount [jvm] val attributeCount : Int depth [jvm] val depth : Int isWhitespace [jvm] val isWhitespace : Boolean name [jvm] val name : String namespace [jvm] var namespace : String prefix [jvm] val prefix : String","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-resource-parser/-resource-parser/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / ResourceParser / ResourceParser ResourceParser \u00b6 [jvm]\\ fun ResourceParser (inputStream: InputStream )","title":"ResourceParser - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-resource-parser/-resource-parser/#resourceparser","text":"[jvm]\\ fun ResourceParser (inputStream: InputStream )","title":"ResourceParser"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-resource-parser/create-tag-snapshot/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / ResourceParser / createTagSnapshot createTagSnapshot \u00b6 [jvm]\\ fun createTagSnapshot (): TagSnapshot","title":"createTagSnapshot - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-resource-parser/create-tag-snapshot/#createtagsnapshot","text":"[jvm]\\ fun createTagSnapshot (): TagSnapshot","title":"createTagSnapshot"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-resource-parser/-companion/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / ResourceParser / Companion Companion \u00b6 [jvm]\\ object Companion","title":"Companion - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-resource-parser/-companion/#companion","text":"[jvm]\\ object Companion","title":"Companion"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / TagSnapshot TagSnapshot \u00b6 [jvm]\\ data class TagSnapshot (val name: String , val namespace: String , val prefix: String ?, val attributes: List < AttributeSnapshot >, val children: List < TagSnapshot >, val hasDeclaredAaptAttrs: Boolean = false) Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/mirror-goog-studio-master-dev:android/src/com/android/tools/idea/rendering/parsers/TagSnapshot.java A snapshot of the state of an xml tag. Used by the rendering architecture to be able to hold a consistent view of the layout files across a long rendering operation without holding read locks, as well as to for example let the property sheet evaluate and paint the values of properties as they were at the time of rendering, not as they are at the current instant. Constructors \u00b6 TagSnapshot [jvm] fun TagSnapshot (name: String , namespace: String , prefix: String ?, attributes: List < AttributeSnapshot >, children: List < TagSnapshot >, hasDeclaredAaptAttrs: Boolean = false) Types \u00b6 Name Summary Companion [jvm] object Companion Functions \u00b6 Name Summary printFormatted [jvm] fun printFormatted (): String Properties \u00b6 Name Summary attributes [jvm] val attributes : List < AttributeSnapshot > children [jvm] val children : List < TagSnapshot > hasDeclaredAaptAttrs [jvm] val hasDeclaredAaptAttrs : Boolean = false name [jvm] val name : String namespace [jvm] val namespace : String next [jvm] var next : TagSnapshot ? = null prefix [jvm] val prefix : String ?","title":"TagSnapshot - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/#tagsnapshot","text":"[jvm]\\ data class TagSnapshot (val name: String , val namespace: String , val prefix: String ?, val attributes: List < AttributeSnapshot >, val children: List < TagSnapshot >, val hasDeclaredAaptAttrs: Boolean = false) Derived from https://cs.android.com/android-studio/platform/tools/adt/idea/+/mirror-goog-studio-master-dev:android/src/com/android/tools/idea/rendering/parsers/TagSnapshot.java A snapshot of the state of an xml tag. Used by the rendering architecture to be able to hold a consistent view of the layout files across a long rendering operation without holding read locks, as well as to for example let the property sheet evaluate and paint the values of properties as they were at the time of rendering, not as they are at the current instant.","title":"TagSnapshot"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/#constructors","text":"TagSnapshot [jvm] fun TagSnapshot (name: String , namespace: String , prefix: String ?, attributes: List < AttributeSnapshot >, children: List < TagSnapshot >, hasDeclaredAaptAttrs: Boolean = false)","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/#types","text":"Name Summary Companion [jvm] object Companion","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/#functions","text":"Name Summary printFormatted [jvm] fun printFormatted (): String","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/#properties","text":"Name Summary attributes [jvm] val attributes : List < AttributeSnapshot > children [jvm] val children : List < TagSnapshot > hasDeclaredAaptAttrs [jvm] val hasDeclaredAaptAttrs : Boolean = false name [jvm] val name : String namespace [jvm] val namespace : String next [jvm] var next : TagSnapshot ? = null prefix [jvm] val prefix : String ?","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/-tag-snapshot/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / TagSnapshot / TagSnapshot TagSnapshot \u00b6 [jvm]\\ fun TagSnapshot (name: String , namespace: String , prefix: String ?, attributes: List < AttributeSnapshot >, children: List < TagSnapshot >, hasDeclaredAaptAttrs: Boolean = false)","title":"TagSnapshot - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/-tag-snapshot/#tagsnapshot","text":"[jvm]\\ fun TagSnapshot (name: String , namespace: String , prefix: String ?, attributes: List < AttributeSnapshot >, children: List < TagSnapshot >, hasDeclaredAaptAttrs: Boolean = false)","title":"TagSnapshot"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/attributes/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / TagSnapshot / attributes attributes \u00b6 [jvm]\\ val attributes : List < AttributeSnapshot >","title":"attributes - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/attributes/#attributes","text":"[jvm]\\ val attributes : List < AttributeSnapshot >","title":"attributes"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/children/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / TagSnapshot / children children \u00b6 [jvm]\\ val children : List < TagSnapshot >","title":"children - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/children/#children","text":"[jvm]\\ val children : List < TagSnapshot >","title":"children"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/has-declared-aapt-attrs/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / TagSnapshot / hasDeclaredAaptAttrs hasDeclaredAaptAttrs \u00b6 [jvm]\\ val hasDeclaredAaptAttrs : Boolean = false","title":"hasDeclaredAaptAttrs - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/has-declared-aapt-attrs/#hasdeclaredaaptattrs","text":"[jvm]\\ val hasDeclaredAaptAttrs : Boolean = false","title":"hasDeclaredAaptAttrs"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/name/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / TagSnapshot / name name \u00b6 [jvm]\\ val name : String","title":"name - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/namespace/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / TagSnapshot / namespace namespace \u00b6 [jvm]\\ val namespace : String","title":"namespace - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/namespace/#namespace","text":"[jvm]\\ val namespace : String","title":"namespace"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/next/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / TagSnapshot / next next \u00b6 [jvm]\\ var next : TagSnapshot ? = null","title":"next - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/next/#next","text":"[jvm]\\ var next : TagSnapshot ? = null","title":"next"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/prefix/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / TagSnapshot / prefix prefix \u00b6 [jvm]\\ val prefix : String ?","title":"prefix - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/prefix/#prefix","text":"[jvm]\\ val prefix : String ?","title":"prefix"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/print-formatted/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / TagSnapshot / printFormatted printFormatted \u00b6 [jvm]\\ fun printFormatted (): String","title":"printFormatted - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/print-formatted/#printformatted","text":"[jvm]\\ fun printFormatted (): String","title":"printFormatted"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/-companion/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / TagSnapshot / Companion Companion \u00b6 [jvm]\\ object Companion Properties \u00b6 Name Summary indent [jvm] var indent : Int","title":"Companion - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/-companion/#companion","text":"[jvm]\\ object Companion","title":"Companion"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/-companion/#properties","text":"Name Summary indent [jvm] var indent : Int","title":"Properties"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/-companion/indent/","text":"// paparazzi / app.cash.paparazzi.internal.parsers / TagSnapshot / Companion / indent indent \u00b6 [jvm]\\ var indent : Int","title":"indent - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.parsers/-tag-snapshot/-companion/indent/#indent","text":"[jvm]\\ var indent : Int","title":"indent"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/","text":"// paparazzi / app.cash.paparazzi.internal.resources Package-level declarations \u00b6 Types \u00b6 Name Summary BasicResourceItem [jvm] class BasicResourceItem (type: ResourceType, name: String , visibility: ResourceVisibility, file: File , tag: Element ?, repository: SingleNamespaceResourceRepository) : ResourceItemWithVisibility","title":"Package-level declarations - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/#types","text":"Name Summary BasicResourceItem [jvm] class BasicResourceItem (type: ResourceType, name: String , visibility: ResourceVisibility, file: File , tag: Element ?, repository: SingleNamespaceResourceRepository) : ResourceItemWithVisibility","title":"Types"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem BasicResourceItem \u00b6 [jvm]\\ class BasicResourceItem (type: ResourceType, name: String , visibility: ResourceVisibility, file: File , tag: Element ?, repository: SingleNamespaceResourceRepository) : ResourceItemWithVisibility Constructors \u00b6 BasicResourceItem [jvm] fun BasicResourceItem (type: ResourceType, name: String , visibility: ResourceVisibility, file: File , tag: Element ?, repository: SingleNamespaceResourceRepository) Functions \u00b6 Name Summary getConfiguration [jvm] open override fun getConfiguration (): FolderConfiguration getKey [jvm] open override fun getKey (): String getLibraryName [jvm] open override fun getLibraryName (): Nothing ? getName [jvm] open override fun getName (): String getNamespace [jvm] open override fun getNamespace (): ResourceNamespace getOriginalSource [jvm] open fun getOriginalSource (): PathString getQualifiedNameWithType [jvm] open fun getQualifiedNameWithType (): String getReferenceToSelf [jvm] open override fun getReferenceToSelf (): ResourceReference getRepository [jvm] open override fun getRepository (): SingleNamespaceResourceRepository getResourceValue [jvm] open override fun getResourceValue (): ResourceValue getSource [jvm] open override fun getSource (): PathString getType [jvm] open override fun getType (): ResourceType getVisibility [jvm] open override fun getVisibility (): ResourceVisibility isFileBased [jvm] open override fun isFileBased (): Boolean","title":"BasicResourceItem - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/#basicresourceitem","text":"[jvm]\\ class BasicResourceItem (type: ResourceType, name: String , visibility: ResourceVisibility, file: File , tag: Element ?, repository: SingleNamespaceResourceRepository) : ResourceItemWithVisibility","title":"BasicResourceItem"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/#constructors","text":"BasicResourceItem [jvm] fun BasicResourceItem (type: ResourceType, name: String , visibility: ResourceVisibility, file: File , tag: Element ?, repository: SingleNamespaceResourceRepository)","title":"Constructors"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/#functions","text":"Name Summary getConfiguration [jvm] open override fun getConfiguration (): FolderConfiguration getKey [jvm] open override fun getKey (): String getLibraryName [jvm] open override fun getLibraryName (): Nothing ? getName [jvm] open override fun getName (): String getNamespace [jvm] open override fun getNamespace (): ResourceNamespace getOriginalSource [jvm] open fun getOriginalSource (): PathString getQualifiedNameWithType [jvm] open fun getQualifiedNameWithType (): String getReferenceToSelf [jvm] open override fun getReferenceToSelf (): ResourceReference getRepository [jvm] open override fun getRepository (): SingleNamespaceResourceRepository getResourceValue [jvm] open override fun getResourceValue (): ResourceValue getSource [jvm] open override fun getSource (): PathString getType [jvm] open override fun getType (): ResourceType getVisibility [jvm] open override fun getVisibility (): ResourceVisibility isFileBased [jvm] open override fun isFileBased (): Boolean","title":"Functions"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/-basic-resource-item/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem / BasicResourceItem BasicResourceItem \u00b6 [jvm]\\ fun BasicResourceItem (type: ResourceType, name: String , visibility: ResourceVisibility, file: File , tag: Element ?, repository: SingleNamespaceResourceRepository)","title":"BasicResourceItem - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/-basic-resource-item/#basicresourceitem","text":"[jvm]\\ fun BasicResourceItem (type: ResourceType, name: String , visibility: ResourceVisibility, file: File , tag: Element ?, repository: SingleNamespaceResourceRepository)","title":"BasicResourceItem"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-configuration/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem / getConfiguration getConfiguration \u00b6 [jvm]\\ open override fun getConfiguration (): FolderConfiguration","title":"getConfiguration - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-configuration/#getconfiguration","text":"[jvm]\\ open override fun getConfiguration (): FolderConfiguration","title":"getConfiguration"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-key/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem / getKey getKey \u00b6 [jvm]\\ open override fun getKey (): String","title":"getKey - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-key/#getkey","text":"[jvm]\\ open override fun getKey (): String","title":"getKey"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-library-name/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem / getLibraryName getLibraryName \u00b6 [jvm]\\ open override fun getLibraryName (): Nothing ?","title":"getLibraryName - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-library-name/#getlibraryname","text":"[jvm]\\ open override fun getLibraryName (): Nothing ?","title":"getLibraryName"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-name/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem / getName getName \u00b6 [jvm]\\ open override fun getName (): String","title":"getName - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-name/#getname","text":"[jvm]\\ open override fun getName (): String","title":"getName"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-namespace/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem / getNamespace getNamespace \u00b6 [jvm]\\ open override fun getNamespace (): ResourceNamespace","title":"getNamespace - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-namespace/#getnamespace","text":"[jvm]\\ open override fun getNamespace (): ResourceNamespace","title":"getNamespace"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-reference-to-self/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem / getReferenceToSelf getReferenceToSelf \u00b6 [jvm]\\ open override fun getReferenceToSelf (): ResourceReference","title":"getReferenceToSelf - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-reference-to-self/#getreferencetoself","text":"[jvm]\\ open override fun getReferenceToSelf (): ResourceReference","title":"getReferenceToSelf"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-repository/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem / getRepository getRepository \u00b6 [jvm]\\ open override fun getRepository (): SingleNamespaceResourceRepository","title":"getRepository - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-repository/#getrepository","text":"[jvm]\\ open override fun getRepository (): SingleNamespaceResourceRepository","title":"getRepository"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-resource-value/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem / getResourceValue getResourceValue \u00b6 [jvm]\\ open override fun getResourceValue (): ResourceValue","title":"getResourceValue - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-resource-value/#getresourcevalue","text":"[jvm]\\ open override fun getResourceValue (): ResourceValue","title":"getResourceValue"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-source/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem / getSource getSource \u00b6 [jvm]\\ open override fun getSource (): PathString","title":"getSource - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-source/#getsource","text":"[jvm]\\ open override fun getSource (): PathString","title":"getSource"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-type/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem / getType getType \u00b6 [jvm]\\ open override fun getType (): ResourceType","title":"getType - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-type/#gettype","text":"[jvm]\\ open override fun getType (): ResourceType","title":"getType"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-visibility/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem / getVisibility getVisibility \u00b6 [jvm]\\ open override fun getVisibility (): ResourceVisibility","title":"getVisibility - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/get-visibility/#getvisibility","text":"[jvm]\\ open override fun getVisibility (): ResourceVisibility","title":"getVisibility"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/is-file-based/","text":"// paparazzi / app.cash.paparazzi.internal.resources / BasicResourceItem / isFileBased isFileBased \u00b6 [jvm]\\ open override fun isFileBased (): Boolean","title":"isFileBased - Paparazzi"},{"location":"1.x/paparazzi/app.cash.paparazzi.internal.resources/-basic-resource-item/is-file-based/#isfilebased","text":"[jvm]\\ open override fun isFileBased (): Boolean","title":"isFileBased"}]}